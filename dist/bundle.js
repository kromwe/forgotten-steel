/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/style.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/style.css ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Global Styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Courier New', monospace;\n  background-color: #000;\n  color: #fff;\n  height: 100vh;\n  overflow: hidden;\n}\n\n#game-container {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n/* Screen Management */\n.screen {\n  display: none;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.screen.active {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n/* Title Screen */\n#title-screen {\n  background-color: #000;\n  text-align: left;\n}\n\n#title-screen h1 {\n  font-size: 4rem;\n  margin-bottom: 2rem;\n  color: #f8d000;\n  text-shadow: 0 0 10px #f8a000;\n  animation: glow 2s infinite alternate;\n}\n\n@keyframes glow {\n  from {\n    text-shadow: 0 0 10px #f8a000;\n  }\n  to {\n    text-shadow: 0 0 20px #f8a000, 0 0 30px #f88000;\n  }\n}\n\n.title-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.title-content p {\n  font-size: 1.5rem;\n  color: #ccc;\n  margin-bottom: 2rem;\n}\n\n.title-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n}\n\n.menu {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\nbutton {\n  padding: 0.75rem 2rem;\n  font-size: 1rem;\n  background-color: #333;\n  color: #fff;\n  border: 2px solid #f8d000;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-family: 'Courier New', monospace;\n}\n\nbutton:hover {\n  background-color: #f8d000;\n  color: #000;\n}\n\n/* Game Over Screen */\n#game-over-screen {\n  background-color: #000;\n  text-align: center;\n}\n\n#game-over-screen h2 {\n  font-size: 3rem;\n  margin-bottom: 2rem;\n  color: #f00;\n  text-shadow: 0 0 10px #f00;\n}\n\n.game-over-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  padding: 2rem;\n}\n\n.game-over-content p {\n  font-size: 1.5rem;\n  color: #ccc;\n  margin-bottom: 2rem;\n}\n\n.game-over-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n}\n\n/* Character Creation */\n#character-creation-screen {\n  background-color: #000;\n  text-align: left;\n}\n\n.character-creation-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n#character-creation-screen h2 {\n  font-size: 4rem;\n  margin-bottom: 2rem;\n  color: #f8d000;\n  text-shadow: 0 0 10px #f8a000;\n  animation: glow 2s infinite alternate;\n}\n\n#character-creation-screen p {\n  font-size: 1.5rem;\n  color: #ccc;\n  margin-bottom: 2rem;\n}\n\n.name-input {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.name-input label {\n  font-size: 1rem;\n  color: #f8d000;\n}\n\ninput[type=\"text\"] {\n  padding: 0.75rem 2rem;\n  font-size: 1rem;\n  background-color: #333;\n  color: #fff;\n  border: 2px solid #f8d000;\n  font-family: 'Courier New', monospace;\n  text-align: left;\n  min-width: 300px;\n}\n\ninput[type=\"text\"]:focus {\n  border-color: #f8d000;\n  outline: none;\n  background-color: #444;\n}\n\n/* Game Screen */\n#game-screen {\n  display: flex;\n  flex-direction: column;\n}\n\n/* WebGL Scene Container */\n#webgl-container {\n  height: 60%;\n  width: 100%;\n  background-color: #111;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#webgl-canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n  background-color: #000;\n}\n\n/* Terminal Container */\n#terminal-container {\n  height: 60%;\n  width: 100%;\n  background-color: #000;\n  border-top: 2px solid #f8d000;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n}\n\n#terminal-output {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 0.5rem;\n  font-size: 1rem;\n  line-height: 1.4;\n  color: #0f0;\n}\n\n#terminal-input-container {\n  display: flex;\n  padding: 0.5rem 0;\n  border-top: 1px solid #333;\n}\n\n.prompt {\n  color: #0f0;\n  font-size: 1rem;\n  margin-right: 0.5rem;\n}\n\n#terminal-input {\n  flex-grow: 1;\n  background-color: transparent;\n  border: none;\n  color: #0f0;\n  font-size: 1rem;\n}\n\n#terminal-input:focus {\n  outline: none;\n}\n\n/* Message Styling */\n.message {\n  margin-bottom: 0.5rem;\n}\n\n.player-input {\n  color: #0ff;\n}\n\n.system-message {\n  color: #ff0;\n}\n\n.error-message {\n  color: #f00;\n}\n\n/* Mobile-Friendly Styles */\n@media screen and (max-width: 768px) {\n  /* Larger touch-friendly buttons */\n  button {\n    padding: 1rem 2rem;\n    font-size: 1.2rem;\n    min-height: 48px;\n    min-width: 120px;\n    margin: 0.5rem;\n  }\n  \n  /* Responsive title */\n  #title-screen h1 {\n    font-size: 2.5rem;\n  }\n  \n  /* Better spacing for mobile */\n  .title-content {\n    padding: 1rem;\n  }\n  \n  .title-buttons {\n    gap: 1.5rem;\n  }\n  \n  /* Character creation improvements */\n  .character-creation-content {\n    padding: 1rem;\n    max-width: 90%;\n  }\n  \n  .name-input {\n    margin: 1.5rem 0;\n  }\n  \n  #player-name {\n    padding: 0.75rem;\n    font-size: 1.1rem;\n    min-height: 48px;\n  }\n  \n  /* Terminal improvements for mobile */\n  #terminal-container {\n    font-size: 0.9rem;\n  }\n  \n  #terminal-input {\n    font-size: 1rem;\n    padding: 0.5rem;\n    min-height: 44px;\n  }\n  \n  #terminal-input-container {\n    padding: 0.75rem;\n  }\n  \n  .prompt {\n    font-size: 1rem;\n  }\n  \n  /* Game over screen improvements */\n  .game-over-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    align-items: center;\n    margin-top: 2rem;\n  }\n  \n  .game-over-content {\n    padding: 1rem;\n    text-align: center;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  /* Extra small screens */\n  #title-screen h1 {\n    font-size: 2rem;\n  }\n  \n  button {\n    padding: 0.875rem 1.5rem;\n    font-size: 1.1rem;\n  }\n  \n  #terminal-container {\n    font-size: 0.8rem;\n  }\n  \n  #terminal-input {\n    font-size: 0.9rem;\n  }\n}\n\n/* Touch-friendly improvements for all devices */\n@media (hover: none) and (pointer: coarse) {\n  /* Touch devices */\n  button:hover {\n    background-color: #555;\n    border-color: #ffa000;\n  }\n  \n  button:active {\n    background-color: #666;\n    transform: scale(0.98);\n  }\n  \n  /* Prevent text selection on touch */\n  .title-content, .character-creation-content, .game-over-content {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  \n  /* Allow text selection in terminal */\n  #terminal-output {\n    -webkit-user-select: text;\n    -moz-user-select: text;\n    -ms-user-select: text;\n    user-select: text;\n  }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  @keyframes glow {\n    from, to {\n      text-shadow: 0 0 10px #f8a000;\n    }\n  }\n  \n  button {\n    transition: none;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Global Styles */\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  font-family: 'Courier New', monospace;\\n  background-color: #000;\\n  color: #fff;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n\\n#game-container {\\n  width: 100%;\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n}\\n\\n/* Screen Management */\\n.screen {\\n  display: none;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.screen.active {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 10;\\n}\\n\\n/* Title Screen */\\n#title-screen {\\n  background-color: #000;\\n  text-align: left;\\n}\\n\\n#title-screen h1 {\\n  font-size: 4rem;\\n  margin-bottom: 2rem;\\n  color: #f8d000;\\n  text-shadow: 0 0 10px #f8a000;\\n  animation: glow 2s infinite alternate;\\n}\\n\\n@keyframes glow {\\n  from {\\n    text-shadow: 0 0 10px #f8a000;\\n  }\\n  to {\\n    text-shadow: 0 0 20px #f8a000, 0 0 30px #f88000;\\n  }\\n}\\n\\n.title-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 2rem;\\n}\\n\\n.title-content p {\\n  font-size: 1.5rem;\\n  color: #ccc;\\n  margin-bottom: 2rem;\\n}\\n\\n.title-buttons {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  align-items: center;\\n}\\n\\n.menu {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n}\\n\\nbutton {\\n  padding: 0.75rem 2rem;\\n  font-size: 1rem;\\n  background-color: #333;\\n  color: #fff;\\n  border: 2px solid #f8d000;\\n  cursor: pointer;\\n  transition: all 0.3s;\\n  font-family: 'Courier New', monospace;\\n}\\n\\nbutton:hover {\\n  background-color: #f8d000;\\n  color: #000;\\n}\\n\\n/* Game Over Screen */\\n#game-over-screen {\\n  background-color: #000;\\n  text-align: center;\\n}\\n\\n#game-over-screen h2 {\\n  font-size: 3rem;\\n  margin-bottom: 2rem;\\n  color: #f00;\\n  text-shadow: 0 0 10px #f00;\\n}\\n\\n.game-over-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 2rem;\\n  padding: 2rem;\\n}\\n\\n.game-over-content p {\\n  font-size: 1.5rem;\\n  color: #ccc;\\n  margin-bottom: 2rem;\\n}\\n\\n.game-over-buttons {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  align-items: center;\\n}\\n\\n/* Character Creation */\\n#character-creation-screen {\\n  background-color: #000;\\n  text-align: left;\\n}\\n\\n.character-creation-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 2rem;\\n}\\n\\n#character-creation-screen h2 {\\n  font-size: 4rem;\\n  margin-bottom: 2rem;\\n  color: #f8d000;\\n  text-shadow: 0 0 10px #f8a000;\\n  animation: glow 2s infinite alternate;\\n}\\n\\n#character-creation-screen p {\\n  font-size: 1.5rem;\\n  color: #ccc;\\n  margin-bottom: 2rem;\\n}\\n\\n.name-input {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  align-items: center;\\n  margin-bottom: 2rem;\\n}\\n\\n.name-input label {\\n  font-size: 1rem;\\n  color: #f8d000;\\n}\\n\\ninput[type=\\\"text\\\"] {\\n  padding: 0.75rem 2rem;\\n  font-size: 1rem;\\n  background-color: #333;\\n  color: #fff;\\n  border: 2px solid #f8d000;\\n  font-family: 'Courier New', monospace;\\n  text-align: left;\\n  min-width: 300px;\\n}\\n\\ninput[type=\\\"text\\\"]:focus {\\n  border-color: #f8d000;\\n  outline: none;\\n  background-color: #444;\\n}\\n\\n/* Game Screen */\\n#game-screen {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n/* WebGL Scene Container */\\n#webgl-container {\\n  height: 60%;\\n  width: 100%;\\n  background-color: #111;\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n#webgl-canvas {\\n  width: 100%;\\n  height: 100%;\\n  display: block;\\n  background-color: #000;\\n}\\n\\n/* Terminal Container */\\n#terminal-container {\\n  height: 60%;\\n  width: 100%;\\n  background-color: #000;\\n  border-top: 2px solid #f8d000;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 1rem;\\n}\\n\\n#terminal-output {\\n  flex-grow: 1;\\n  overflow-y: auto;\\n  padding: 0.5rem;\\n  font-size: 1rem;\\n  line-height: 1.4;\\n  color: #0f0;\\n}\\n\\n#terminal-input-container {\\n  display: flex;\\n  padding: 0.5rem 0;\\n  border-top: 1px solid #333;\\n}\\n\\n.prompt {\\n  color: #0f0;\\n  font-size: 1rem;\\n  margin-right: 0.5rem;\\n}\\n\\n#terminal-input {\\n  flex-grow: 1;\\n  background-color: transparent;\\n  border: none;\\n  color: #0f0;\\n  font-size: 1rem;\\n}\\n\\n#terminal-input:focus {\\n  outline: none;\\n}\\n\\n/* Message Styling */\\n.message {\\n  margin-bottom: 0.5rem;\\n}\\n\\n.player-input {\\n  color: #0ff;\\n}\\n\\n.system-message {\\n  color: #ff0;\\n}\\n\\n.error-message {\\n  color: #f00;\\n}\\n\\n/* Mobile-Friendly Styles */\\n@media screen and (max-width: 768px) {\\n  /* Larger touch-friendly buttons */\\n  button {\\n    padding: 1rem 2rem;\\n    font-size: 1.2rem;\\n    min-height: 48px;\\n    min-width: 120px;\\n    margin: 0.5rem;\\n  }\\n  \\n  /* Responsive title */\\n  #title-screen h1 {\\n    font-size: 2.5rem;\\n  }\\n  \\n  /* Better spacing for mobile */\\n  .title-content {\\n    padding: 1rem;\\n  }\\n  \\n  .title-buttons {\\n    gap: 1.5rem;\\n  }\\n  \\n  /* Character creation improvements */\\n  .character-creation-content {\\n    padding: 1rem;\\n    max-width: 90%;\\n  }\\n  \\n  .name-input {\\n    margin: 1.5rem 0;\\n  }\\n  \\n  #player-name {\\n    padding: 0.75rem;\\n    font-size: 1.1rem;\\n    min-height: 48px;\\n  }\\n  \\n  /* Terminal improvements for mobile */\\n  #terminal-container {\\n    font-size: 0.9rem;\\n  }\\n  \\n  #terminal-input {\\n    font-size: 1rem;\\n    padding: 0.5rem;\\n    min-height: 44px;\\n  }\\n  \\n  #terminal-input-container {\\n    padding: 0.75rem;\\n  }\\n  \\n  .prompt {\\n    font-size: 1rem;\\n  }\\n  \\n  /* Game over screen improvements */\\n  .game-over-buttons {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n    align-items: center;\\n    margin-top: 2rem;\\n  }\\n  \\n  .game-over-content {\\n    padding: 1rem;\\n    text-align: center;\\n  }\\n}\\n\\n@media screen and (max-width: 480px) {\\n  /* Extra small screens */\\n  #title-screen h1 {\\n    font-size: 2rem;\\n  }\\n  \\n  button {\\n    padding: 0.875rem 1.5rem;\\n    font-size: 1.1rem;\\n  }\\n  \\n  #terminal-container {\\n    font-size: 0.8rem;\\n  }\\n  \\n  #terminal-input {\\n    font-size: 0.9rem;\\n  }\\n}\\n\\n/* Touch-friendly improvements for all devices */\\n@media (hover: none) and (pointer: coarse) {\\n  /* Touch devices */\\n  button:hover {\\n    background-color: #555;\\n    border-color: #ffa000;\\n  }\\n  \\n  button:active {\\n    background-color: #666;\\n    transform: scale(0.98);\\n  }\\n  \\n  /* Prevent text selection on touch */\\n  .title-content, .character-creation-content, .game-over-content {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  /* Allow text selection in terminal */\\n  #terminal-output {\\n    -webkit-user-select: text;\\n    -moz-user-select: text;\\n    -ms-user-select: text;\\n    user-select: text;\\n  }\\n}\\n\\n/* Accessibility improvements */\\n@media (prefers-reduced-motion: reduce) {\\n  @keyframes glow {\\n    from, to {\\n      text-shadow: 0 0 10px #f8a000;\\n    }\\n  }\\n  \\n  button {\\n    transition: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/css/style.css\n\n}");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdC1vZi1tZW1vcnkvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n\n}");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

eval("{\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1ZXN0LW9mLW1lbW9yeS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdC1vZi1tZW1vcnkvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1ZXN0LW9mLW1lbW9yeS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1ZXN0LW9mLW1lbW9yeS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdC1vZi1tZW1vcnkvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1ZXN0LW9mLW1lbW9yeS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1ZXN0LW9mLW1lbW9yeS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzPzFkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n\n}");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("{/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3NzL3N0eWxlLmNzcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNBLE1BQWtHO0FBQ2xHLE1BQXdGO0FBQ3hGLE1BQStGO0FBQy9GLE1BQWtIO0FBQ2xILE1BQTJHO0FBQzNHLE1BQTJHO0FBQzNHLE1BQXNHO0FBQ3RHO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsc0ZBQU87Ozs7QUFJZ0Q7QUFDeEUsT0FBTyxzRUFBZSxzRkFBTyxJQUFJLHNGQUFPLFVBQVUsc0ZBQU8sbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdC1vZi1tZW1vcnkvLi9zcmMvY3NzL3N0eWxlLmNzcz85ZmNkIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/css/style.css\n\n}");

/***/ }),

/***/ "./src/js/combatSystem.js":
/*!********************************!*\
  !*** ./src/js/combatSystem.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CombatSystem: () => (/* binding */ CombatSystem)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Combat system for handling enemy encounters\n\nvar CombatSystem = /*#__PURE__*/function () {\n  function CombatSystem(gameState, terminal, storyEngine) {\n    _classCallCheck(this, CombatSystem);\n    this.gameState = gameState;\n    this.terminal = terminal;\n    this.storyEngine = storyEngine;\n    this.inCombat = false;\n    this.currentEnemy = null;\n    this.playerTurn = true;\n    this.initializeCommandHandlers();\n  }\n  return _createClass(CombatSystem, [{\n    key: \"continueCombatInit\",\n    value: function continueCombatInit() {\n      // Set up combat command handlers\n      this.setupCombatHandlers();\n      // Display enemy stats\n      this.terminal.print(\"\".concat(this.currentEnemy.name, \"'s Health: \").concat(this.currentEnemy.health, \"/\").concat(this.currentEnemy.maxHealth), \"enemy-stats\");\n\n      // Display player stats\n      this.terminal.print(\"Your Health: \".concat(this.gameState.health, \"/\").concat(this.gameState.maxHealth), \"player-stats\");\n\n      // Display available combat actions\n      this.showCombatActions();\n    }\n  }, {\n    key: \"setupCombatHandlers\",\n    value: function setupCombatHandlers() {\n      var _this = this;\n      // Store original command handlers to restore later\n      this.originalHandlers = _objectSpread({}, this.terminal.commandHandlers);\n\n      // Clear existing handlers\n      this.terminal.commandHandlers = {};\n\n      // Attack command during combat\n      this.terminal.registerCommand('^(attack|fight|hit|strike)$', function () {\n        if (_this.inCombat && _this.playerTurn) {\n          _this.playerAttack();\n        } else if (!_this.inCombat) {\n          _this.terminal.print(\"There's nothing to attack right now.\", 'error-message');\n        } else {\n          _this.terminal.print(\"It's not your turn to attack.\", 'error-message');\n        }\n      });\n\n      // Defend command during combat\n      this.terminal.registerCommand('^(defend|block|parry)$', function () {\n        if (_this.inCombat && _this.playerTurn) {\n          _this.playerDefend();\n        } else if (!_this.inCombat) {\n          _this.terminal.print(\"There's no need to defend right now.\", 'error-message');\n        } else {\n          _this.terminal.print(\"It's not your turn to defend.\", 'error-message');\n        }\n      });\n\n      // Use item during combat\n      this.terminal.registerCommand('^(use) (.+)$', function (input) {\n        if (_this.inCombat && _this.playerTurn) {\n          var itemName = input.match(/^use\\s+(.+)$/i)[1].toLowerCase();\n          _this.useItemInCombat(itemName);\n        } else if (!_this.inCombat) {\n          // Let the story engine handle normal item use\n          return false; // Don't handle the command here\n        } else {\n          _this.terminal.print(\"It's not your turn to use an item.\", 'error-message');\n        }\n      });\n\n      // Flee command during combat\n      this.terminal.registerCommand('^(flee|escape|run)$', function () {\n        if (_this.inCombat && _this.playerTurn) {\n          _this.attemptFlee();\n        } else if (!_this.inCombat) {\n          _this.terminal.print(\"There's nothing to flee from right now.\", 'error-message');\n        } else {\n          _this.terminal.print(\"It's not your turn to flee.\", 'error-message');\n        }\n      });\n\n      // Switch weapon command during combat\n      this.terminal.registerCommand('^(switch|change) weapon$', function () {\n        if (_this.inCombat && _this.playerTurn) {\n          _this.showWeaponSwitchOptions();\n        } else if (!_this.inCombat) {\n          _this.terminal.print(\"You can switch weapons outside of combat using 'equip [weapon name]'.\", 'error-message');\n        } else {\n          _this.terminal.print(\"It's not your turn to switch weapons.\", 'error-message');\n        }\n      });\n    }\n  }, {\n    key: \"displayWeaponStatus\",\n    value: function displayWeaponStatus() {\n      var _this2 = this;\n      this.terminal.print(\"\\n--- WEAPON STATUS ---\", \"combat-header\");\n      if (this.gameState.equippedWeapon) {\n        this.terminal.print(\"Currently equipped: \".concat(this.gameState.equippedWeapon.name, \" (Damage: \").concat(this.gameState.equippedWeapon.damage, \")\"), \"weapon-equipped\");\n      } else {\n        this.terminal.print(\"Currently equipped: Bare hands (Damage: 5)\", \"weapon-equipped\");\n      }\n      var availableWeapons = this.getAvailableWeapons();\n      if (availableWeapons.length > 0) {\n        this.terminal.print(\"\\nWeapons in inventory:\", \"weapon-list-header\");\n        availableWeapons.forEach(function (weapon, index) {\n          var equippedIndicator = _this2.gameState.equippedWeapon && _this2.gameState.equippedWeapon.id === weapon.id ? \" (equipped)\" : \"\";\n          _this2.terminal.print(\"- \".concat(weapon.name, \" (Damage: \").concat(weapon.damage, \")\").concat(equippedIndicator), \"weapon-option\");\n        });\n        this.terminal.print(\"Type 'switch weapon' to change weapons during combat.\", \"combat-hint\");\n      }\n    }\n  }, {\n    key: \"showWeaponSwitchOptions\",\n    value: function showWeaponSwitchOptions() {\n      var _this3 = this;\n      var availableWeapons = this.getAvailableWeapons();\n      if (availableWeapons.length === 0) {\n        this.terminal.print(\"You have no weapons in your inventory to switch to.\", \"error-message\");\n        return;\n      }\n      this.terminal.print(\"\\nSelect a weapon to switch to:\", \"combat-prompt\");\n      availableWeapons.forEach(function (weapon, index) {\n        var equippedIndicator = _this3.gameState.equippedWeapon && _this3.gameState.equippedWeapon.id === weapon.id ? \" (currently equipped)\" : \"\";\n        _this3.terminal.print(\"\".concat(index + 1, \". \").concat(weapon.name, \" (Damage: \").concat(weapon.damage, \")\").concat(equippedIndicator), \"weapon-option\");\n      });\n      this.terminal.print(\"\\nType the number of the weapon to switch to it, or 'cancel' to return to combat:\", \"combat-prompt\");\n\n      // Set up temporary command handlers for weapon switching\n      this.setupWeaponSwitchHandlers(availableWeapons);\n    }\n  }, {\n    key: \"setupWeaponSwitchHandlers\",\n    value: function setupWeaponSwitchHandlers(availableWeapons) {\n      var _this4 = this;\n      // Store current combat handlers to restore later\n      this.combatHandlers = _objectSpread({}, this.terminal.commandHandlers);\n\n      // Clear existing handlers\n      this.terminal.commandHandlers = {};\n\n      // Add weapon switch handlers\n      var _loop = function _loop() {\n        var weaponIndex = i;\n        _this4.terminal.registerCommand(\"^\".concat(i + 1, \"$\"), function () {\n          var weapon = availableWeapons[weaponIndex];\n          if (_this4.gameState.equippedWeapon && _this4.gameState.equippedWeapon.id === weapon.id) {\n            _this4.terminal.print(\"You already have the \".concat(weapon.name, \" equipped.\"), \"combat-info\");\n          } else if (_this4.gameState.equipWeapon(weapon.id)) {\n            _this4.terminal.print(\"You switch to your \".concat(weapon.name, \".\"), \"combat-equip\");\n          } else {\n            _this4.terminal.print(\"Failed to equip the \".concat(weapon.name, \".\"), \"error-message\");\n          }\n          _this4.restoreCombatHandlers();\n        });\n      };\n      for (var i = 0; i < availableWeapons.length; i++) {\n        _loop();\n      }\n\n      // Add 'cancel' option\n      this.terminal.registerCommand(\"^(cancel|back|return)$\", function () {\n        _this4.terminal.print(\"You decide to keep your current weapon.\", \"combat-choice\");\n        _this4.restoreCombatHandlers();\n      });\n    }\n  }, {\n    key: \"restoreCombatHandlers\",\n    value: function restoreCombatHandlers() {\n      // Restore combat command handlers\n      this.terminal.commandHandlers = this.combatHandlers;\n      this.combatHandlers = null;\n    }\n  }, {\n    key: \"promptBranchChoice\",\n    value: function promptBranchChoice() {\n      this.terminal.print(\"\\nYou're about to fight with your bare hands!\", 'combat-warning');\n      this.terminal.print(\"You notice a branch nearby that could serve as a weapon.\", 'combat-suggestion');\n      this.terminal.print(\"\\nWhat would you like to do?\", 'combat-prompt');\n      this.terminal.print(\"1. Take the branch and equip it\", 'combat-option');\n      this.terminal.print(\"2. Fight with bare hands\", 'combat-option');\n      this.terminal.print(\"\\nType '1' or '2' to choose:\", 'combat-prompt');\n      this.setupBranchChoiceHandlers();\n    }\n  }, {\n    key: \"setupBranchChoiceHandlers\",\n    value: function setupBranchChoiceHandlers() {\n      var _this5 = this;\n      // Store original handlers\n      this.originalHandlers = _objectSpread({}, this.terminal.commandHandlers);\n\n      // Clear existing handlers\n      this.terminal.commandHandlers = {};\n\n      // Handler for choice 1 - take branch\n      this.terminal.registerCommand('^1$', function () {\n        _this5.restoreCommandHandlers();\n        _this5.takeBranchAndEquip();\n      });\n\n      // Handler for choice 2 - fight bare handed\n      this.terminal.registerCommand('^2$', function () {\n        _this5.restoreCommandHandlers();\n        _this5.terminal.print(\"You decide to fight with your bare hands. Brave, but dangerous!\", 'combat-choice');\n        _this5.continueCombatInit();\n      });\n\n      // Handler for invalid input\n      this.terminal.registerCommand('.*', function () {\n        _this5.terminal.print(\"Please type '1' to take the branch or '2' to fight bare handed.\", 'error-message');\n      });\n    }\n  }, {\n    key: \"takeBranchAndEquip\",\n    value: function takeBranchAndEquip() {\n      var currentLocation = this.storyEngine.locations[this.gameState.currentLocation];\n      var branchItem = this.storyEngine.items['branch'];\n\n      // Remove branch from location\n      var branchIndex = currentLocation.items.indexOf('branch');\n      if (branchIndex > -1) {\n        currentLocation.items.splice(branchIndex, 1);\n      }\n\n      // Add to inventory\n      this.gameState.addToInventory(_objectSpread({\n        id: 'branch'\n      }, branchItem));\n\n      // Equip the branch\n      this.gameState.equipWeapon(_objectSpread({\n        id: 'branch'\n      }, branchItem));\n      this.terminal.print(\"You quickly grab the \".concat(branchItem.name.toLowerCase(), \" and ready it as a weapon!\"), 'action-result');\n      this.terminal.print(\"\".concat(branchItem.name, \" equipped!\"), 'equip-success');\n\n      // Continue with combat\n      this.continueCombatInit();\n    }\n  }, {\n    key: \"getAvailableWeapons\",\n    value: function getAvailableWeapons() {\n      return this.gameState.inventory.filter(function (item) {\n        return item.type === \"weapon\";\n      });\n    }\n  }, {\n    key: \"promptWeaponEquip\",\n    value: function promptWeaponEquip(availableWeapons) {\n      var _this6 = this;\n      this.terminal.print(\"\\nYou have no weapon equipped, but you have weapons in your inventory:\", \"combat-warning\");\n      availableWeapons.forEach(function (weapon, index) {\n        _this6.terminal.print(\"\".concat(index + 1, \". \").concat(weapon.name, \" (Damage: \").concat(weapon.damage, \")\"), \"weapon-option\");\n      });\n      this.terminal.print(\"\\nWould you like to equip a weapon before fighting?\", \"combat-prompt\");\n      this.terminal.print(\"Type the number of the weapon to equip it, or 'no' to fight unarmed:\", \"combat-prompt\");\n\n      // Set up temporary command handlers for weapon selection\n      this.setupWeaponSelectionHandlers(availableWeapons);\n    }\n  }, {\n    key: \"setupWeaponSelectionHandlers\",\n    value: function setupWeaponSelectionHandlers(availableWeapons) {\n      var _this7 = this;\n      // Store original command handlers to restore later\n      this.originalHandlers = _objectSpread({}, this.terminal.commandHandlers);\n\n      // Clear existing handlers\n      this.terminal.commandHandlers = {};\n\n      // Add weapon selection handlers\n      var _loop2 = function _loop2() {\n        var weaponIndex = i;\n        _this7.terminal.registerCommand(\"^\".concat(i + 1, \"$\"), function () {\n          var weapon = availableWeapons[weaponIndex];\n          if (_this7.gameState.equipWeapon(weapon.id)) {\n            _this7.terminal.print(\"You equip the \".concat(weapon.name, \".\"), \"combat-equip\");\n            _this7.restoreCommandHandlers();\n            _this7.continueCombatInit();\n          }\n        });\n      };\n      for (var i = 0; i < availableWeapons.length; i++) {\n        _loop2();\n      }\n\n      // Add 'no' option\n      this.terminal.registerCommand(\"^(no|n)$\", function () {\n        _this7.terminal.print(\"You decide to fight unarmed.\", \"combat-choice\");\n        _this7.restoreCommandHandlers();\n        _this7.continueCombatInit();\n      });\n    }\n  }, {\n    key: \"restoreCommandHandlers\",\n    value: function restoreCommandHandlers() {\n      // Restore original command handlers\n      this.terminal.commandHandlers = this.originalHandlers;\n      this.originalHandlers = null;\n    }\n  }, {\n    key: \"initializeCommandHandlers\",\n    value: function initializeCommandHandlers() {\n      var _this8 = this;\n      // Only register attack commands if no story engine is present\n      // The story engine handles attack commands for initiating combat\n      if (!this.storyEngine) {\n        // Attack command during combat\n        this.terminal.registerCommand('^(attack|fight|hit|strike)$', function () {\n          if (_this8.inCombat && _this8.playerTurn) {\n            _this8.playerAttack();\n          } else if (!_this8.inCombat) {\n            _this8.terminal.print(\"There's nothing to attack right now.\", 'error-message');\n          } else {\n            _this8.terminal.print(\"It's not your turn to attack.\", 'error-message');\n          }\n        });\n      }\n\n      // Defend command during combat\n      this.terminal.registerCommand('^(defend|block|parry)$', function () {\n        if (_this8.inCombat && _this8.playerTurn) {\n          _this8.playerDefend();\n        } else if (!_this8.inCombat) {\n          _this8.terminal.print(\"There's no need to defend right now.\", 'error-message');\n        } else {\n          _this8.terminal.print(\"It's not your turn to defend.\", 'error-message');\n        }\n      });\n\n      // Use item during combat\n      this.terminal.registerCommand('^(use) (.+)$', function (input) {\n        if (_this8.inCombat && _this8.playerTurn) {\n          var itemName = input.match(/^use\\s+(.+)$/i)[1].toLowerCase();\n          _this8.useItemInCombat(itemName);\n        } else if (!_this8.inCombat) {\n          // Let the story engine handle normal item use\n          return false; // Don't handle the command here\n        } else {\n          _this8.terminal.print(\"It's not your turn to use an item.\", 'error-message');\n        }\n      });\n\n      // Flee command during combat\n      this.terminal.registerCommand('^(flee|escape|run)$', function () {\n        if (_this8.inCombat && _this8.playerTurn) {\n          _this8.attemptFlee();\n        } else if (!_this8.inCombat) {\n          _this8.terminal.print(\"There's nothing to flee from right now.\", 'error-message');\n        } else {\n          _this8.terminal.print(\"It's not your turn to flee.\", 'error-message');\n        }\n      });\n    }\n  }, {\n    key: \"initiateCombat\",\n    value: function initiateCombat(enemy) {\n      this.inCombat = true;\n      this.currentEnemy = enemy;\n      this.playerTurn = true;\n\n      // Display combat start message\n      this.terminal.print(\"\\n--- COMBAT STARTED ---\", \"combat-header\");\n      this.terminal.print(\"You are fighting \".concat(enemy.name, \"!\"), \"combat-start\");\n      this.terminal.print(enemy.combatDescription || enemy.description, \"combat-description\");\n\n      // Check if player has no weapon but has weapons in inventory\n      if (!this.gameState.equippedWeapon) {\n        var availableWeapons = this.getAvailableWeapons();\n        if (availableWeapons.length > 0) {\n          this.promptWeaponEquip(availableWeapons);\n          return; // Wait for player response before continuing\n        } else {\n          // No weapons in inventory, check for branch in current location\n          var currentLocation = this.storyEngine.locations[this.gameState.currentLocation];\n          if (currentLocation && currentLocation.items && currentLocation.items.includes('branch')) {\n            var branchItem = this.storyEngine.items['branch'];\n            if (branchItem && (!branchItem.hidden || this.gameState.flags[branchItem.revealFlag])) {\n              this.promptBranchChoice();\n              return; // Wait for player response before continuing\n            }\n          }\n        }\n      }\n\n      // Continue with normal combat initialization\n      this.continueCombatInit();\n    }\n  }, {\n    key: \"showCombatActions\",\n    value: function showCombatActions() {\n      this.terminal.print(\"\\nAvailable actions:\", 'combat-actions-header');\n      this.terminal.print(\"- attack: Attack the enemy\", 'combat-action');\n      this.terminal.print(\"- defend: Take a defensive stance to reduce damage\", 'combat-action');\n      this.terminal.print(\"- use [item]: Use an item from your inventory\", 'combat-action');\n      this.terminal.print(\"- flee: Attempt to escape from combat\", 'combat-action');\n      this.terminal.print(\"- switch weapon: Change your equipped weapon\", 'combat-action');\n    }\n  }, {\n    key: \"playerAttack\",\n    value: function playerAttack() {\n      var _this9 = this;\n      // Check if player has no weapon and suggest branch if available\n      if (!this.gameState.equippedWeapon) {\n        var currentLocation = this.storyEngine.locations[this.gameState.currentLocation];\n        if (currentLocation && currentLocation.items && currentLocation.items.includes('branch')) {\n          var branchItem = this.storyEngine.items['branch'];\n          if (branchItem && (!branchItem.hidden || this.gameState.flags[branchItem.revealFlag])) {\n            this.terminal.print(\"You're fighting with your bare hands! You notice a \".concat(branchItem.name.toLowerCase(), \" nearby that could serve as a weapon.\"), 'combat-suggestion');\n            this.terminal.print(\"Try 'take branch' and then 'equip branch' to improve your combat effectiveness!\", 'combat-suggestion');\n          }\n        }\n      }\n\n      // Calculate player damage\n      var baseDamage = 5; // Base unarmed damage\n      var damageMultiplier = 1.0;\n\n      // Add weapon damage if equipped\n      if (this.gameState.equippedWeapon) {\n        baseDamage = this.gameState.equippedWeapon.damage || 10;\n\n        // Apply weapon-specific effects\n        if (this.gameState.equippedWeapon.effects) {\n          var _iterator = _createForOfIteratorHelper(this.gameState.equippedWeapon.effects),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var effect = _step.value;\n              if (effect.type === 'damageMultiplier') {\n                damageMultiplier *= effect.value;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      // Apply random variation (80% to 120% of base damage)\n      var randomFactor = 0.8 + Math.random() * 0.4;\n\n      // Calculate final damage\n      var damage = Math.floor(baseDamage * damageMultiplier * randomFactor);\n\n      // Apply damage to enemy\n      this.currentEnemy.health -= damage;\n\n      // Display attack message\n      if (this.gameState.equippedWeapon) {\n        this.terminal.print(\"You attack \".concat(this.currentEnemy.name, \" with your \").concat(this.gameState.equippedWeapon.name, \", dealing \").concat(damage, \" damage!\"), 'player-attack');\n      } else {\n        this.terminal.print(\"You attack \".concat(this.currentEnemy.name, \" with your bare hands, dealing \").concat(damage, \" damage!\"), 'player-attack');\n      }\n\n      // Check if enemy is defeated\n      if (this.currentEnemy.health <= 0) {\n        this.enemyDefeated();\n        return;\n      }\n\n      // Switch to enemy turn\n      this.playerTurn = false;\n      this.terminal.print(\"\".concat(this.currentEnemy.name, \"'s Health: \").concat(this.currentEnemy.health, \"/\").concat(this.currentEnemy.maxHealth), 'enemy-stats');\n\n      // Enemy attacks after a short delay\n      setTimeout(function () {\n        return _this9.enemyTurn();\n      }, 1500);\n    }\n  }, {\n    key: \"playerDefend\",\n    value: function playerDefend() {\n      var _this0 = this;\n      // Set defensive stance\n      this.defending = true;\n      this.terminal.print(\"You take a defensive stance, preparing to block the next attack.\", 'player-defend');\n\n      // Switch to enemy turn\n      this.playerTurn = false;\n\n      // Enemy attacks after a short delay\n      setTimeout(function () {\n        return _this0.enemyTurn();\n      }, 1500);\n    }\n  }, {\n    key: \"useItemInCombat\",\n    value: function useItemInCombat(itemName) {\n      var _this1 = this;\n      // Find the item in inventory\n      var _iterator2 = _createForOfIteratorHelper(this.gameState.inventory),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          if (item.keywords.some(function (keyword) {\n            return itemName.includes(keyword);\n          })) {\n            // Check if item can be used in combat\n            if (item.usableInCombat === false) {\n              this.terminal.print(\"You can't use the \".concat(item.name, \" during combat.\"), 'error-message');\n              return;\n            }\n\n            // Check if item has a combat use handler\n            if (item.onCombatUse) {\n              var result = item.onCombatUse(this.gameState, this.terminal, this.currentEnemy, this);\n\n              // If the item use was successful and should consume a turn\n              if (result !== false) {\n                // Switch to enemy turn\n                this.playerTurn = false;\n\n                // Check if enemy is defeated (might happen from item use)\n                if (this.currentEnemy.health <= 0) {\n                  this.enemyDefeated();\n                  return;\n                }\n\n                // Enemy attacks after a short delay\n                setTimeout(function () {\n                  return _this1.enemyTurn();\n                }, 1500);\n              }\n              return;\n            } else if (item.onUse) {\n              // Fall back to regular use if no combat-specific handler\n              var _result = item.onUse(this.gameState, this.terminal, this.storyEngine);\n\n              // If the item use was successful and should consume a turn\n              if (_result !== false) {\n                // Switch to enemy turn\n                this.playerTurn = false;\n\n                // Check if enemy is defeated (might happen from item use)\n                if (this.currentEnemy.health <= 0) {\n                  this.enemyDefeated();\n                  return;\n                }\n\n                // Enemy attacks after a short delay\n                setTimeout(function () {\n                  return _this1.enemyTurn();\n                }, 1500);\n              }\n              return;\n            } else {\n              this.terminal.print(\"You're not sure how to use the \".concat(item.name, \" in combat.\"), 'error-message');\n              return;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this.terminal.print(\"You don't have any \".concat(itemName, \" to use.\"), 'error-message');\n    }\n  }, {\n    key: \"attemptFlee\",\n    value: function attemptFlee() {\n      var _this10 = this;\n      // Calculate flee chance based on enemy's speed vs player's\n      var enemySpeed = this.currentEnemy.speed || 5;\n      var playerSpeed = 5; // Base speed\n\n      // Adjust for armor (heavier armor reduces speed)\n      if (this.gameState.equippedArmor) {\n        playerSpeed -= this.gameState.equippedArmor.speedPenalty || 0;\n      }\n\n      // Calculate flee chance (50% base + adjustment for speed difference)\n      var fleeChance = 0.5 + (playerSpeed - enemySpeed) * 0.05;\n\n      // Attempt to flee\n      if (Math.random() < fleeChance) {\n        // Successful flee\n        this.terminal.print(\"You successfully escape from combat!\", 'combat-flee');\n        this.endCombat();\n      } else {\n        // Failed flee attempt\n        this.terminal.print(\"You try to escape, but \".concat(this.currentEnemy.name, \" blocks your path!\"), 'combat-flee-fail');\n\n        // Switch to enemy turn (fleeing costs a turn even if unsuccessful)\n        this.playerTurn = false;\n\n        // Enemy attacks after a short delay\n        setTimeout(function () {\n          return _this10.enemyTurn();\n        }, 1500);\n      }\n    }\n  }, {\n    key: \"enemyTurn\",\n    value: function enemyTurn() {\n      // Calculate enemy damage\n      var baseDamage = this.currentEnemy.damage || 5;\n\n      // Apply random variation (80% to 120% of base damage)\n      var randomFactor = 0.8 + Math.random() * 0.4;\n\n      // Calculate damage reduction from armor\n      var damageReduction = 0;\n      if (this.gameState.equippedArmor) {\n        damageReduction = this.gameState.equippedArmor.protection || 0;\n      }\n\n      // Additional damage reduction if defending\n      if (this.defending) {\n        damageReduction += 5;\n        this.terminal.print(\"Your defensive stance reduces the incoming damage!\", 'combat-defend');\n        this.defending = false; // Reset defending status\n      }\n\n      // Calculate final damage (minimum 1)\n      var damage = Math.max(1, Math.floor(baseDamage * randomFactor - damageReduction));\n\n      // Apply damage to player\n      this.gameState.health -= damage;\n\n      // Display attack message\n      this.terminal.print(\"\".concat(this.currentEnemy.name, \" attacks you, dealing \").concat(damage, \" damage!\"), 'enemy-attack');\n      this.terminal.print(\"Your Health: \".concat(this.gameState.health, \"/\").concat(this.gameState.maxHealth), 'player-stats');\n\n      // Check if player is defeated\n      if (this.gameState.health <= 0) {\n        this.gameState.health = 0;\n        this.playerDefeated();\n        return;\n      }\n\n      // Switch back to player turn\n      this.playerTurn = true;\n\n      // Show available actions\n      this.showCombatActions();\n    }\n  }, {\n    key: \"enemyDefeated\",\n    value: function enemyDefeated() {\n      this.terminal.print(\"\\nYou have defeated \".concat(this.currentEnemy.name, \"!\"), 'combat-victory');\n\n      // Check for rewards\n      if (this.currentEnemy.rewards) {\n        // Handle experience or stat increases\n        if (this.currentEnemy.rewards.healthIncrease) {\n          this.gameState.maxHealth += this.currentEnemy.rewards.healthIncrease;\n          this.gameState.health += this.currentEnemy.rewards.healthIncrease;\n          this.terminal.print(\"Your maximum health increases by \".concat(this.currentEnemy.rewards.healthIncrease, \"!\"), 'reward');\n        }\n\n        // Handle item rewards\n        if (this.currentEnemy.rewards.items) {\n          var _iterator3 = _createForOfIteratorHelper(this.currentEnemy.rewards.items),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var itemId = _step3.value;\n              var item = this.storyEngine.items[itemId];\n              if (item) {\n                this.gameState.addToInventory(_objectSpread({\n                  id: itemId\n                }, item));\n                this.terminal.print(\"You found: \".concat(item.name), 'reward');\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }\n\n      // Create corpse that remains in the location\n      this.createCorpse();\n\n      // Handle post-combat events\n      if (this.currentEnemy.onDefeat) {\n        this.currentEnemy.onDefeat(this.gameState, this.terminal, this.storyEngine);\n      }\n\n      // End combat\n      this.endCombat();\n    }\n  }, {\n    key: \"createCorpse\",\n    value: function createCorpse() {\n      var _this11 = this;\n      var currentLocation = this.storyEngine.locations[this.gameState.currentLocation];\n      if (!currentLocation) return;\n\n      // Create corpse ID based on enemy name\n      var corpseId = \"\".concat(this.currentEnemy.name.toLowerCase().replace(/\\s+/g, '_'), \"_corpse\");\n\n      // Determine loot based on enemy type\n      var lootItems = [];\n      var enemyName = this.currentEnemy.name.toLowerCase();\n      if (enemyName.includes('wolf')) {\n        lootItems = [{\n          id: 'wolf_pelt'\n        }, {\n          id: 'twisted_claw'\n        }];\n      } else if (enemyName.includes('bear')) {\n        lootItems = [{\n          id: 'bear_hide'\n        }, {\n          id: 'bear_claws'\n        }];\n      }\n\n      // Create corpse NPC\n      var corpse = {\n        name: \"\".concat(this.currentEnemy.name, \" Corpse\"),\n        description: \"The lifeless body of the \".concat(this.currentEnemy.name.toLowerCase(), \". You might be able to find something useful on it.\"),\n        presenceDescription: \"The corpse of the \".concat(this.currentEnemy.name.toLowerCase(), \" lies here.\"),\n        keywords: [\"corpse\", \"body\", \"remains\"].concat(_toConsumableArray(this.currentEnemy.keywords)),\n        talkable: false,\n        attackable: false,\n        hidden: false,\n        isCorpse: true,\n        searched: false,\n        originalEnemy: this.currentEnemy.name,\n        loot: lootItems,\n        onExamine: function onExamine(gameState, terminal, storyEngine) {\n          terminal.print(\"The \".concat(_this11.currentEnemy.name.toLowerCase(), \" lies motionless. Its body shows the wounds from your battle.\"), 'examine-result');\n\n          // Check if there are loot items to find\n          if (corpse.loot && corpse.loot.length > 0) {\n            terminal.print(\"You might find something useful if you search the corpse.\", 'examine-result');\n          } else {\n            terminal.print(\"The corpse appears to have nothing of value.\", 'examine-result');\n          }\n        }\n      };\n\n      // Add corpse to the story engine's NPCs\n      this.storyEngine.npcs[corpseId] = corpse;\n\n      // Add corpse to current location's NPCs\n      if (!currentLocation.npcs) {\n        currentLocation.npcs = [];\n      }\n      currentLocation.npcs.push(corpseId);\n\n      // Remove the original enemy from the location\n      var enemyIndex = currentLocation.npcs.indexOf(this.currentEnemy.id || this.currentEnemy.name.toLowerCase().replace(/\\s+/g, '_'));\n      if (enemyIndex !== -1) {\n        currentLocation.npcs.splice(enemyIndex, 1);\n      }\n    }\n  }, {\n    key: \"playerDefeated\",\n    value: function playerDefeated() {\n      this.terminal.print(\"\\nYou have been defeated!\", 'combat-defeat');\n\n      // Handle player death\n      if (this.currentEnemy.onPlayerDefeat) {\n        this.currentEnemy.onPlayerDefeat(this.gameState, this.terminal, this.storyEngine);\n      } else {\n        // Default game over handling\n        this.terminal.print(\"\\nGAME OVER\", 'game-over');\n        this.terminal.print(\"\\nPress Enter to return to title screen...\", 'game-over-message');\n\n        // Set up special Enter key handler for returning to title\n        this.setupGameOverHandler();\n      }\n\n      // End combat\n      this.endCombat();\n    }\n  }, {\n    key: \"setupGameOverHandler\",\n    value: function setupGameOverHandler() {\n      var _this12 = this;\n      // Disable normal terminal processing\n      this.terminal.disable();\n\n      // Create a special keydown handler for Enter key\n      var _gameOverHandler = function gameOverHandler(event) {\n        if (event.key === 'Enter') {\n          event.preventDefault();\n\n          // Remove this handler\n          document.removeEventListener('keydown', _gameOverHandler);\n\n          // Return to title screen\n          _this12.returnToTitleScreen();\n        }\n      };\n\n      // Add the handler to the document\n      document.addEventListener('keydown', _gameOverHandler);\n    }\n  }, {\n    key: \"returnToTitleScreen\",\n    value: function returnToTitleScreen() {\n      // Re-enable terminal\n      this.terminal.enable();\n\n      // Clear terminal\n      this.terminal.clear();\n\n      // Show title screen\n      var screens = document.querySelectorAll('.screen');\n      screens.forEach(function (screen) {\n        return screen.classList.remove('active');\n      });\n      var titleScreen = document.getElementById('title-screen');\n      if (titleScreen) {\n        titleScreen.classList.add('active');\n      }\n    }\n  }, {\n    key: \"endCombat\",\n    value: function endCombat() {\n      this.inCombat = false;\n      this.currentEnemy = null;\n      this.playerTurn = false;\n      this.defending = false;\n      this.terminal.print(\"\\n--- COMBAT ENDED ---\", 'combat-header');\n\n      // Restore original command handlers\n      this.restoreCommandHandlers();\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/combatSystem.js\n\n}");

/***/ }),

/***/ "./src/js/gameData.js":
/*!****************************!*\
  !*** ./src/js/gameData.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gameData: () => (/* binding */ gameData)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Game data: locations, items, and NPCs\n\nvar gameData = {\n  // Locations\n  locations: {\n    // Starting location\n    crossroads: {\n      name: \"Crossroads\",\n      scene: \"crossroads\",\n      description: \"You stand at a dusty crossroads. The dirt beneath your feet is stained with what appears to be dried blood—your blood. Your head throbs with pain, and your memory is a fog. Paths lead in four directions through the surrounding forest.\",\n      exits: {\n        north: \"forest_path_north\",\n        south: \"forest_path_south\",\n        east: \"forest_path_east\",\n        west: \"forest_path_west\"\n      },\n      features: [{\n        keywords: [\"blood\", \"stain\", \"stains\"],\n        description: \"Dark, dried blood stains the dirt. It seems to be yours, though you have no memory of how you were injured.\"\n      }, {\n        keywords: [\"path\", \"paths\", \"road\", \"roads\"],\n        description: \"Dirt paths extend in all four directions, disappearing into the dense forest.\"\n      }, {\n        keywords: [\"forest\", \"trees\", \"woods\"],\n        description: \"A thick forest surrounds the crossroads, with tall trees blocking much of the sunlight.\"\n      }, {\n        keywords: [\"ground\", \"dirt\", \"earth\"],\n        description: \"The ground is disturbed, as if there was a struggle here. Scuff marks and overturned stones tell a story of violence.\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (!gameState.memoryFragments.includes('crossroads_battle')) {\n            gameState.memoryFragments.push('crossroads_battle');\n            terminal.print(\"As you examine the ground more closely, a memory flashes: You see yourself fighting multiple shadowy figures here, your sword flashing in the moonlight before something strikes you from behind.\", 'memory-flash');\n            gameState.setFlag('rememberedAmbush', true);\n          } else {\n            terminal.print(\"The signs of your desperate battle are still visible in the disturbed earth.\", 'description');\n          }\n        }\n      }],\n      onFirstVisit: function onFirstVisit(gameState, terminal) {\n        terminal.print(\"Your head pounds as you try to remember who you are and how you got here. Nothing comes to mind except a vague sense of urgency.\", 'memory-flash');\n      }\n    },\n    // Forest paths\n    forest_path_west: {\n      name: \"Forest Path - West\",\n      scene: \"forest_path\",\n      description: \"The forest path winds westward. The trees grow closer together here, and the air feels cooler. You hear faint sounds of distress in the distance.\",\n      exits: {\n        east: \"crossroads\",\n        west: \"village_outskirts\"\n      },\n      features: [{\n        keywords: [\"sounds\", \"distress\", \"noise\", \"cries\"],\n        description: \"The sounds seem to be coming from further west—perhaps children in trouble?\"\n      }, {\n        keywords: [\"trees\", \"forest\"],\n        description: \"The forest is dense here, with ancient trees towering overhead.\"\n      }, {\n        keywords: [\"path\"],\n        description: \"The dirt path continues west, leading deeper into the forest.\"\n      }]\n    },\n    village_outskirts: {\n      name: \"Village Outskirts\",\n      scene: \"village_outskirts\",\n      description: \"The forest thins as the path approaches what appears to be a small village. Nearby, you hear children screaming in terror.\",\n      exits: {\n        east: {\n          locationId: \"forest_path_west\",\n          condition: function condition(gameState) {\n            // Check if the children have been saved - if not, player cannot leave\n            if (!gameState.getFlag('savedChildren')) {\n              // Trigger wolf death story\n              gameState.triggerWolfDeathStory = true;\n              return false;\n            }\n            return true;\n          },\n          blockedMessage: \"\"\n        },\n        west: {\n          locationId: \"village_entrance\",\n          condition: function condition(gameState) {\n            // Check if the children have been saved - if not, player cannot leave\n            if (!gameState.getFlag('savedChildren')) {\n              // Trigger wolf death story\n              gameState.triggerWolfDeathStory = true;\n              return false;\n            }\n            return true;\n          },\n          blockedMessage: \"\"\n        }\n      },\n      npcs: [\"child1\", \"child2\", \"small_creature\"],\n      items: [\"branch\"],\n      features: [{\n        keywords: [\"village\"],\n        description: \"A small village lies to the west, with simple wooden buildings visible through the trees.\"\n      }],\n      onFirstVisit: function onFirstVisit(gameState, terminal) {\n        terminal.print(\"Two children are being attacked by a twisted, snarling creature! Without thinking, you look for something to use as a weapon.\", 'story-event');\n        gameState.setFlag('metChildren', true);\n      }\n    },\n    village_entrance: {\n      name: \"Village Entrance\",\n      scene: \"village_entrance\",\n      description: \"You stand at the entrance to a modest village. Simple wooden buildings line a central dirt road. Villagers move about, though they seem wary and on edge.\",\n      exits: {\n        east: \"village_outskirts\",\n        west: \"village_square\",\n        north: \"village_smithy\",\n        south: \"village_inn\"\n      },\n      features: [{\n        keywords: [\"buildings\", \"houses\"],\n        description: \"The buildings are simple but sturdy, made of wood with thatched roofs.\"\n      }, {\n        keywords: [\"villagers\", \"people\"],\n        description: \"The villagers glance at you with a mixture of hope and suspicion. They seem troubled by something.\"\n      }],\n      onFirstVisit: function onFirstVisit(gameState, terminal) {\n        if (gameState.getFlag('savedChildren')) {\n          terminal.print(\"As you enter the village, people turn to look at you. Word of your rescue of the children has already spread.\", 'story-event');\n          terminal.print(\"An older man approaches you. 'You saved those children! Please, our village needs help with another creature that's been terrorizing us.'\", 'npc-dialog');\n          gameState.setFlag('visitedVillage', true);\n        } else {\n          terminal.print(\"The villagers eye you warily as you enter. You hear whispers about children being attacked outside the village.\", 'story-event');\n          gameState.setFlag('visitedVillage', true);\n        }\n      }\n    },\n    village_square: {\n      name: \"Village Square\",\n      scene: \"village_square\",\n      description: \"The central square of the village. A well sits in the middle, and villagers gather in small groups, speaking in hushed tones. A village elder stands near the well.\",\n      exits: {\n        east: \"village_entrance\",\n        north: \"village_elder_house\",\n        south: \"village_market\"\n      },\n      npcs: [\"village_elder\"],\n      features: [{\n        keywords: [\"well\"],\n        description: \"A stone well stands in the center of the square, providing water for the village.\"\n      }, {\n        keywords: [\"villagers\", \"people\", \"groups\"],\n        description: \"The villagers speak quietly among themselves, occasionally glancing in your direction.\"\n      }]\n    },\n    village_smithy: {\n      name: \"Village Smithy\",\n      scene: \"village_smithy\",\n      description: \"The village blacksmith's shop. The forge is hot, and the sound of hammering fills the air. Tools and weapons line the walls.\",\n      exits: {\n        south: \"village_entrance\"\n      },\n      npcs: [\"blacksmith\"],\n      items: [\"rusty_sword\"],\n      features: [{\n        keywords: [\"forge\", \"furnace\"],\n        description: \"The forge glows with hot coals, ready for metalworking.\"\n      }, {\n        keywords: [\"tools\", \"weapons\"],\n        description: \"Various tools and simple weapons hang on the walls or rest on racks.\"\n      }]\n    },\n    village_inn: {\n      name: \"Village Inn\",\n      scene: \"village_inn\",\n      description: \"A cozy inn with a few tables and a small bar. A fire crackles in the hearth, providing warmth and light.\",\n      exits: {\n        north: \"village_entrance\"\n      },\n      npcs: [\"innkeeper\"],\n      features: [{\n        keywords: [\"fire\", \"hearth\", \"fireplace\"],\n        description: \"A warm fire burns in the stone hearth, casting flickering shadows around the room.\"\n      }, {\n        keywords: [\"tables\", \"chairs\"],\n        description: \"Wooden tables and chairs are arranged around the room, most of them empty.\"\n      }, {\n        keywords: [\"bar\"],\n        description: \"A simple wooden bar stands along one wall, with a few bottles and mugs behind it.\"\n      }]\n    },\n    village_elder_house: {\n      name: \"Village Elder's House\",\n      scene: \"village_elder_house\",\n      description: \"The home of the village elder. It's larger than most houses in the village, with bookshelves lining the walls and a large table in the center.\",\n      exits: {\n        south: \"village_square\"\n      },\n      items: [\"leather_armor\"],\n      features: [{\n        keywords: [\"bookshelves\", \"books\"],\n        description: \"The bookshelves contain old tomes and scrolls, many of them appearing to be historical records.\"\n      }, {\n        keywords: [\"table\"],\n        description: \"A large wooden table dominates the center of the room, with a map of the surrounding area spread across it.\"\n      }, {\n        keywords: [\"map\"],\n        description: \"The map shows the village and surrounding forest. A location to the north is marked with a red X and labeled 'Creature's Den'.\",\n        revealsItem: \"map_to_den\",\n        autoTake: true\n      }, {\n        keywords: [\"scroll\", \"scrolls\", \"parchment\"],\n        description: \"Among the scrolls, one catches your eye. It bears a royal seal and mentions something about a 'Knight Commander'.\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (!gameState.memoryFragments.includes('royal_scroll')) {\n            gameState.memoryFragments.push('royal_scroll');\n            terminal.print(\"As you read the scroll, a memory flashes: You see yourself kneeling before a throne, receiving a sword from a crowned woman. 'Protect the realm, Sir Knight,' she says.\", 'memory-flash');\n            gameState.setFlag('rememberedKnighthood', true);\n          } else {\n            terminal.print(\"The royal scroll still bears the seal of your former queen.\", 'description');\n          }\n        }\n      }]\n    },\n    village_market: {\n      name: \"Village Market\",\n      scene: \"village_market\",\n      description: \"The village market area. Several stalls are set up, though many are empty or abandoned. A few villagers browse the remaining goods.\",\n      exits: {\n        north: \"village_square\"\n      },\n      npcs: [\"merchant\"],\n      features: [{\n        keywords: [\"stalls\", \"stands\"],\n        description: \"Most of the market stalls are empty or in disrepair. The few that remain open offer basic goods.\"\n      }, {\n        keywords: [\"goods\", \"wares\", \"merchandise\"],\n        description: \"The available goods are simple: some food, cloth, and basic tools. Nothing particularly valuable.\"\n      }]\n    },\n    forest_path_north: {\n      name: \"Forest Path - North\",\n      scene: \"forest_path\",\n      description: \"The forest path continues northward. The trees are thinner here, allowing more sunlight to filter through.\",\n      exits: {\n        south: \"crossroads\",\n        north: {\n          locationId: \"creature_den_entrance\",\n          condition: function condition(gameState) {\n            return gameState.hasItem('map_to_den');\n          },\n          blockedMessage: \"The path seems to continue north, but you're not sure where it leads. Perhaps someone in the village would know.\"\n        }\n      },\n      features: [{\n        keywords: [\"trees\", \"forest\"],\n        description: \"The forest is less dense here, with more space between the trees.\"\n      }, {\n        keywords: [\"path\"],\n        description: \"The dirt path winds northward through the forest.\"\n      }, {\n        keywords: [\"sunlight\", \"light\"],\n        description: \"Sunlight filters through the canopy, creating dappled patterns on the ground.\"\n      }]\n    },\n    creature_den_entrance: {\n      name: \"Creature's Den - Entrance\",\n      scene: \"cave_entrance\",\n      description: \"A dark cave mouth opens in the side of a small hill. Strange scratches mark the rocks around the entrance, and an unnatural silence hangs in the air.\",\n      exits: {\n        south: \"forest_path_north\",\n        north: \"creature_den_interior\"\n      },\n      features: [{\n        keywords: [\"cave\", \"entrance\", \"mouth\"],\n        description: \"The cave entrance is roughly circular, about seven feet in diameter. Claw marks surround the opening.\"\n      }, {\n        keywords: [\"scratches\", \"marks\", \"claw\", \"claws\"],\n        description: \"Deep gouges in the stone suggest a creature with formidable claws. Some marks are fresh.\"\n      }, {\n        keywords: [\"hill\"],\n        description: \"The hill is small but steep, covered in sparse vegetation. The cave appears to go deep inside.\"\n      }]\n    },\n    creature_den_interior: {\n      name: \"Creature's Den - Interior\",\n      scene: \"cave_interior\",\n      description: \"The inside of the cave is damp and dark. Bones litter the floor, and a foul smell permeates the air. At the back of the cave, a large creature stirs.\",\n      exits: {\n        south: \"creature_den_entrance\"\n      },\n      npcs: [\"cave_creature\"],\n      items: [],\n      features: [{\n        keywords: [\"bones\", \"remains\"],\n        description: \"Animal bones are scattered across the floor, picked clean. Some appear to be from livestock, others from forest animals.\"\n      }, {\n        keywords: [\"smell\", \"odor\", \"stench\"],\n        description: \"A putrid smell fills the cave—a mixture of rotting meat and something else, something unnatural.\"\n      }],\n      onFirstVisit: function onFirstVisit(gameState, terminal) {\n        terminal.print(\"As your eyes adjust to the darkness, you see a large, twisted creature at the back of the cave. It was once a bear, but now it's something else—its form warped by dark magic, with extra limbs and glowing red eyes.\", 'story-event');\n        terminal.print(\"The creature growls as it notices you, rising to its feet and preparing to attack!\", 'story-event');\n      }\n    },\n    forest_path_east: {\n      name: \"Forest Path - East\",\n      scene: \"forest_path\",\n      description: \"The forest path extends eastward. The trees here are older and taller, with thick canopies that block much of the sunlight.\",\n      exits: {\n        west: \"crossroads\",\n        east: \"forest_clearing\"\n      },\n      features: [{\n        keywords: [\"trees\", \"forest\"],\n        description: \"Ancient trees tower overhead, their massive trunks covered in moss and lichen.\"\n      }, {\n        keywords: [\"path\"],\n        description: \"The dirt path winds through the massive trees, occasionally obscured by roots and undergrowth.\"\n      }, {\n        keywords: [\"canopy\", \"leaves\"],\n        description: \"The dense canopy high above allows only occasional shafts of sunlight to reach the forest floor.\"\n      }]\n    },\n    forest_clearing: {\n      name: \"Forest Clearing\",\n      scene: \"forest_clearing\",\n      description: \"A circular clearing in the forest. Sunlight streams down, illuminating a small pond in the center. The water reflects the sky above, unnaturally still and clear.\",\n      exits: {\n        west: \"forest_path_east\",\n        east: \"deep_forest\"\n      },\n      features: [{\n        keywords: [\"pond\", \"water\", \"pool\"],\n        description: \"The pond's surface is mirror-like, reflecting the sky perfectly. As you look closer, you see not just the sky's reflection, but fleeting images—a castle, a crowned woman, a man in armor...\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (!gameState.memoryFragments) {\n            gameState.memoryFragments = [];\n          }\n          if (!gameState.memoryFragments.includes('pond_visions')) {\n            gameState.memoryFragments.push('pond_visions');\n            terminal.print(\"The images in the water become clearer: You see yourself in shining armor, standing in a great hall. A beautiful queen speaks: 'Rise, Sir Knight. The kingdom needs your courage.'\", 'memory-flash');\n            gameState.setFlag('rememberedKnight', true);\n            terminal.print(\"You remember now—you are a knight! But why were you on that road, and what happened to your armor and weapons?\", 'memory-flash');\n          } else if (gameState.memoryFragments.length >= 3) {\n            terminal.print(\"The pond shows you more: A dark wizard casting a spell, your memories being torn away as you fall unconscious. You remember now—you were sent to stop him!\", 'memory-flash');\n            if (!gameState.memoryFragments.includes('wizard_betrayal')) {\n              gameState.memoryFragments.push('wizard_betrayal');\n              gameState.setFlag('rememberedMission', true);\n            }\n          } else {\n            terminal.print(\"The pond's surface ripples gently, but the visions remain unclear. Perhaps more memories would help focus what you see here.\", 'description');\n          }\n        }\n      }, {\n        keywords: [\"clearing\"],\n        description: \"The clearing is a perfect circle, as if deliberately created rather than naturally formed.\"\n      }, {\n        keywords: [\"sunlight\", \"light\"],\n        description: \"Sunlight fills the clearing, warm and bright compared to the shadowy forest around it.\"\n      }]\n    },\n    deep_forest: {\n      name: \"Deep Forest\",\n      scene: \"deep_forest\",\n      description: \"The deepest part of the forest. The trees here are ancient and massive, their roots creating a maze on the forest floor. Strange glowing fungi grow on the trees, providing an eerie blue light.\",\n      exits: {\n        west: \"forest_clearing\",\n        east: {\n          locationId: \"wizard_tower_base\",\n          condition: function condition(gameState) {\n            return gameState.getFlag('rememberedWizard');\n          },\n          blockedMessage: \"The forest seems to continue eastward, but something makes you hesitate. You feel you're not ready to go that way yet.\"\n        }\n      },\n      features: [{\n        keywords: [\"trees\", \"forest\"],\n        description: \"The trees here must be centuries old, with trunks wider than a man is tall. They seem to watch you with ancient awareness.\"\n      }, {\n        keywords: [\"roots\"],\n        description: \"Massive roots snake across the ground, creating natural steps and barriers.\"\n      }, {\n        keywords: [\"fungi\", \"mushrooms\", \"glow\"],\n        description: \"Bioluminescent fungi grow on the trees and roots, emitting a soft blue glow that illuminates the forest with otherworldly light.\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (!gameState.getFlag('rememberedWizard')) {\n            terminal.print(\"As you touch one of the glowing mushrooms, another memory flashes in your mind: a tall man in flowing robes, his hands crackling with energy. 'Your queen cannot protect you now, knight,' he sneers. 'My magic will twist this land until it bows to me!'\", 'memory-flash');\n            gameState.setFlag('rememberedWizard', true);\n            terminal.print(\"The wizard! He attacked you... he must have taken the queen! You must find his tower and stop him before his corruption spreads further.\", 'memory-flash');\n          }\n        }\n      }]\n    },\n    wizard_tower_base: {\n      name: \"Wizard's Tower - Base\",\n      scene: \"wizard_tower_exterior\",\n      description: \"A tall, twisted tower rises before you, its black stone seeming to absorb the light around it. The forest has been cleared in a perfect circle around the structure, and the ground is barren and cracked.\",\n      exits: {\n        west: \"deep_forest\",\n        enter: \"wizard_tower_entrance\"\n      },\n      features: [{\n        keywords: [\"tower\", \"structure\"],\n        description: \"The tower spirals upward, its architecture defying natural laws. Windows glow with an unnatural purple light at irregular intervals along its height.\"\n      }, {\n        keywords: [\"ground\", \"earth\", \"soil\"],\n        description: \"The ground around the tower is dead and cracked, as if all life has been drained from it.\"\n      }, {\n        keywords: [\"door\", \"entrance\"],\n        description: \"A heavy iron door stands at the base of the tower, covered in strange arcane symbols.\"\n      }, {\n        keywords: [\"symbols\", \"runes\", \"markings\"],\n        description: \"The arcane symbols pulse with a faint purple light. As you study them, they seem familiar...\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (gameState.getFlag('rememberedMission') && !gameState.memoryFragments.includes('tower_symbols')) {\n            gameState.memoryFragments.push('tower_symbols');\n            terminal.print(\"The symbols trigger a memory: You remember studying these same runes in the royal library, preparing for your mission to stop the dark wizard Malachar!\", 'memory-flash');\n            gameState.setFlag('rememberedWizardName', true);\n          } else if (!gameState.getFlag('rememberedMission')) {\n            terminal.print(\"The symbols seem familiar, but you can't quite place where you've seen them before.\", 'description');\n          } else {\n            terminal.print(\"The symbols of Malachar's dark magic. You know what lies beyond this door.\", 'description');\n          }\n        }\n      }],\n      onFirstVisit: function onFirstVisit(gameState, terminal) {\n        terminal.print(\"As you approach the tower, your final memories return in a rush: You led a group of knights to confront the wizard after he threatened the queen. There was a battle... your companions fell... and the wizard struck you down with a spell that sent you flying through the air.\", 'memory-flash');\n        terminal.print(\"You remember crashing to the ground at the crossroads, your armor shattered, your mind wiped clean by the impact. But now you remember everything—and the queen is still in danger.\", 'memory-flash');\n        gameState.setFlag('rememberedQueen', true);\n        gameState.setFlag('foundTower', true);\n      }\n    },\n    forest_path_south: {\n      name: \"Forest Path - South\",\n      scene: \"forest_path\",\n      description: \"The forest path leads southward. The trees thin out slightly here, and you can see rolling hills in the distance.\",\n      exits: {\n        north: \"crossroads\",\n        south: \"hillside\"\n      },\n      features: [{\n        keywords: [\"trees\", \"forest\"],\n        description: \"The forest is less dense here, with more space between the trees.\"\n      }, {\n        keywords: [\"path\"],\n        description: \"The dirt path winds southward toward the hills.\"\n      }, {\n        keywords: [\"hills\", \"distance\"],\n        description: \"Rolling hills can be seen to the south, their slopes covered in tall grass.\"\n      }]\n    },\n    hillside: {\n      name: \"Hillside\",\n      scene: \"hillside\",\n      description: \"You stand on a grassy hillside overlooking a vast valley. In the far distance, you can see what appears to be a castle or large stone structure.\",\n      exits: {\n        north: \"forest_path_south\"\n      },\n      features: [{\n        keywords: [\"hills\", \"hillside\", \"grass\"],\n        description: \"The hills are covered in tall grass that waves gently in the breeze.\"\n      }, {\n        keywords: [\"valley\"],\n        description: \"A wide valley stretches before you, with fields and small clusters of trees.\"\n      }, {\n        keywords: [\"castle\", \"structure\", \"distance\"],\n        description: \"In the far distance, you can make out what appears to be a castle or large stone structure. It's too far to reach from here, but seeing it triggers a sense of familiarity.\",\n        onExamine: function onExamine(gameState, terminal) {\n          if (!gameState.getFlag('rememberedKnight')) {\n            terminal.print(\"As you gaze at the distant castle, you feel a strong sense of duty and belonging. Though you can't remember details, you know that place is important to you.\", 'memory-flash');\n          }\n        }\n      }]\n    }\n  },\n  // Items\n  items: {\n    branch: {\n      name: \"Sturdy Branch\",\n      description: \"A thick, sturdy branch that could serve as a makeshift weapon.\",\n      keywords: [\"branch\", \"stick\", \"weapon\"],\n      type: \"weapon\",\n      damage: 5,\n      takeable: true\n    },\n    rusty_sword: {\n      name: \"Rusty Sword\",\n      description: \"An old sword with a rusty blade. Despite its condition, it's still sharp enough to be effective.\",\n      keywords: [\"sword\", \"rusty\", \"blade\", \"weapon\"],\n      type: \"weapon\",\n      damage: 10,\n      takeable: true,\n      hidden: true,\n      revealFlag: 'visitedVillage'\n    },\n    leather_armor: {\n      name: \"Leather Armor\",\n      description: \"A simple set of leather armor. It's worn but serviceable, offering basic protection.\",\n      keywords: [\"armor\", \"leather\", \"protection\"],\n      type: \"armor\",\n      protection: 3,\n      speedPenalty: 1,\n      takeable: true,\n      hidden: true,\n      revealFlag: 'visitedVillage'\n    },\n    map_to_den: {\n      name: \"Map to Creature's Den\",\n      description: \"A rough map showing the location of a creature's den north of the village.\",\n      keywords: [\"map\", \"parchment\", \"paper\"],\n      type: \"quest\",\n      takeable: true,\n      usable: true,\n      onUse: function onUse(gameState, terminal) {\n        terminal.print(\"You study the map. It shows a path leading north from the crossroads to a small cave in the hills. The cave is marked as 'Creature's Den'.\", 'item-use');\n        return true;\n      }\n    },\n    steel_sword: {\n      name: \"Steel Sword\",\n      description: \"A well-crafted steel sword with a sharp edge and good balance.\",\n      keywords: [\"sword\", \"steel\", \"blade\", \"weapon\"],\n      type: \"weapon\",\n      damage: 15,\n      takeable: true\n    },\n    chainmail: {\n      name: \"Chainmail Armor\",\n      description: \"A shirt of interlocking metal rings, providing good protection without sacrificing too much mobility.\",\n      keywords: [\"chainmail\", \"armor\", \"mail\", \"chain\"],\n      type: \"armor\",\n      protection: 5,\n      speedPenalty: 2,\n      takeable: true\n    },\n    health_potion: {\n      name: \"Health Potion\",\n      description: \"A small vial containing a red liquid that smells of herbs and magic.\",\n      keywords: [\"potion\", \"health\", \"vial\", \"healing\"],\n      type: \"consumable\",\n      takeable: true,\n      usable: true,\n      usableInCombat: true,\n      onUse: function onUse(gameState, terminal) {\n        gameState.heal(25);\n        terminal.print(\"You drink the potion. A warm sensation spreads through your body as your wounds begin to close.\", 'item-use');\n        terminal.print(\"Your health is now \".concat(gameState.playerHealth, \"/\").concat(gameState.playerMaxHealth, \".\"), 'status-update');\n\n        // Remove from inventory after use\n        gameState.removeFromInventory('health_potion');\n        return true;\n      },\n      onCombatUse: function onCombatUse(gameState, terminal, enemy, combatSystem) {\n        gameState.heal(25);\n        terminal.print(\"You quickly drink the potion. A warm sensation spreads through your body as your wounds begin to close.\", 'item-use');\n        terminal.print(\"Your health is now \".concat(gameState.playerHealth, \"/\").concat(gameState.playerMaxHealth, \".\"), 'status-update');\n\n        // Remove from inventory after use\n        gameState.removeFromInventory('health_potion');\n        return true;\n      }\n    },\n    knight_signet: {\n      name: \"Knight's Signet Ring\",\n      description: \"A heavy gold ring bearing the royal coat of arms. It feels familiar in your hand.\",\n      keywords: [\"ring\", \"signet\", \"gold\", \"royal\"],\n      type: \"quest\",\n      takeable: true,\n      hidden: true,\n      revealFlag: 'defeatedCaveCreature',\n      onTake: function onTake(gameState, terminal) {\n        if (!gameState.memoryFragments.includes('knight_signet')) {\n          gameState.memoryFragments.push('knight_signet');\n          terminal.print(\"As you slip the ring onto your finger, memories flood back: You remember your oath of service, your training in the royal guard, and your true name—Sir Aldric of Westmarch!\", 'memory-flash');\n          gameState.setFlag('rememberedName', true);\n          gameState.playerName = 'Sir Aldric of Westmarch';\n        }\n      }\n    },\n    memory_crystal: {\n      name: \"Memory Crystal\",\n      description: \"A small, glowing crystal that pulses with inner light. It seems to resonate with your thoughts.\",\n      keywords: [\"crystal\", \"memory\", \"gem\", \"stone\"],\n      type: \"quest\",\n      takeable: true,\n      usable: true,\n      onUse: function onUse(gameState, terminal) {\n        if (gameState.memoryFragments.length >= 5) {\n          terminal.print(\"The crystal glows brightly as it absorbs your recovered memories. You feel your mind becoming clearer and more focused. Your maximum health increases!\", 'memory-flash');\n          gameState.maxHealth += 15;\n          gameState.health += 15;\n          return true; // Crystal is consumed\n        } else {\n          terminal.print(\"The crystal glows faintly, but you need more memories to unlock its power.\", 'description');\n          return false; // Crystal is not consumed\n        }\n      }\n    },\n    wolf_pelt: {\n      name: \"Wolf Pelt\",\n      description: \"A rough pelt from a twisted wolf. The fur is patchy and has an unnatural texture, but it might be useful for crafting.\",\n      keywords: [\"pelt\", \"fur\", \"hide\", \"wolf\"],\n      type: \"material\",\n      takeable: true\n    },\n    twisted_claw: {\n      name: \"Twisted Claw\",\n      description: \"A sharp claw from a corrupted creature. It's unnaturally hard and seems to shimmer with dark energy.\",\n      keywords: [\"claw\", \"talon\", \"twisted\"],\n      type: \"material\",\n      takeable: true\n    },\n    bear_hide: {\n      name: \"Bear Hide\",\n      description: \"A thick hide from a massive bear. Despite the creature's corruption, the hide is still valuable and could be used for armor.\",\n      keywords: [\"hide\", \"skin\", \"bear\"],\n      type: \"material\",\n      takeable: true\n    },\n    bear_claws: {\n      name: \"Bear Claws\",\n      description: \"Massive claws from a twisted bear. They're razor-sharp and could potentially be crafted into weapons.\",\n      keywords: [\"claws\", \"talons\", \"bear\"],\n      type: \"material\",\n      takeable: true\n    }\n  },\n  // NPCs\n  npcs: {\n    child1: {\n      name: \"Village Boy\",\n      description: \"A young boy, no more than ten years old, with tousled hair and wide, frightened eyes.\",\n      presenceDescription: \"A young boy cowers against a tree, trying to protect a smaller girl.\",\n      keywords: [\"boy\", \"child\", \"kid\", \"children\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        if (!gameState.getFlag('savedChildren')) {\n          terminal.print(\"'Please help us!' the boy cries. 'That monster is going to eat us!'\", 'npc-dialog');\n        } else {\n          terminal.print(\"'Thank you for saving us,' the boy says, still trembling. 'That thing came from the forest. There are more of them around the village lately.'\", 'npc-dialog');\n        }\n      }\n    },\n    child2: {\n      name: \"Village Girl\",\n      description: \"A small girl with braided hair, tears streaming down her face.\",\n      presenceDescription: \"A little girl huddles close to the boy, sobbing quietly.\",\n      keywords: [\"girl\", \"child\", \"kid\", \"children\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        if (!gameState.getFlag('savedChildren')) {\n          terminal.print(\"The girl is too frightened to speak, only sobbing and pointing at the creature.\", 'npc-dialog');\n        } else {\n          terminal.print(\"'Are you a knight?' the girl asks between sniffles. 'My papa says knights protect people from monsters.'\", 'npc-dialog');\n          if (!gameState.getFlag('rememberedKnight')) {\n            terminal.print(\"Something about her words resonates with you. Knight... The title feels right somehow.\", 'memory-flash');\n          }\n        }\n      }\n    },\n    small_creature: {\n      name: \"Twisted Wolf\",\n      description: \"What might once have been a wolf, now warped by dark magic. Its fur is patchy, revealing scaled skin underneath, and its eyes glow with an unnatural red light.\",\n      presenceDescription: \"A twisted, wolf-like creature snarls and advances toward the children, its movements jerky and unnatural.\",\n      combatDescription: \"The creature's jaws drip with saliva as it turns its attention to you, growling deeply.\",\n      keywords: [\"creature\", \"monster\", \"wolf\", \"beast\"],\n      talkable: false,\n      attackable: true,\n      hidden: false,\n      health: 20,\n      maxHealth: 20,\n      damage: 4,\n      speed: 6,\n      onDefeat: function onDefeat(gameState, terminal, storyEngine) {\n        terminal.print(\"The twisted wolf collapses, its unnatural red glow fading from its eyes. The children are safe!\", 'combat-aftermath');\n        gameState.setFlag('savedChildren', true);\n\n        // Remove the creature and update the location description\n        var location = storyEngine.locations['village_outskirts'];\n        location.description = \"The forest thins as the path approaches what appears to be a small village. The children you saved have run back to safety.\";\n\n        // Remove the creature from the location's NPCs\n        var creatureIndex = location.npcs.indexOf('small_creature');\n        if (creatureIndex !== -1) {\n          location.npcs.splice(creatureIndex, 1);\n        }\n\n        // Remove the children from the location's NPCs since they ran to safety\n        var child1Index = location.npcs.indexOf('child1');\n        if (child1Index !== -1) {\n          location.npcs.splice(child1Index, 1);\n        }\n        var child2Index = location.npcs.indexOf('child2');\n        if (child2Index !== -1) {\n          location.npcs.splice(child2Index, 1);\n        }\n        terminal.print(\"'Thank you!' the boy cries, helping the girl to her feet. 'We need to get back to the village. You should come too—our elder will want to thank you.'\", 'npc-dialog');\n        terminal.print(\"The children run toward the village to the west.\", 'story-event');\n      }\n    },\n    village_elder: {\n      name: \"Village Elder\",\n      description: \"An elderly man with a long gray beard and kind eyes that have seen much hardship. He walks with the aid of a wooden staff.\",\n      presenceDescription: \"An elderly man with a long gray beard stands near the well, watching you with interest.\",\n      keywords: [\"elder\", \"old man\", \"man\", \"villager\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        if (gameState.getFlag('savedChildren')) {\n          terminal.print(\"'You have our thanks for saving those children,' the elder says. 'These are dark times. Strange creatures have been appearing in the forest, twisted by some evil magic.'\", 'npc-dialog');\n          terminal.print(\"'One larger beast has made its den north of here. It's been taking our livestock and threatening travelers. If you could deal with it, we would be most grateful. I've marked its location on a map in my house.'\", 'npc-dialog');\n          if (gameState.getFlag('defeatedVillageMonster')) {\n            terminal.print(\"'You've defeated the creature? Remarkable! You have the bearing of a warrior—perhaps even a knight. There are rumors that the royal knights were defeated by an evil wizard who has captured the queen. These twisted creatures began appearing after that.'\", 'npc-dialog');\n          }\n        } else {\n          terminal.print(\"'Welcome, stranger,' the elder says. 'You seem lost. Our village has seen better days—we're plagued by strange creatures from the forest.'\", 'npc-dialog');\n        }\n      }\n    },\n    blacksmith: {\n      name: \"Village Blacksmith\",\n      description: \"A muscular woman with soot-stained arms and a leather apron. Her hands are calloused from years of metalwork.\",\n      presenceDescription: \"A strong-looking woman works at the forge, hammering a piece of metal.\",\n      keywords: [\"blacksmith\", \"smith\", \"woman\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        if (gameState.getFlag('savedChildren')) {\n          terminal.print(\"'Heard you saved those kids,' the blacksmith says, pausing her work. 'We need more people like you around here. Take that old sword if you want—it's not much, but it's better than nothing.'\", 'npc-dialog');\n\n          // Make the rusty sword visible\n          storyEngine.items['rusty_sword'].hidden = false;\n        } else {\n          terminal.print(\"'Don't have time to chat,' the blacksmith says without looking up from her work. 'Unless you're buying something.'\", 'npc-dialog');\n        }\n      }\n    },\n    innkeeper: {\n      name: \"Innkeeper\",\n      description: \"A portly man with a friendly face and a stained apron. He has the look of someone who enjoys sampling his own cooking.\",\n      presenceDescription: \"A heavyset man stands behind the bar, wiping a mug with a cloth.\",\n      keywords: [\"innkeeper\", \"barkeeper\", \"bartender\", \"man\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        terminal.print(\"'Welcome to the Twisted Oak Inn,' the innkeeper says with a smile. 'Not many travelers these days, what with the strange creatures about. Can I get you something to drink?'\", 'npc-dialog');\n        if (gameState.getFlag('defeatedVillageMonster')) {\n          terminal.print(\"'You're the one who killed that beast in the cave? Drinks are on the house! We haven't had a proper hero around here since... well, since before the wizard took the queen.'\", 'npc-dialog');\n          if (!gameState.hasItem('health_potion')) {\n            terminal.print(\"'Here, take this healing potion. A traveling merchant left it as payment. Might come in handy for someone like you.'\", 'npc-dialog');\n\n            // Add health potion to inventory\n            gameState.addToInventory(_objectSpread({\n              id: 'health_potion'\n            }, storyEngine.items['health_potion']));\n            terminal.print(\"You received: Health Potion\", 'item-received');\n          }\n        }\n      }\n    },\n    merchant: {\n      name: \"Traveling Merchant\",\n      description: \"A thin woman with sharp eyes and colorful clothes. She has a small cart of goods beside her.\",\n      presenceDescription: \"A merchant with a small cart watches you carefully, evaluating you as a potential customer.\",\n      keywords: [\"merchant\", \"trader\", \"seller\", \"woman\"],\n      talkable: true,\n      attackable: false,\n      hidden: false,\n      onTalk: function onTalk(gameState, terminal, storyEngine) {\n        terminal.print(\"'Interested in trading?' the merchant asks. 'I don't have much these days—the roads are too dangerous with all these creatures about. I heard a wizard is responsible, twisting animals with dark magic.'\", 'npc-dialog');\n        if (gameState.getFlag('rememberedWizard')) {\n          terminal.print(\"'A wizard, you say? Yes, I remember now. He attacked the royal castle and took the queen. I need to find his tower.'\", 'player-dialog');\n          terminal.print(\"The merchant's eyes widen. 'The wizard's tower? They say it's deep in the eastern forest, but no one who's gone looking for it has returned. You'd have to be mad—or a hero—to go there.'\", 'npc-dialog');\n        }\n      }\n    },\n    cave_creature: {\n      name: \"Twisted Bear\",\n      description: \"A massive bear warped by dark magic. Its body is asymmetrical, with extra limbs growing from its torso, and its eyes glow with malevolent red light.\",\n      presenceDescription: \"A huge, twisted bear-like creature growls at the back of the cave, its red eyes fixed on you.\",\n      combatDescription: \"The monstrous bear rises to its full height, easily eight feet tall. Multiple limbs end in razor-sharp claws, and its jaws are filled with too many teeth.\",\n      keywords: [\"creature\", \"monster\", \"bear\", \"beast\"],\n      talkable: false,\n      attackable: true,\n      hidden: false,\n      health: 50,\n      maxHealth: 50,\n      damage: 8,\n      speed: 4,\n      rewards: {\n        healthIncrease: 10,\n        items: ['chainmail', 'steel_sword', 'knight_signet']\n      },\n      onDefeat: function onDefeat(gameState, terminal, storyEngine) {\n        terminal.print(\"The twisted bear collapses with a final roar. As it dies, you notice its form seems to partially revert to that of a normal bear, though the corruption is too deep to fully disappear.\", 'combat-aftermath');\n        gameState.setFlag('defeatedVillageMonster', true);\n        terminal.print(\"At the back of the cave, you find what appears to be the creature's hoard—items taken from its victims.\", 'story-event');\n\n        // Remove the creature from the location's NPCs\n        var location = storyEngine.locations['creature_den_interior'];\n        var index = location.npcs.indexOf('cave_creature');\n        if (index !== -1) {\n          location.npcs.splice(index, 1);\n        }\n\n        // Update the location description\n        location.description = \"The inside of the cave is damp and dark. Bones litter the floor, and a foul smell permeates the air. The twisted bear lies dead at the back of the cave.\";\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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b2YtbWVtb3J5Ly4vc3JjL2pzL2dhbWVEYXRhLmpzPzZmMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2FtZSBkYXRhOiBsb2NhdGlvbnMsIGl0ZW1zLCBhbmQgTlBDc1xuXG5leHBvcnQgY29uc3QgZ2FtZURhdGEgPSB7XG4gIC8vIExvY2F0aW9uc1xuICBsb2NhdGlvbnM6IHtcbiAgICAvLyBTdGFydGluZyBsb2NhdGlvblxuICAgIGNyb3Nzcm9hZHM6IHtcbiAgICAgIG5hbWU6IFwiQ3Jvc3Nyb2Fkc1wiLFxuICAgICAgc2NlbmU6IFwiY3Jvc3Nyb2Fkc1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiWW91IHN0YW5kIGF0IGEgZHVzdHkgY3Jvc3Nyb2Fkcy4gVGhlIGRpcnQgYmVuZWF0aCB5b3VyIGZlZXQgaXMgc3RhaW5lZCB3aXRoIHdoYXQgYXBwZWFycyB0byBiZSBkcmllZCBibG9vZOKAlHlvdXIgYmxvb2QuIFlvdXIgaGVhZCB0aHJvYnMgd2l0aCBwYWluLCBhbmQgeW91ciBtZW1vcnkgaXMgYSBmb2cuIFBhdGhzIGxlYWQgaW4gZm91ciBkaXJlY3Rpb25zIHRocm91Z2ggdGhlIHN1cnJvdW5kaW5nIGZvcmVzdC5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIG5vcnRoOiBcImZvcmVzdF9wYXRoX25vcnRoXCIsXG4gICAgICAgIHNvdXRoOiBcImZvcmVzdF9wYXRoX3NvdXRoXCIsXG4gICAgICAgIGVhc3Q6IFwiZm9yZXN0X3BhdGhfZWFzdFwiLFxuICAgICAgICB3ZXN0OiBcImZvcmVzdF9wYXRoX3dlc3RcIlxuICAgICAgfSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wiYmxvb2RcIiwgXCJzdGFpblwiLCBcInN0YWluc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJEYXJrLCBkcmllZCBibG9vZCBzdGFpbnMgdGhlIGRpcnQuIEl0IHNlZW1zIHRvIGJlIHlvdXJzLCB0aG91Z2ggeW91IGhhdmUgbm8gbWVtb3J5IG9mIGhvdyB5b3Ugd2VyZSBpbmp1cmVkLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wicGF0aFwiLCBcInBhdGhzXCIsIFwicm9hZFwiLCBcInJvYWRzXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkRpcnQgcGF0aHMgZXh0ZW5kIGluIGFsbCBmb3VyIGRpcmVjdGlvbnMsIGRpc2FwcGVhcmluZyBpbnRvIHRoZSBkZW5zZSBmb3Jlc3QuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJmb3Jlc3RcIiwgXCJ0cmVlc1wiLCBcIndvb2RzXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkEgdGhpY2sgZm9yZXN0IHN1cnJvdW5kcyB0aGUgY3Jvc3Nyb2Fkcywgd2l0aCB0YWxsIHRyZWVzIGJsb2NraW5nIG11Y2ggb2YgdGhlIHN1bmxpZ2h0LlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wiZ3JvdW5kXCIsIFwiZGlydFwiLCBcImVhcnRoXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBncm91bmQgaXMgZGlzdHVyYmVkLCBhcyBpZiB0aGVyZSB3YXMgYSBzdHJ1Z2dsZSBoZXJlLiBTY3VmZiBtYXJrcyBhbmQgb3ZlcnR1cm5lZCBzdG9uZXMgdGVsbCBhIHN0b3J5IG9mIHZpb2xlbmNlLlwiLFxuICAgICAgICAgIG9uRXhhbWluZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgICAgIGlmICghZ2FtZVN0YXRlLm1lbW9yeUZyYWdtZW50cy5pbmNsdWRlcygnY3Jvc3Nyb2Fkc19iYXR0bGUnKSkge1xuICAgICAgICAgICAgICBnYW1lU3RhdGUubWVtb3J5RnJhZ21lbnRzLnB1c2goJ2Nyb3Nzcm9hZHNfYmF0dGxlJyk7XG4gICAgICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiQXMgeW91IGV4YW1pbmUgdGhlIGdyb3VuZCBtb3JlIGNsb3NlbHksIGEgbWVtb3J5IGZsYXNoZXM6IFlvdSBzZWUgeW91cnNlbGYgZmlnaHRpbmcgbXVsdGlwbGUgc2hhZG93eSBmaWd1cmVzIGhlcmUsIHlvdXIgc3dvcmQgZmxhc2hpbmcgaW4gdGhlIG1vb25saWdodCBiZWZvcmUgc29tZXRoaW5nIHN0cmlrZXMgeW91IGZyb20gYmVoaW5kLlwiLCAnbWVtb3J5LWZsYXNoJyk7XG4gICAgICAgICAgICAgIGdhbWVTdGF0ZS5zZXRGbGFnKCdyZW1lbWJlcmVkQW1idXNoJywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBzaWducyBvZiB5b3VyIGRlc3BlcmF0ZSBiYXR0bGUgYXJlIHN0aWxsIHZpc2libGUgaW4gdGhlIGRpc3R1cmJlZCBlYXJ0aC5cIiwgJ2Rlc2NyaXB0aW9uJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgb25GaXJzdFZpc2l0OiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCkgPT4ge1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIllvdXIgaGVhZCBwb3VuZHMgYXMgeW91IHRyeSB0byByZW1lbWJlciB3aG8geW91IGFyZSBhbmQgaG93IHlvdSBnb3QgaGVyZS4gTm90aGluZyBjb21lcyB0byBtaW5kIGV4Y2VwdCBhIHZhZ3VlIHNlbnNlIG9mIHVyZ2VuY3kuXCIsICdtZW1vcnktZmxhc2gnKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIC8vIEZvcmVzdCBwYXRoc1xuICAgIGZvcmVzdF9wYXRoX3dlc3Q6IHtcbiAgICAgIG5hbWU6IFwiRm9yZXN0IFBhdGggLSBXZXN0XCIsXG4gICAgICBzY2VuZTogXCJmb3Jlc3RfcGF0aFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZvcmVzdCBwYXRoIHdpbmRzIHdlc3R3YXJkLiBUaGUgdHJlZXMgZ3JvdyBjbG9zZXIgdG9nZXRoZXIgaGVyZSwgYW5kIHRoZSBhaXIgZmVlbHMgY29vbGVyLiBZb3UgaGVhciBmYWludCBzb3VuZHMgb2YgZGlzdHJlc3MgaW4gdGhlIGRpc3RhbmNlLlwiLFxuICAgICAgZXhpdHM6IHtcbiAgICAgICAgZWFzdDogXCJjcm9zc3JvYWRzXCIsXG4gICAgICAgIHdlc3Q6IFwidmlsbGFnZV9vdXRza2lydHNcIlxuICAgICAgfSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wic291bmRzXCIsIFwiZGlzdHJlc3NcIiwgXCJub2lzZVwiLCBcImNyaWVzXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBzb3VuZHMgc2VlbSB0byBiZSBjb21pbmcgZnJvbSBmdXJ0aGVyIHdlc3TigJRwZXJoYXBzIGNoaWxkcmVuIGluIHRyb3VibGU/XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJ0cmVlc1wiLCBcImZvcmVzdFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgZm9yZXN0IGlzIGRlbnNlIGhlcmUsIHdpdGggYW5jaWVudCB0cmVlcyB0b3dlcmluZyBvdmVyaGVhZC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInBhdGhcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGRpcnQgcGF0aCBjb250aW51ZXMgd2VzdCwgbGVhZGluZyBkZWVwZXIgaW50byB0aGUgZm9yZXN0LlwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFxuICAgIHZpbGxhZ2Vfb3V0c2tpcnRzOiB7XG4gICAgICBuYW1lOiBcIlZpbGxhZ2UgT3V0c2tpcnRzXCIsXG4gICAgICBzY2VuZTogXCJ2aWxsYWdlX291dHNraXJ0c1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZvcmVzdCB0aGlucyBhcyB0aGUgcGF0aCBhcHByb2FjaGVzIHdoYXQgYXBwZWFycyB0byBiZSBhIHNtYWxsIHZpbGxhZ2UuIE5lYXJieSwgeW91IGhlYXIgY2hpbGRyZW4gc2NyZWFtaW5nIGluIHRlcnJvci5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIGVhc3Q6IHtcbiAgICAgICAgICBsb2NhdGlvbklkOiBcImZvcmVzdF9wYXRoX3dlc3RcIixcbiAgICAgICAgICBjb25kaXRpb246IChnYW1lU3RhdGUpID0+IHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBjaGlsZHJlbiBoYXZlIGJlZW4gc2F2ZWQgLSBpZiBub3QsIHBsYXllciBjYW5ub3QgbGVhdmVcbiAgICAgICAgICAgIGlmICghZ2FtZVN0YXRlLmdldEZsYWcoJ3NhdmVkQ2hpbGRyZW4nKSkge1xuICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHdvbGYgZGVhdGggc3RvcnlcbiAgICAgICAgICAgICAgZ2FtZVN0YXRlLnRyaWdnZXJXb2xmRGVhdGhTdG9yeSA9IHRydWU7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYmxvY2tlZE1lc3NhZ2U6IFwiXCJcbiAgICAgICAgfSxcbiAgICAgICAgd2VzdDoge1xuICAgICAgICAgIGxvY2F0aW9uSWQ6IFwidmlsbGFnZV9lbnRyYW5jZVwiLFxuICAgICAgICAgIGNvbmRpdGlvbjogKGdhbWVTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGNoaWxkcmVuIGhhdmUgYmVlbiBzYXZlZCAtIGlmIG5vdCwgcGxheWVyIGNhbm5vdCBsZWF2ZVxuICAgICAgICAgICAgaWYgKCFnYW1lU3RhdGUuZ2V0RmxhZygnc2F2ZWRDaGlsZHJlbicpKSB7XG4gICAgICAgICAgICAgIC8vIFRyaWdnZXIgd29sZiBkZWF0aCBzdG9yeVxuICAgICAgICAgICAgICBnYW1lU3RhdGUudHJpZ2dlcldvbGZEZWF0aFN0b3J5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBibG9ja2VkTWVzc2FnZTogXCJcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgbnBjczogW1wiY2hpbGQxXCIsIFwiY2hpbGQyXCIsIFwic21hbGxfY3JlYXR1cmVcIl0sXG4gICAgICBpdGVtczogW1wiYnJhbmNoXCJdLFxuICAgICAgZmVhdHVyZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJ2aWxsYWdlXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkEgc21hbGwgdmlsbGFnZSBsaWVzIHRvIHRoZSB3ZXN0LCB3aXRoIHNpbXBsZSB3b29kZW4gYnVpbGRpbmdzIHZpc2libGUgdGhyb3VnaCB0aGUgdHJlZXMuXCJcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG9uRmlyc3RWaXNpdDogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgdGVybWluYWwucHJpbnQoXCJUd28gY2hpbGRyZW4gYXJlIGJlaW5nIGF0dGFja2VkIGJ5IGEgdHdpc3RlZCwgc25hcmxpbmcgY3JlYXR1cmUhIFdpdGhvdXQgdGhpbmtpbmcsIHlvdSBsb29rIGZvciBzb21ldGhpbmcgdG8gdXNlIGFzIGEgd2VhcG9uLlwiLCAnc3RvcnktZXZlbnQnKTtcbiAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ21ldENoaWxkcmVuJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICB2aWxsYWdlX2VudHJhbmNlOiB7XG4gICAgICBuYW1lOiBcIlZpbGxhZ2UgRW50cmFuY2VcIixcbiAgICAgIHNjZW5lOiBcInZpbGxhZ2VfZW50cmFuY2VcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIllvdSBzdGFuZCBhdCB0aGUgZW50cmFuY2UgdG8gYSBtb2Rlc3QgdmlsbGFnZS4gU2ltcGxlIHdvb2RlbiBidWlsZGluZ3MgbGluZSBhIGNlbnRyYWwgZGlydCByb2FkLiBWaWxsYWdlcnMgbW92ZSBhYm91dCwgdGhvdWdoIHRoZXkgc2VlbSB3YXJ5IGFuZCBvbiBlZGdlLlwiLFxuICAgICAgZXhpdHM6IHtcbiAgICAgICAgZWFzdDogXCJ2aWxsYWdlX291dHNraXJ0c1wiLFxuICAgICAgICB3ZXN0OiBcInZpbGxhZ2Vfc3F1YXJlXCIsXG4gICAgICAgIG5vcnRoOiBcInZpbGxhZ2Vfc21pdGh5XCIsXG4gICAgICAgIHNvdXRoOiBcInZpbGxhZ2VfaW5uXCJcbiAgICAgIH0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImJ1aWxkaW5nc1wiLCBcImhvdXNlc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgYnVpbGRpbmdzIGFyZSBzaW1wbGUgYnV0IHN0dXJkeSwgbWFkZSBvZiB3b29kIHdpdGggdGhhdGNoZWQgcm9vZnMuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJ2aWxsYWdlcnNcIiwgXCJwZW9wbGVcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIHZpbGxhZ2VycyBnbGFuY2UgYXQgeW91IHdpdGggYSBtaXh0dXJlIG9mIGhvcGUgYW5kIHN1c3BpY2lvbi4gVGhleSBzZWVtIHRyb3VibGVkIGJ5IHNvbWV0aGluZy5cIlxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgb25GaXJzdFZpc2l0OiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCkgPT4ge1xuICAgICAgICBpZiAoZ2FtZVN0YXRlLmdldEZsYWcoJ3NhdmVkQ2hpbGRyZW4nKSkge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiQXMgeW91IGVudGVyIHRoZSB2aWxsYWdlLCBwZW9wbGUgdHVybiB0byBsb29rIGF0IHlvdS4gV29yZCBvZiB5b3VyIHJlc2N1ZSBvZiB0aGUgY2hpbGRyZW4gaGFzIGFscmVhZHkgc3ByZWFkLlwiLCAnc3RvcnktZXZlbnQnKTtcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIkFuIG9sZGVyIG1hbiBhcHByb2FjaGVzIHlvdS4gJ1lvdSBzYXZlZCB0aG9zZSBjaGlsZHJlbiEgUGxlYXNlLCBvdXIgdmlsbGFnZSBuZWVkcyBoZWxwIHdpdGggYW5vdGhlciBjcmVhdHVyZSB0aGF0J3MgYmVlbiB0ZXJyb3JpemluZyB1cy4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ3Zpc2l0ZWRWaWxsYWdlJywgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGVybWluYWwucHJpbnQoXCJUaGUgdmlsbGFnZXJzIGV5ZSB5b3Ugd2FyaWx5IGFzIHlvdSBlbnRlci4gWW91IGhlYXIgd2hpc3BlcnMgYWJvdXQgY2hpbGRyZW4gYmVpbmcgYXR0YWNrZWQgb3V0c2lkZSB0aGUgdmlsbGFnZS5cIiwgJ3N0b3J5LWV2ZW50Jyk7XG4gICAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ3Zpc2l0ZWRWaWxsYWdlJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIHZpbGxhZ2Vfc3F1YXJlOiB7XG4gICAgICBuYW1lOiBcIlZpbGxhZ2UgU3F1YXJlXCIsXG4gICAgICBzY2VuZTogXCJ2aWxsYWdlX3NxdWFyZVwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGNlbnRyYWwgc3F1YXJlIG9mIHRoZSB2aWxsYWdlLiBBIHdlbGwgc2l0cyBpbiB0aGUgbWlkZGxlLCBhbmQgdmlsbGFnZXJzIGdhdGhlciBpbiBzbWFsbCBncm91cHMsIHNwZWFraW5nIGluIGh1c2hlZCB0b25lcy4gQSB2aWxsYWdlIGVsZGVyIHN0YW5kcyBuZWFyIHRoZSB3ZWxsLlwiLFxuICAgICAgZXhpdHM6IHtcbiAgICAgICAgZWFzdDogXCJ2aWxsYWdlX2VudHJhbmNlXCIsXG4gICAgICAgIG5vcnRoOiBcInZpbGxhZ2VfZWxkZXJfaG91c2VcIixcbiAgICAgICAgc291dGg6IFwidmlsbGFnZV9tYXJrZXRcIlxuICAgICAgfSxcbiAgICAgIG5wY3M6IFtcInZpbGxhZ2VfZWxkZXJcIl0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcIndlbGxcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQSBzdG9uZSB3ZWxsIHN0YW5kcyBpbiB0aGUgY2VudGVyIG9mIHRoZSBzcXVhcmUsIHByb3ZpZGluZyB3YXRlciBmb3IgdGhlIHZpbGxhZ2UuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJ2aWxsYWdlcnNcIiwgXCJwZW9wbGVcIiwgXCJncm91cHNcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIHZpbGxhZ2VycyBzcGVhayBxdWlldGx5IGFtb25nIHRoZW1zZWx2ZXMsIG9jY2FzaW9uYWxseSBnbGFuY2luZyBpbiB5b3VyIGRpcmVjdGlvbi5cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcbiAgICB2aWxsYWdlX3NtaXRoeToge1xuICAgICAgbmFtZTogXCJWaWxsYWdlIFNtaXRoeVwiLFxuICAgICAgc2NlbmU6IFwidmlsbGFnZV9zbWl0aHlcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSB2aWxsYWdlIGJsYWNrc21pdGgncyBzaG9wLiBUaGUgZm9yZ2UgaXMgaG90LCBhbmQgdGhlIHNvdW5kIG9mIGhhbW1lcmluZyBmaWxscyB0aGUgYWlyLiBUb29scyBhbmQgd2VhcG9ucyBsaW5lIHRoZSB3YWxscy5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIHNvdXRoOiBcInZpbGxhZ2VfZW50cmFuY2VcIlxuICAgICAgfSxcbiAgICAgIG5wY3M6IFtcImJsYWNrc21pdGhcIl0sXG4gICAgICBpdGVtczogW1wicnVzdHlfc3dvcmRcIl0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImZvcmdlXCIsIFwiZnVybmFjZVwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgZm9yZ2UgZ2xvd3Mgd2l0aCBob3QgY29hbHMsIHJlYWR5IGZvciBtZXRhbHdvcmtpbmcuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJ0b29sc1wiLCBcIndlYXBvbnNcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVmFyaW91cyB0b29scyBhbmQgc2ltcGxlIHdlYXBvbnMgaGFuZyBvbiB0aGUgd2FsbHMgb3IgcmVzdCBvbiByYWNrcy5cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcbiAgICB2aWxsYWdlX2lubjoge1xuICAgICAgbmFtZTogXCJWaWxsYWdlIElublwiLFxuICAgICAgc2NlbmU6IFwidmlsbGFnZV9pbm5cIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgY296eSBpbm4gd2l0aCBhIGZldyB0YWJsZXMgYW5kIGEgc21hbGwgYmFyLiBBIGZpcmUgY3JhY2tsZXMgaW4gdGhlIGhlYXJ0aCwgcHJvdmlkaW5nIHdhcm10aCBhbmQgbGlnaHQuXCIsXG4gICAgICBleGl0czoge1xuICAgICAgICBub3J0aDogXCJ2aWxsYWdlX2VudHJhbmNlXCJcbiAgICAgIH0sXG4gICAgICBucGNzOiBbXCJpbm5rZWVwZXJcIl0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImZpcmVcIiwgXCJoZWFydGhcIiwgXCJmaXJlcGxhY2VcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQSB3YXJtIGZpcmUgYnVybnMgaW4gdGhlIHN0b25lIGhlYXJ0aCwgY2FzdGluZyBmbGlja2VyaW5nIHNoYWRvd3MgYXJvdW5kIHRoZSByb29tLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1widGFibGVzXCIsIFwiY2hhaXJzXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIldvb2RlbiB0YWJsZXMgYW5kIGNoYWlycyBhcmUgYXJyYW5nZWQgYXJvdW5kIHRoZSByb29tLCBtb3N0IG9mIHRoZW0gZW1wdHkuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJiYXJcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQSBzaW1wbGUgd29vZGVuIGJhciBzdGFuZHMgYWxvbmcgb25lIHdhbGwsIHdpdGggYSBmZXcgYm90dGxlcyBhbmQgbXVncyBiZWhpbmQgaXQuXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXG4gICAgdmlsbGFnZV9lbGRlcl9ob3VzZToge1xuICAgICAgbmFtZTogXCJWaWxsYWdlIEVsZGVyJ3MgSG91c2VcIixcbiAgICAgIHNjZW5lOiBcInZpbGxhZ2VfZWxkZXJfaG91c2VcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBob21lIG9mIHRoZSB2aWxsYWdlIGVsZGVyLiBJdCdzIGxhcmdlciB0aGFuIG1vc3QgaG91c2VzIGluIHRoZSB2aWxsYWdlLCB3aXRoIGJvb2tzaGVsdmVzIGxpbmluZyB0aGUgd2FsbHMgYW5kIGEgbGFyZ2UgdGFibGUgaW4gdGhlIGNlbnRlci5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIHNvdXRoOiBcInZpbGxhZ2Vfc3F1YXJlXCJcbiAgICAgIH0sXG4gICAgICBpdGVtczogW1wibGVhdGhlcl9hcm1vclwiXSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wiYm9va3NoZWx2ZXNcIiwgXCJib29rc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgYm9va3NoZWx2ZXMgY29udGFpbiBvbGQgdG9tZXMgYW5kIHNjcm9sbHMsIG1hbnkgb2YgdGhlbSBhcHBlYXJpbmcgdG8gYmUgaGlzdG9yaWNhbCByZWNvcmRzLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1widGFibGVcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQSBsYXJnZSB3b29kZW4gdGFibGUgZG9taW5hdGVzIHRoZSBjZW50ZXIgb2YgdGhlIHJvb20sIHdpdGggYSBtYXAgb2YgdGhlIHN1cnJvdW5kaW5nIGFyZWEgc3ByZWFkIGFjcm9zcyBpdC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcIm1hcFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgbWFwIHNob3dzIHRoZSB2aWxsYWdlIGFuZCBzdXJyb3VuZGluZyBmb3Jlc3QuIEEgbG9jYXRpb24gdG8gdGhlIG5vcnRoIGlzIG1hcmtlZCB3aXRoIGEgcmVkIFggYW5kIGxhYmVsZWQgJ0NyZWF0dXJlJ3MgRGVuJy5cIixcbiAgICAgICAgICByZXZlYWxzSXRlbTogXCJtYXBfdG9fZGVuXCIsXG4gICAgICAgICAgYXV0b1Rha2U6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJzY3JvbGxcIiwgXCJzY3JvbGxzXCIsIFwicGFyY2htZW50XCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFtb25nIHRoZSBzY3JvbGxzLCBvbmUgY2F0Y2hlcyB5b3VyIGV5ZS4gSXQgYmVhcnMgYSByb3lhbCBzZWFsIGFuZCBtZW50aW9ucyBzb21ldGhpbmcgYWJvdXQgYSAnS25pZ2h0IENvbW1hbmRlcicuXCIsXG4gICAgICAgICAgb25FeGFtaW5lOiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFnYW1lU3RhdGUubWVtb3J5RnJhZ21lbnRzLmluY2x1ZGVzKCdyb3lhbF9zY3JvbGwnKSkge1xuICAgICAgICAgICAgICBnYW1lU3RhdGUubWVtb3J5RnJhZ21lbnRzLnB1c2goJ3JveWFsX3Njcm9sbCcpO1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIkFzIHlvdSByZWFkIHRoZSBzY3JvbGwsIGEgbWVtb3J5IGZsYXNoZXM6IFlvdSBzZWUgeW91cnNlbGYga25lZWxpbmcgYmVmb3JlIGEgdGhyb25lLCByZWNlaXZpbmcgYSBzd29yZCBmcm9tIGEgY3Jvd25lZCB3b21hbi4gJ1Byb3RlY3QgdGhlIHJlYWxtLCBTaXIgS25pZ2h0LCcgc2hlIHNheXMuXCIsICdtZW1vcnktZmxhc2gnKTtcbiAgICAgICAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ3JlbWVtYmVyZWRLbmlnaHRob29kJywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSByb3lhbCBzY3JvbGwgc3RpbGwgYmVhcnMgdGhlIHNlYWwgb2YgeW91ciBmb3JtZXIgcXVlZW4uXCIsICdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXG4gICAgdmlsbGFnZV9tYXJrZXQ6IHtcbiAgICAgIG5hbWU6IFwiVmlsbGFnZSBNYXJrZXRcIixcbiAgICAgIHNjZW5lOiBcInZpbGxhZ2VfbWFya2V0XCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJUaGUgdmlsbGFnZSBtYXJrZXQgYXJlYS4gU2V2ZXJhbCBzdGFsbHMgYXJlIHNldCB1cCwgdGhvdWdoIG1hbnkgYXJlIGVtcHR5IG9yIGFiYW5kb25lZC4gQSBmZXcgdmlsbGFnZXJzIGJyb3dzZSB0aGUgcmVtYWluaW5nIGdvb2RzLlwiLFxuICAgICAgZXhpdHM6IHtcbiAgICAgICAgbm9ydGg6IFwidmlsbGFnZV9zcXVhcmVcIlxuICAgICAgfSxcbiAgICAgIG5wY3M6IFtcIm1lcmNoYW50XCJdLFxuICAgICAgZmVhdHVyZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJzdGFsbHNcIiwgXCJzdGFuZHNcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiTW9zdCBvZiB0aGUgbWFya2V0IHN0YWxscyBhcmUgZW1wdHkgb3IgaW4gZGlzcmVwYWlyLiBUaGUgZmV3IHRoYXQgcmVtYWluIG9wZW4gb2ZmZXIgYmFzaWMgZ29vZHMuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJnb29kc1wiLCBcIndhcmVzXCIsIFwibWVyY2hhbmRpc2VcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGF2YWlsYWJsZSBnb29kcyBhcmUgc2ltcGxlOiBzb21lIGZvb2QsIGNsb3RoLCBhbmQgYmFzaWMgdG9vbHMuIE5vdGhpbmcgcGFydGljdWxhcmx5IHZhbHVhYmxlLlwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFxuICAgIGZvcmVzdF9wYXRoX25vcnRoOiB7XG4gICAgICBuYW1lOiBcIkZvcmVzdCBQYXRoIC0gTm9ydGhcIixcbiAgICAgIHNjZW5lOiBcImZvcmVzdF9wYXRoXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJUaGUgZm9yZXN0IHBhdGggY29udGludWVzIG5vcnRod2FyZC4gVGhlIHRyZWVzIGFyZSB0aGlubmVyIGhlcmUsIGFsbG93aW5nIG1vcmUgc3VubGlnaHQgdG8gZmlsdGVyIHRocm91Z2guXCIsXG4gICAgICBleGl0czoge1xuICAgICAgICBzb3V0aDogXCJjcm9zc3JvYWRzXCIsXG4gICAgICAgIG5vcnRoOiB7XG4gICAgICAgICAgbG9jYXRpb25JZDogXCJjcmVhdHVyZV9kZW5fZW50cmFuY2VcIixcbiAgICAgICAgICBjb25kaXRpb246IChnYW1lU3RhdGUpID0+IGdhbWVTdGF0ZS5oYXNJdGVtKCdtYXBfdG9fZGVuJyksXG4gICAgICAgICAgYmxvY2tlZE1lc3NhZ2U6IFwiVGhlIHBhdGggc2VlbXMgdG8gY29udGludWUgbm9ydGgsIGJ1dCB5b3UncmUgbm90IHN1cmUgd2hlcmUgaXQgbGVhZHMuIFBlcmhhcHMgc29tZW9uZSBpbiB0aGUgdmlsbGFnZSB3b3VsZCBrbm93LlwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInRyZWVzXCIsIFwiZm9yZXN0XCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBmb3Jlc3QgaXMgbGVzcyBkZW5zZSBoZXJlLCB3aXRoIG1vcmUgc3BhY2UgYmV0d2VlbiB0aGUgdHJlZXMuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJwYXRoXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBkaXJ0IHBhdGggd2luZHMgbm9ydGh3YXJkIHRocm91Z2ggdGhlIGZvcmVzdC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInN1bmxpZ2h0XCIsIFwibGlnaHRcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiU3VubGlnaHQgZmlsdGVycyB0aHJvdWdoIHRoZSBjYW5vcHksIGNyZWF0aW5nIGRhcHBsZWQgcGF0dGVybnMgb24gdGhlIGdyb3VuZC5cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcbiAgICBjcmVhdHVyZV9kZW5fZW50cmFuY2U6IHtcbiAgICAgIG5hbWU6IFwiQ3JlYXR1cmUncyBEZW4gLSBFbnRyYW5jZVwiLFxuICAgICAgc2NlbmU6IFwiY2F2ZV9lbnRyYW5jZVwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSBkYXJrIGNhdmUgbW91dGggb3BlbnMgaW4gdGhlIHNpZGUgb2YgYSBzbWFsbCBoaWxsLiBTdHJhbmdlIHNjcmF0Y2hlcyBtYXJrIHRoZSByb2NrcyBhcm91bmQgdGhlIGVudHJhbmNlLCBhbmQgYW4gdW5uYXR1cmFsIHNpbGVuY2UgaGFuZ3MgaW4gdGhlIGFpci5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIHNvdXRoOiBcImZvcmVzdF9wYXRoX25vcnRoXCIsXG4gICAgICAgIG5vcnRoOiBcImNyZWF0dXJlX2Rlbl9pbnRlcmlvclwiXG4gICAgICB9LFxuICAgICAgZmVhdHVyZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJjYXZlXCIsIFwiZW50cmFuY2VcIiwgXCJtb3V0aFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgY2F2ZSBlbnRyYW5jZSBpcyByb3VnaGx5IGNpcmN1bGFyLCBhYm91dCBzZXZlbiBmZWV0IGluIGRpYW1ldGVyLiBDbGF3IG1hcmtzIHN1cnJvdW5kIHRoZSBvcGVuaW5nLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wic2NyYXRjaGVzXCIsIFwibWFya3NcIiwgXCJjbGF3XCIsIFwiY2xhd3NcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiRGVlcCBnb3VnZXMgaW4gdGhlIHN0b25lIHN1Z2dlc3QgYSBjcmVhdHVyZSB3aXRoIGZvcm1pZGFibGUgY2xhd3MuIFNvbWUgbWFya3MgYXJlIGZyZXNoLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1wiaGlsbFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgaGlsbCBpcyBzbWFsbCBidXQgc3RlZXAsIGNvdmVyZWQgaW4gc3BhcnNlIHZlZ2V0YXRpb24uIFRoZSBjYXZlIGFwcGVhcnMgdG8gZ28gZGVlcCBpbnNpZGUuXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXG4gICAgY3JlYXR1cmVfZGVuX2ludGVyaW9yOiB7XG4gICAgICBuYW1lOiBcIkNyZWF0dXJlJ3MgRGVuIC0gSW50ZXJpb3JcIixcbiAgICAgIHNjZW5lOiBcImNhdmVfaW50ZXJpb3JcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBpbnNpZGUgb2YgdGhlIGNhdmUgaXMgZGFtcCBhbmQgZGFyay4gQm9uZXMgbGl0dGVyIHRoZSBmbG9vciwgYW5kIGEgZm91bCBzbWVsbCBwZXJtZWF0ZXMgdGhlIGFpci4gQXQgdGhlIGJhY2sgb2YgdGhlIGNhdmUsIGEgbGFyZ2UgY3JlYXR1cmUgc3RpcnMuXCIsXG4gICAgICBleGl0czoge1xuICAgICAgICBzb3V0aDogXCJjcmVhdHVyZV9kZW5fZW50cmFuY2VcIlxuICAgICAgfSxcbiAgICAgIG5wY3M6IFtcImNhdmVfY3JlYXR1cmVcIl0sXG4gICAgICBpdGVtczogW10sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImJvbmVzXCIsIFwicmVtYWluc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJBbmltYWwgYm9uZXMgYXJlIHNjYXR0ZXJlZCBhY3Jvc3MgdGhlIGZsb29yLCBwaWNrZWQgY2xlYW4uIFNvbWUgYXBwZWFyIHRvIGJlIGZyb20gbGl2ZXN0b2NrLCBvdGhlcnMgZnJvbSBmb3Jlc3QgYW5pbWFscy5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInNtZWxsXCIsIFwib2RvclwiLCBcInN0ZW5jaFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJBIHB1dHJpZCBzbWVsbCBmaWxscyB0aGUgY2F2ZeKAlGEgbWl4dHVyZSBvZiByb3R0aW5nIG1lYXQgYW5kIHNvbWV0aGluZyBlbHNlLCBzb21ldGhpbmcgdW5uYXR1cmFsLlwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBvbkZpcnN0VmlzaXQ6IChnYW1lU3RhdGUsIHRlcm1pbmFsKSA9PiB7XG4gICAgICAgIHRlcm1pbmFsLnByaW50KFwiQXMgeW91ciBleWVzIGFkanVzdCB0byB0aGUgZGFya25lc3MsIHlvdSBzZWUgYSBsYXJnZSwgdHdpc3RlZCBjcmVhdHVyZSBhdCB0aGUgYmFjayBvZiB0aGUgY2F2ZS4gSXQgd2FzIG9uY2UgYSBiZWFyLCBidXQgbm93IGl0J3Mgc29tZXRoaW5nIGVsc2XigJRpdHMgZm9ybSB3YXJwZWQgYnkgZGFyayBtYWdpYywgd2l0aCBleHRyYSBsaW1icyBhbmQgZ2xvd2luZyByZWQgZXllcy5cIiwgJ3N0b3J5LWV2ZW50Jyk7XG4gICAgICAgIHRlcm1pbmFsLnByaW50KFwiVGhlIGNyZWF0dXJlIGdyb3dscyBhcyBpdCBub3RpY2VzIHlvdSwgcmlzaW5nIHRvIGl0cyBmZWV0IGFuZCBwcmVwYXJpbmcgdG8gYXR0YWNrIVwiLCAnc3RvcnktZXZlbnQnKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIGZvcmVzdF9wYXRoX2Vhc3Q6IHtcbiAgICAgIG5hbWU6IFwiRm9yZXN0IFBhdGggLSBFYXN0XCIsXG4gICAgICBzY2VuZTogXCJmb3Jlc3RfcGF0aFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZvcmVzdCBwYXRoIGV4dGVuZHMgZWFzdHdhcmQuIFRoZSB0cmVlcyBoZXJlIGFyZSBvbGRlciBhbmQgdGFsbGVyLCB3aXRoIHRoaWNrIGNhbm9waWVzIHRoYXQgYmxvY2sgbXVjaCBvZiB0aGUgc3VubGlnaHQuXCIsXG4gICAgICBleGl0czoge1xuICAgICAgICB3ZXN0OiBcImNyb3Nzcm9hZHNcIixcbiAgICAgICAgZWFzdDogXCJmb3Jlc3RfY2xlYXJpbmdcIlxuICAgICAgfSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1widHJlZXNcIiwgXCJmb3Jlc3RcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQW5jaWVudCB0cmVlcyB0b3dlciBvdmVyaGVhZCwgdGhlaXIgbWFzc2l2ZSB0cnVua3MgY292ZXJlZCBpbiBtb3NzIGFuZCBsaWNoZW4uXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJwYXRoXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBkaXJ0IHBhdGggd2luZHMgdGhyb3VnaCB0aGUgbWFzc2l2ZSB0cmVlcywgb2NjYXNpb25hbGx5IG9ic2N1cmVkIGJ5IHJvb3RzIGFuZCB1bmRlcmdyb3d0aC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImNhbm9weVwiLCBcImxlYXZlc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgZGVuc2UgY2Fub3B5IGhpZ2ggYWJvdmUgYWxsb3dzIG9ubHkgb2NjYXNpb25hbCBzaGFmdHMgb2Ygc3VubGlnaHQgdG8gcmVhY2ggdGhlIGZvcmVzdCBmbG9vci5cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcbiAgICBmb3Jlc3RfY2xlYXJpbmc6IHtcbiAgICAgIG5hbWU6IFwiRm9yZXN0IENsZWFyaW5nXCIsXG4gICAgICBzY2VuZTogXCJmb3Jlc3RfY2xlYXJpbmdcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgY2lyY3VsYXIgY2xlYXJpbmcgaW4gdGhlIGZvcmVzdC4gU3VubGlnaHQgc3RyZWFtcyBkb3duLCBpbGx1bWluYXRpbmcgYSBzbWFsbCBwb25kIGluIHRoZSBjZW50ZXIuIFRoZSB3YXRlciByZWZsZWN0cyB0aGUgc2t5IGFib3ZlLCB1bm5hdHVyYWxseSBzdGlsbCBhbmQgY2xlYXIuXCIsXG4gICAgICBleGl0czoge1xuICAgICAgICB3ZXN0OiBcImZvcmVzdF9wYXRoX2Vhc3RcIixcbiAgICAgICAgZWFzdDogXCJkZWVwX2ZvcmVzdFwiXG4gICAgICB9LFxuICAgICAgZmVhdHVyZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJwb25kXCIsIFwid2F0ZXJcIiwgXCJwb29sXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBwb25kJ3Mgc3VyZmFjZSBpcyBtaXJyb3ItbGlrZSwgcmVmbGVjdGluZyB0aGUgc2t5IHBlcmZlY3RseS4gQXMgeW91IGxvb2sgY2xvc2VyLCB5b3Ugc2VlIG5vdCBqdXN0IHRoZSBza3kncyByZWZsZWN0aW9uLCBidXQgZmxlZXRpbmcgaW1hZ2Vz4oCUYSBjYXN0bGUsIGEgY3Jvd25lZCB3b21hbiwgYSBtYW4gaW4gYXJtb3IuLi5cIixcbiAgICAgICAgICBvbkV4YW1pbmU6IChnYW1lU3RhdGUsIHRlcm1pbmFsKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMpIHtcbiAgICAgICAgICAgICAgZ2FtZVN0YXRlLm1lbW9yeUZyYWdtZW50cyA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoIWdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMuaW5jbHVkZXMoJ3BvbmRfdmlzaW9ucycpKSB7XG4gICAgICAgICAgICAgIGdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMucHVzaCgncG9uZF92aXNpb25zJyk7XG4gICAgICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiVGhlIGltYWdlcyBpbiB0aGUgd2F0ZXIgYmVjb21lIGNsZWFyZXI6IFlvdSBzZWUgeW91cnNlbGYgaW4gc2hpbmluZyBhcm1vciwgc3RhbmRpbmcgaW4gYSBncmVhdCBoYWxsLiBBIGJlYXV0aWZ1bCBxdWVlbiBzcGVha3M6ICdSaXNlLCBTaXIgS25pZ2h0LiBUaGUga2luZ2RvbSBuZWVkcyB5b3VyIGNvdXJhZ2UuJ1wiLCAnbWVtb3J5LWZsYXNoJyk7XG4gICAgICAgICAgICAgIGdhbWVTdGF0ZS5zZXRGbGFnKCdyZW1lbWJlcmVkS25pZ2h0JywgdHJ1ZSk7XG4gICAgICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiWW91IHJlbWVtYmVyIG5vd+KAlHlvdSBhcmUgYSBrbmlnaHQhIEJ1dCB3aHkgd2VyZSB5b3Ugb24gdGhhdCByb2FkLCBhbmQgd2hhdCBoYXBwZW5lZCB0byB5b3VyIGFybW9yIGFuZCB3ZWFwb25zP1wiLCAnbWVtb3J5LWZsYXNoJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMubGVuZ3RoID49IDMpIHtcbiAgICAgICAgICAgICAgdGVybWluYWwucHJpbnQoXCJUaGUgcG9uZCBzaG93cyB5b3UgbW9yZTogQSBkYXJrIHdpemFyZCBjYXN0aW5nIGEgc3BlbGwsIHlvdXIgbWVtb3JpZXMgYmVpbmcgdG9ybiBhd2F5IGFzIHlvdSBmYWxsIHVuY29uc2Npb3VzLiBZb3UgcmVtZW1iZXIgbm934oCUeW91IHdlcmUgc2VudCB0byBzdG9wIGhpbSFcIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICAgICAgICBpZiAoIWdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMuaW5jbHVkZXMoJ3dpemFyZF9iZXRyYXlhbCcpKSB7XG4gICAgICAgICAgICAgICAgZ2FtZVN0YXRlLm1lbW9yeUZyYWdtZW50cy5wdXNoKCd3aXphcmRfYmV0cmF5YWwnKTtcbiAgICAgICAgICAgICAgICBnYW1lU3RhdGUuc2V0RmxhZygncmVtZW1iZXJlZE1pc3Npb24nLCB0cnVlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGVybWluYWwucHJpbnQoXCJUaGUgcG9uZCdzIHN1cmZhY2UgcmlwcGxlcyBnZW50bHksIGJ1dCB0aGUgdmlzaW9ucyByZW1haW4gdW5jbGVhci4gUGVyaGFwcyBtb3JlIG1lbW9yaWVzIHdvdWxkIGhlbHAgZm9jdXMgd2hhdCB5b3Ugc2VlIGhlcmUuXCIsICdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJjbGVhcmluZ1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgY2xlYXJpbmcgaXMgYSBwZXJmZWN0IGNpcmNsZSwgYXMgaWYgZGVsaWJlcmF0ZWx5IGNyZWF0ZWQgcmF0aGVyIHRoYW4gbmF0dXJhbGx5IGZvcm1lZC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInN1bmxpZ2h0XCIsIFwibGlnaHRcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiU3VubGlnaHQgZmlsbHMgdGhlIGNsZWFyaW5nLCB3YXJtIGFuZCBicmlnaHQgY29tcGFyZWQgdG8gdGhlIHNoYWRvd3kgZm9yZXN0IGFyb3VuZCBpdC5cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcbiAgICBkZWVwX2ZvcmVzdDoge1xuICAgICAgbmFtZTogXCJEZWVwIEZvcmVzdFwiLFxuICAgICAgc2NlbmU6IFwiZGVlcF9mb3Jlc3RcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSBkZWVwZXN0IHBhcnQgb2YgdGhlIGZvcmVzdC4gVGhlIHRyZWVzIGhlcmUgYXJlIGFuY2llbnQgYW5kIG1hc3NpdmUsIHRoZWlyIHJvb3RzIGNyZWF0aW5nIGEgbWF6ZSBvbiB0aGUgZm9yZXN0IGZsb29yLiBTdHJhbmdlIGdsb3dpbmcgZnVuZ2kgZ3JvdyBvbiB0aGUgdHJlZXMsIHByb3ZpZGluZyBhbiBlZXJpZSBibHVlIGxpZ2h0LlwiLFxuICAgICAgZXhpdHM6IHtcbiAgICAgICAgd2VzdDogXCJmb3Jlc3RfY2xlYXJpbmdcIixcbiAgICAgICAgZWFzdDoge1xuICAgICAgICAgIGxvY2F0aW9uSWQ6IFwid2l6YXJkX3Rvd2VyX2Jhc2VcIixcbiAgICAgICAgICBjb25kaXRpb246IChnYW1lU3RhdGUpID0+IGdhbWVTdGF0ZS5nZXRGbGFnKCdyZW1lbWJlcmVkV2l6YXJkJyksXG4gICAgICAgICAgYmxvY2tlZE1lc3NhZ2U6IFwiVGhlIGZvcmVzdCBzZWVtcyB0byBjb250aW51ZSBlYXN0d2FyZCwgYnV0IHNvbWV0aGluZyBtYWtlcyB5b3UgaGVzaXRhdGUuIFlvdSBmZWVsIHlvdSdyZSBub3QgcmVhZHkgdG8gZ28gdGhhdCB3YXkgeWV0LlwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInRyZWVzXCIsIFwiZm9yZXN0XCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSB0cmVlcyBoZXJlIG11c3QgYmUgY2VudHVyaWVzIG9sZCwgd2l0aCB0cnVua3Mgd2lkZXIgdGhhbiBhIG1hbiBpcyB0YWxsLiBUaGV5IHNlZW0gdG8gd2F0Y2ggeW91IHdpdGggYW5jaWVudCBhd2FyZW5lc3MuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJyb290c1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJNYXNzaXZlIHJvb3RzIHNuYWtlIGFjcm9zcyB0aGUgZ3JvdW5kLCBjcmVhdGluZyBuYXR1cmFsIHN0ZXBzIGFuZCBiYXJyaWVycy5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImZ1bmdpXCIsIFwibXVzaHJvb21zXCIsIFwiZ2xvd1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJCaW9sdW1pbmVzY2VudCBmdW5naSBncm93IG9uIHRoZSB0cmVlcyBhbmQgcm9vdHMsIGVtaXR0aW5nIGEgc29mdCBibHVlIGdsb3cgdGhhdCBpbGx1bWluYXRlcyB0aGUgZm9yZXN0IHdpdGggb3RoZXJ3b3JsZGx5IGxpZ2h0LlwiLFxuICAgICAgICAgIG9uRXhhbWluZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgICAgIGlmICghZ2FtZVN0YXRlLmdldEZsYWcoJ3JlbWVtYmVyZWRXaXphcmQnKSkge1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIkFzIHlvdSB0b3VjaCBvbmUgb2YgdGhlIGdsb3dpbmcgbXVzaHJvb21zLCBhbm90aGVyIG1lbW9yeSBmbGFzaGVzIGluIHlvdXIgbWluZDogYSB0YWxsIG1hbiBpbiBmbG93aW5nIHJvYmVzLCBoaXMgaGFuZHMgY3JhY2tsaW5nIHdpdGggZW5lcmd5LiAnWW91ciBxdWVlbiBjYW5ub3QgcHJvdGVjdCB5b3Ugbm93LCBrbmlnaHQsJyBoZSBzbmVlcnMuICdNeSBtYWdpYyB3aWxsIHR3aXN0IHRoaXMgbGFuZCB1bnRpbCBpdCBib3dzIHRvIG1lISdcIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICAgICAgICBnYW1lU3RhdGUuc2V0RmxhZygncmVtZW1iZXJlZFdpemFyZCcsIHRydWUpO1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSB3aXphcmQhIEhlIGF0dGFja2VkIHlvdS4uLiBoZSBtdXN0IGhhdmUgdGFrZW4gdGhlIHF1ZWVuISBZb3UgbXVzdCBmaW5kIGhpcyB0b3dlciBhbmQgc3RvcCBoaW0gYmVmb3JlIGhpcyBjb3JydXB0aW9uIHNwcmVhZHMgZnVydGhlci5cIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXG4gICAgd2l6YXJkX3Rvd2VyX2Jhc2U6IHtcbiAgICAgIG5hbWU6IFwiV2l6YXJkJ3MgVG93ZXIgLSBCYXNlXCIsXG4gICAgICBzY2VuZTogXCJ3aXphcmRfdG93ZXJfZXh0ZXJpb3JcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgdGFsbCwgdHdpc3RlZCB0b3dlciByaXNlcyBiZWZvcmUgeW91LCBpdHMgYmxhY2sgc3RvbmUgc2VlbWluZyB0byBhYnNvcmIgdGhlIGxpZ2h0IGFyb3VuZCBpdC4gVGhlIGZvcmVzdCBoYXMgYmVlbiBjbGVhcmVkIGluIGEgcGVyZmVjdCBjaXJjbGUgYXJvdW5kIHRoZSBzdHJ1Y3R1cmUsIGFuZCB0aGUgZ3JvdW5kIGlzIGJhcnJlbiBhbmQgY3JhY2tlZC5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIHdlc3Q6IFwiZGVlcF9mb3Jlc3RcIixcbiAgICAgICAgZW50ZXI6IFwid2l6YXJkX3Rvd2VyX2VudHJhbmNlXCJcbiAgICAgIH0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInRvd2VyXCIsIFwic3RydWN0dXJlXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRoZSB0b3dlciBzcGlyYWxzIHVwd2FyZCwgaXRzIGFyY2hpdGVjdHVyZSBkZWZ5aW5nIG5hdHVyYWwgbGF3cy4gV2luZG93cyBnbG93IHdpdGggYW4gdW5uYXR1cmFsIHB1cnBsZSBsaWdodCBhdCBpcnJlZ3VsYXIgaW50ZXJ2YWxzIGFsb25nIGl0cyBoZWlnaHQuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJncm91bmRcIiwgXCJlYXJ0aFwiLCBcInNvaWxcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGdyb3VuZCBhcm91bmQgdGhlIHRvd2VyIGlzIGRlYWQgYW5kIGNyYWNrZWQsIGFzIGlmIGFsbCBsaWZlIGhhcyBiZWVuIGRyYWluZWQgZnJvbSBpdC5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImRvb3JcIiwgXCJlbnRyYW5jZVwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJBIGhlYXZ5IGlyb24gZG9vciBzdGFuZHMgYXQgdGhlIGJhc2Ugb2YgdGhlIHRvd2VyLCBjb3ZlcmVkIGluIHN0cmFuZ2UgYXJjYW5lIHN5bWJvbHMuXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleXdvcmRzOiBbXCJzeW1ib2xzXCIsIFwicnVuZXNcIiwgXCJtYXJraW5nc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgYXJjYW5lIHN5bWJvbHMgcHVsc2Ugd2l0aCBhIGZhaW50IHB1cnBsZSBsaWdodC4gQXMgeW91IHN0dWR5IHRoZW0sIHRoZXkgc2VlbSBmYW1pbGlhci4uLlwiLFxuICAgICAgICAgIG9uRXhhbWluZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgICAgIGlmIChnYW1lU3RhdGUuZ2V0RmxhZygncmVtZW1iZXJlZE1pc3Npb24nKSAmJiAhZ2FtZVN0YXRlLm1lbW9yeUZyYWdtZW50cy5pbmNsdWRlcygndG93ZXJfc3ltYm9scycpKSB7XG4gICAgICAgICAgICAgIGdhbWVTdGF0ZS5tZW1vcnlGcmFnbWVudHMucHVzaCgndG93ZXJfc3ltYm9scycpO1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBzeW1ib2xzIHRyaWdnZXIgYSBtZW1vcnk6IFlvdSByZW1lbWJlciBzdHVkeWluZyB0aGVzZSBzYW1lIHJ1bmVzIGluIHRoZSByb3lhbCBsaWJyYXJ5LCBwcmVwYXJpbmcgZm9yIHlvdXIgbWlzc2lvbiB0byBzdG9wIHRoZSBkYXJrIHdpemFyZCBNYWxhY2hhciFcIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICAgICAgICBnYW1lU3RhdGUuc2V0RmxhZygncmVtZW1iZXJlZFdpemFyZE5hbWUnLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWdhbWVTdGF0ZS5nZXRGbGFnKCdyZW1lbWJlcmVkTWlzc2lvbicpKSB7XG4gICAgICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiVGhlIHN5bWJvbHMgc2VlbSBmYW1pbGlhciwgYnV0IHlvdSBjYW4ndCBxdWl0ZSBwbGFjZSB3aGVyZSB5b3UndmUgc2VlbiB0aGVtIGJlZm9yZS5cIiwgJ2Rlc2NyaXB0aW9uJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBzeW1ib2xzIG9mIE1hbGFjaGFyJ3MgZGFyayBtYWdpYy4gWW91IGtub3cgd2hhdCBsaWVzIGJleW9uZCB0aGlzIGRvb3IuXCIsICdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG9uRmlyc3RWaXNpdDogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgdGVybWluYWwucHJpbnQoXCJBcyB5b3UgYXBwcm9hY2ggdGhlIHRvd2VyLCB5b3VyIGZpbmFsIG1lbW9yaWVzIHJldHVybiBpbiBhIHJ1c2g6IFlvdSBsZWQgYSBncm91cCBvZiBrbmlnaHRzIHRvIGNvbmZyb250IHRoZSB3aXphcmQgYWZ0ZXIgaGUgdGhyZWF0ZW5lZCB0aGUgcXVlZW4uIFRoZXJlIHdhcyBhIGJhdHRsZS4uLiB5b3VyIGNvbXBhbmlvbnMgZmVsbC4uLiBhbmQgdGhlIHdpemFyZCBzdHJ1Y2sgeW91IGRvd24gd2l0aCBhIHNwZWxsIHRoYXQgc2VudCB5b3UgZmx5aW5nIHRocm91Z2ggdGhlIGFpci5cIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIllvdSByZW1lbWJlciBjcmFzaGluZyB0byB0aGUgZ3JvdW5kIGF0IHRoZSBjcm9zc3JvYWRzLCB5b3VyIGFybW9yIHNoYXR0ZXJlZCwgeW91ciBtaW5kIHdpcGVkIGNsZWFuIGJ5IHRoZSBpbXBhY3QuIEJ1dCBub3cgeW91IHJlbWVtYmVyIGV2ZXJ5dGhpbmfigJRhbmQgdGhlIHF1ZWVuIGlzIHN0aWxsIGluIGRhbmdlci5cIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICBnYW1lU3RhdGUuc2V0RmxhZygncmVtZW1iZXJlZFF1ZWVuJywgdHJ1ZSk7XG4gICAgICAgIGdhbWVTdGF0ZS5zZXRGbGFnKCdmb3VuZFRvd2VyJywgdHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBmb3Jlc3RfcGF0aF9zb3V0aDoge1xuICAgICAgbmFtZTogXCJGb3Jlc3QgUGF0aCAtIFNvdXRoXCIsXG4gICAgICBzY2VuZTogXCJmb3Jlc3RfcGF0aFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZvcmVzdCBwYXRoIGxlYWRzIHNvdXRod2FyZC4gVGhlIHRyZWVzIHRoaW4gb3V0IHNsaWdodGx5IGhlcmUsIGFuZCB5b3UgY2FuIHNlZSByb2xsaW5nIGhpbGxzIGluIHRoZSBkaXN0YW5jZS5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIG5vcnRoOiBcImNyb3Nzcm9hZHNcIixcbiAgICAgICAgc291dGg6IFwiaGlsbHNpZGVcIlxuICAgICAgfSxcbiAgICAgIGZlYXR1cmVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1widHJlZXNcIiwgXCJmb3Jlc3RcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZvcmVzdCBpcyBsZXNzIGRlbnNlIGhlcmUsIHdpdGggbW9yZSBzcGFjZSBiZXR3ZWVuIHRoZSB0cmVlcy5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcInBhdGhcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGRpcnQgcGF0aCB3aW5kcyBzb3V0aHdhcmQgdG93YXJkIHRoZSBoaWxscy5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImhpbGxzXCIsIFwiZGlzdGFuY2VcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiUm9sbGluZyBoaWxscyBjYW4gYmUgc2VlbiB0byB0aGUgc291dGgsIHRoZWlyIHNsb3BlcyBjb3ZlcmVkIGluIHRhbGwgZ3Jhc3MuXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXG4gICAgaGlsbHNpZGU6IHtcbiAgICAgIG5hbWU6IFwiSGlsbHNpZGVcIixcbiAgICAgIHNjZW5lOiBcImhpbGxzaWRlXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJZb3Ugc3RhbmQgb24gYSBncmFzc3kgaGlsbHNpZGUgb3Zlcmxvb2tpbmcgYSB2YXN0IHZhbGxleS4gSW4gdGhlIGZhciBkaXN0YW5jZSwgeW91IGNhbiBzZWUgd2hhdCBhcHBlYXJzIHRvIGJlIGEgY2FzdGxlIG9yIGxhcmdlIHN0b25lIHN0cnVjdHVyZS5cIixcbiAgICAgIGV4aXRzOiB7XG4gICAgICAgIG5vcnRoOiBcImZvcmVzdF9wYXRoX3NvdXRoXCJcbiAgICAgIH0sXG4gICAgICBmZWF0dXJlczogW1xuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImhpbGxzXCIsIFwiaGlsbHNpZGVcIiwgXCJncmFzc1wiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGUgaGlsbHMgYXJlIGNvdmVyZWQgaW4gdGFsbCBncmFzcyB0aGF0IHdhdmVzIGdlbnRseSBpbiB0aGUgYnJlZXplLlwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXl3b3JkczogW1widmFsbGV5XCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkEgd2lkZSB2YWxsZXkgc3RyZXRjaGVzIGJlZm9yZSB5b3UsIHdpdGggZmllbGRzIGFuZCBzbWFsbCBjbHVzdGVycyBvZiB0cmVlcy5cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5d29yZHM6IFtcImNhc3RsZVwiLCBcInN0cnVjdHVyZVwiLCBcImRpc3RhbmNlXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkluIHRoZSBmYXIgZGlzdGFuY2UsIHlvdSBjYW4gbWFrZSBvdXQgd2hhdCBhcHBlYXJzIHRvIGJlIGEgY2FzdGxlIG9yIGxhcmdlIHN0b25lIHN0cnVjdHVyZS4gSXQncyB0b28gZmFyIHRvIHJlYWNoIGZyb20gaGVyZSwgYnV0IHNlZWluZyBpdCB0cmlnZ2VycyBhIHNlbnNlIG9mIGZhbWlsaWFyaXR5LlwiLFxuICAgICAgICAgIG9uRXhhbWluZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgICAgIGlmICghZ2FtZVN0YXRlLmdldEZsYWcoJ3JlbWVtYmVyZWRLbmlnaHQnKSkge1xuICAgICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIkFzIHlvdSBnYXplIGF0IHRoZSBkaXN0YW50IGNhc3RsZSwgeW91IGZlZWwgYSBzdHJvbmcgc2Vuc2Ugb2YgZHV0eSBhbmQgYmVsb25naW5nLiBUaG91Z2ggeW91IGNhbid0IHJlbWVtYmVyIGRldGFpbHMsIHlvdSBrbm93IHRoYXQgcGxhY2UgaXMgaW1wb3J0YW50IHRvIHlvdS5cIiwgJ21lbW9yeS1mbGFzaCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfSxcbiAgXG4gIC8vIEl0ZW1zXG4gIGl0ZW1zOiB7XG4gICAgYnJhbmNoOiB7XG4gICAgICBuYW1lOiBcIlN0dXJkeSBCcmFuY2hcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgdGhpY2ssIHN0dXJkeSBicmFuY2ggdGhhdCBjb3VsZCBzZXJ2ZSBhcyBhIG1ha2VzaGlmdCB3ZWFwb24uXCIsXG4gICAgICBrZXl3b3JkczogW1wiYnJhbmNoXCIsIFwic3RpY2tcIiwgXCJ3ZWFwb25cIl0sXG4gICAgICB0eXBlOiBcIndlYXBvblwiLFxuICAgICAgZGFtYWdlOiA1LFxuICAgICAgdGFrZWFibGU6IHRydWVcbiAgICB9LFxuICAgIFxuICAgIHJ1c3R5X3N3b3JkOiB7XG4gICAgICBuYW1lOiBcIlJ1c3R5IFN3b3JkXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBbiBvbGQgc3dvcmQgd2l0aCBhIHJ1c3R5IGJsYWRlLiBEZXNwaXRlIGl0cyBjb25kaXRpb24sIGl0J3Mgc3RpbGwgc2hhcnAgZW5vdWdoIHRvIGJlIGVmZmVjdGl2ZS5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJzd29yZFwiLCBcInJ1c3R5XCIsIFwiYmxhZGVcIiwgXCJ3ZWFwb25cIl0sXG4gICAgICB0eXBlOiBcIndlYXBvblwiLFxuICAgICAgZGFtYWdlOiAxMCxcbiAgICAgIHRha2VhYmxlOiB0cnVlLFxuICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgcmV2ZWFsRmxhZzogJ3Zpc2l0ZWRWaWxsYWdlJ1xuICAgIH0sXG4gICAgXG4gICAgbGVhdGhlcl9hcm1vcjoge1xuICAgICAgbmFtZTogXCJMZWF0aGVyIEFybW9yXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHNpbXBsZSBzZXQgb2YgbGVhdGhlciBhcm1vci4gSXQncyB3b3JuIGJ1dCBzZXJ2aWNlYWJsZSwgb2ZmZXJpbmcgYmFzaWMgcHJvdGVjdGlvbi5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJhcm1vclwiLCBcImxlYXRoZXJcIiwgXCJwcm90ZWN0aW9uXCJdLFxuICAgICAgdHlwZTogXCJhcm1vclwiLFxuICAgICAgcHJvdGVjdGlvbjogMyxcbiAgICAgIHNwZWVkUGVuYWx0eTogMSxcbiAgICAgIHRha2VhYmxlOiB0cnVlLFxuICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgcmV2ZWFsRmxhZzogJ3Zpc2l0ZWRWaWxsYWdlJ1xuICAgIH0sXG4gICAgXG4gICAgbWFwX3RvX2Rlbjoge1xuICAgICAgbmFtZTogXCJNYXAgdG8gQ3JlYXR1cmUncyBEZW5cIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgcm91Z2ggbWFwIHNob3dpbmcgdGhlIGxvY2F0aW9uIG9mIGEgY3JlYXR1cmUncyBkZW4gbm9ydGggb2YgdGhlIHZpbGxhZ2UuXCIsXG4gICAgICBrZXl3b3JkczogW1wibWFwXCIsIFwicGFyY2htZW50XCIsIFwicGFwZXJcIl0sXG4gICAgICB0eXBlOiBcInF1ZXN0XCIsXG4gICAgICB0YWtlYWJsZTogdHJ1ZSxcbiAgICAgIHVzYWJsZTogdHJ1ZSxcbiAgICAgIG9uVXNlOiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCkgPT4ge1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIllvdSBzdHVkeSB0aGUgbWFwLiBJdCBzaG93cyBhIHBhdGggbGVhZGluZyBub3J0aCBmcm9tIHRoZSBjcm9zc3JvYWRzIHRvIGEgc21hbGwgY2F2ZSBpbiB0aGUgaGlsbHMuIFRoZSBjYXZlIGlzIG1hcmtlZCBhcyAnQ3JlYXR1cmUncyBEZW4nLlwiLCAnaXRlbS11c2UnKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBzdGVlbF9zd29yZDoge1xuICAgICAgbmFtZTogXCJTdGVlbCBTd29yZFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSB3ZWxsLWNyYWZ0ZWQgc3RlZWwgc3dvcmQgd2l0aCBhIHNoYXJwIGVkZ2UgYW5kIGdvb2QgYmFsYW5jZS5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJzd29yZFwiLCBcInN0ZWVsXCIsIFwiYmxhZGVcIiwgXCJ3ZWFwb25cIl0sXG4gICAgICB0eXBlOiBcIndlYXBvblwiLFxuICAgICAgZGFtYWdlOiAxNSxcbiAgICAgIHRha2VhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBcbiAgICBjaGFpbm1haWw6IHtcbiAgICAgIG5hbWU6IFwiQ2hhaW5tYWlsIEFybW9yXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHNoaXJ0IG9mIGludGVybG9ja2luZyBtZXRhbCByaW5ncywgcHJvdmlkaW5nIGdvb2QgcHJvdGVjdGlvbiB3aXRob3V0IHNhY3JpZmljaW5nIHRvbyBtdWNoIG1vYmlsaXR5LlwiLFxuICAgICAga2V5d29yZHM6IFtcImNoYWlubWFpbFwiLCBcImFybW9yXCIsIFwibWFpbFwiLCBcImNoYWluXCJdLFxuICAgICAgdHlwZTogXCJhcm1vclwiLFxuICAgICAgcHJvdGVjdGlvbjogNSxcbiAgICAgIHNwZWVkUGVuYWx0eTogMixcbiAgICAgIHRha2VhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBcbiAgICBoZWFsdGhfcG90aW9uOiB7XG4gICAgICBuYW1lOiBcIkhlYWx0aCBQb3Rpb25cIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgc21hbGwgdmlhbCBjb250YWluaW5nIGEgcmVkIGxpcXVpZCB0aGF0IHNtZWxscyBvZiBoZXJicyBhbmQgbWFnaWMuXCIsXG4gICAgICBrZXl3b3JkczogW1wicG90aW9uXCIsIFwiaGVhbHRoXCIsIFwidmlhbFwiLCBcImhlYWxpbmdcIl0sXG4gICAgICB0eXBlOiBcImNvbnN1bWFibGVcIixcbiAgICAgIHRha2VhYmxlOiB0cnVlLFxuICAgICAgdXNhYmxlOiB0cnVlLFxuICAgICAgdXNhYmxlSW5Db21iYXQ6IHRydWUsXG4gICAgICBvblVzZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgZ2FtZVN0YXRlLmhlYWwoMjUpO1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIllvdSBkcmluayB0aGUgcG90aW9uLiBBIHdhcm0gc2Vuc2F0aW9uIHNwcmVhZHMgdGhyb3VnaCB5b3VyIGJvZHkgYXMgeW91ciB3b3VuZHMgYmVnaW4gdG8gY2xvc2UuXCIsICdpdGVtLXVzZScpO1xuICAgICAgICB0ZXJtaW5hbC5wcmludChgWW91ciBoZWFsdGggaXMgbm93ICR7Z2FtZVN0YXRlLnBsYXllckhlYWx0aH0vJHtnYW1lU3RhdGUucGxheWVyTWF4SGVhbHRofS5gLCAnc3RhdHVzLXVwZGF0ZScpO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVtb3ZlIGZyb20gaW52ZW50b3J5IGFmdGVyIHVzZVxuICAgICAgICBnYW1lU3RhdGUucmVtb3ZlRnJvbUludmVudG9yeSgnaGVhbHRoX3BvdGlvbicpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0sXG4gICAgICBvbkNvbWJhdFVzZTogKGdhbWVTdGF0ZSwgdGVybWluYWwsIGVuZW15LCBjb21iYXRTeXN0ZW0pID0+IHtcbiAgICAgICAgZ2FtZVN0YXRlLmhlYWwoMjUpO1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIllvdSBxdWlja2x5IGRyaW5rIHRoZSBwb3Rpb24uIEEgd2FybSBzZW5zYXRpb24gc3ByZWFkcyB0aHJvdWdoIHlvdXIgYm9keSBhcyB5b3VyIHdvdW5kcyBiZWdpbiB0byBjbG9zZS5cIiwgJ2l0ZW0tdXNlJyk7XG4gICAgICAgIHRlcm1pbmFsLnByaW50KGBZb3VyIGhlYWx0aCBpcyBub3cgJHtnYW1lU3RhdGUucGxheWVySGVhbHRofS8ke2dhbWVTdGF0ZS5wbGF5ZXJNYXhIZWFsdGh9LmAsICdzdGF0dXMtdXBkYXRlJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBSZW1vdmUgZnJvbSBpbnZlbnRvcnkgYWZ0ZXIgdXNlXG4gICAgICAgIGdhbWVTdGF0ZS5yZW1vdmVGcm9tSW52ZW50b3J5KCdoZWFsdGhfcG90aW9uJyk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAga25pZ2h0X3NpZ25ldDoge1xuICAgICAgbmFtZTogXCJLbmlnaHQncyBTaWduZXQgUmluZ1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSBoZWF2eSBnb2xkIHJpbmcgYmVhcmluZyB0aGUgcm95YWwgY29hdCBvZiBhcm1zLiBJdCBmZWVscyBmYW1pbGlhciBpbiB5b3VyIGhhbmQuXCIsXG4gICAgICBrZXl3b3JkczogW1wicmluZ1wiLCBcInNpZ25ldFwiLCBcImdvbGRcIiwgXCJyb3lhbFwiXSxcbiAgICAgIHR5cGU6IFwicXVlc3RcIixcbiAgICAgIHRha2VhYmxlOiB0cnVlLFxuICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgcmV2ZWFsRmxhZzogJ2RlZmVhdGVkQ2F2ZUNyZWF0dXJlJyxcbiAgICAgIG9uVGFrZTogKGdhbWVTdGF0ZSwgdGVybWluYWwpID0+IHtcbiAgICAgICAgaWYgKCFnYW1lU3RhdGUubWVtb3J5RnJhZ21lbnRzLmluY2x1ZGVzKCdrbmlnaHRfc2lnbmV0JykpIHtcbiAgICAgICAgICBnYW1lU3RhdGUubWVtb3J5RnJhZ21lbnRzLnB1c2goJ2tuaWdodF9zaWduZXQnKTtcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIkFzIHlvdSBzbGlwIHRoZSByaW5nIG9udG8geW91ciBmaW5nZXIsIG1lbW9yaWVzIGZsb29kIGJhY2s6IFlvdSByZW1lbWJlciB5b3VyIG9hdGggb2Ygc2VydmljZSwgeW91ciB0cmFpbmluZyBpbiB0aGUgcm95YWwgZ3VhcmQsIGFuZCB5b3VyIHRydWUgbmFtZeKAlFNpciBBbGRyaWMgb2YgV2VzdG1hcmNoIVwiLCAnbWVtb3J5LWZsYXNoJyk7XG4gICAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ3JlbWVtYmVyZWROYW1lJywgdHJ1ZSk7XG4gICAgICAgICAgZ2FtZVN0YXRlLnBsYXllck5hbWUgPSAnU2lyIEFsZHJpYyBvZiBXZXN0bWFyY2gnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBtZW1vcnlfY3J5c3RhbDoge1xuICAgICAgbmFtZTogXCJNZW1vcnkgQ3J5c3RhbFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSBzbWFsbCwgZ2xvd2luZyBjcnlzdGFsIHRoYXQgcHVsc2VzIHdpdGggaW5uZXIgbGlnaHQuIEl0IHNlZW1zIHRvIHJlc29uYXRlIHdpdGggeW91ciB0aG91Z2h0cy5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJjcnlzdGFsXCIsIFwibWVtb3J5XCIsIFwiZ2VtXCIsIFwic3RvbmVcIl0sXG4gICAgICB0eXBlOiBcInF1ZXN0XCIsXG4gICAgICB0YWtlYWJsZTogdHJ1ZSxcbiAgICAgIHVzYWJsZTogdHJ1ZSxcbiAgICAgIG9uVXNlOiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCkgPT4ge1xuICAgICAgICBpZiAoZ2FtZVN0YXRlLm1lbW9yeUZyYWdtZW50cy5sZW5ndGggPj0gNSkge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiVGhlIGNyeXN0YWwgZ2xvd3MgYnJpZ2h0bHkgYXMgaXQgYWJzb3JicyB5b3VyIHJlY292ZXJlZCBtZW1vcmllcy4gWW91IGZlZWwgeW91ciBtaW5kIGJlY29taW5nIGNsZWFyZXIgYW5kIG1vcmUgZm9jdXNlZC4gWW91ciBtYXhpbXVtIGhlYWx0aCBpbmNyZWFzZXMhXCIsICdtZW1vcnktZmxhc2gnKTtcbiAgICAgICAgICBnYW1lU3RhdGUubWF4SGVhbHRoICs9IDE1O1xuICAgICAgICAgIGdhbWVTdGF0ZS5oZWFsdGggKz0gMTU7XG4gICAgICAgICAgcmV0dXJuIHRydWU7IC8vIENyeXN0YWwgaXMgY29uc3VtZWRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBjcnlzdGFsIGdsb3dzIGZhaW50bHksIGJ1dCB5b3UgbmVlZCBtb3JlIG1lbW9yaWVzIHRvIHVubG9jayBpdHMgcG93ZXIuXCIsICdkZXNjcmlwdGlvbicpO1xuICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gQ3J5c3RhbCBpcyBub3QgY29uc3VtZWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgd29sZl9wZWx0OiB7XG4gICAgICBuYW1lOiBcIldvbGYgUGVsdFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSByb3VnaCBwZWx0IGZyb20gYSB0d2lzdGVkIHdvbGYuIFRoZSBmdXIgaXMgcGF0Y2h5IGFuZCBoYXMgYW4gdW5uYXR1cmFsIHRleHR1cmUsIGJ1dCBpdCBtaWdodCBiZSB1c2VmdWwgZm9yIGNyYWZ0aW5nLlwiLFxuICAgICAga2V5d29yZHM6IFtcInBlbHRcIiwgXCJmdXJcIiwgXCJoaWRlXCIsIFwid29sZlwiXSxcbiAgICAgIHR5cGU6IFwibWF0ZXJpYWxcIixcbiAgICAgIHRha2VhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBcbiAgICB0d2lzdGVkX2NsYXc6IHtcbiAgICAgIG5hbWU6IFwiVHdpc3RlZCBDbGF3XCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHNoYXJwIGNsYXcgZnJvbSBhIGNvcnJ1cHRlZCBjcmVhdHVyZS4gSXQncyB1bm5hdHVyYWxseSBoYXJkIGFuZCBzZWVtcyB0byBzaGltbWVyIHdpdGggZGFyayBlbmVyZ3kuXCIsXG4gICAgICBrZXl3b3JkczogW1wiY2xhd1wiLCBcInRhbG9uXCIsIFwidHdpc3RlZFwiXSxcbiAgICAgIHR5cGU6IFwibWF0ZXJpYWxcIixcbiAgICAgIHRha2VhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBcbiAgICBiZWFyX2hpZGU6IHtcbiAgICAgIG5hbWU6IFwiQmVhciBIaWRlXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHRoaWNrIGhpZGUgZnJvbSBhIG1hc3NpdmUgYmVhci4gRGVzcGl0ZSB0aGUgY3JlYXR1cmUncyBjb3JydXB0aW9uLCB0aGUgaGlkZSBpcyBzdGlsbCB2YWx1YWJsZSBhbmQgY291bGQgYmUgdXNlZCBmb3IgYXJtb3IuXCIsXG4gICAgICBrZXl3b3JkczogW1wiaGlkZVwiLCBcInNraW5cIiwgXCJiZWFyXCJdLFxuICAgICAgdHlwZTogXCJtYXRlcmlhbFwiLFxuICAgICAgdGFrZWFibGU6IHRydWVcbiAgICB9LFxuICAgIFxuICAgIGJlYXJfY2xhd3M6IHtcbiAgICAgIG5hbWU6IFwiQmVhciBDbGF3c1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiTWFzc2l2ZSBjbGF3cyBmcm9tIGEgdHdpc3RlZCBiZWFyLiBUaGV5J3JlIHJhem9yLXNoYXJwIGFuZCBjb3VsZCBwb3RlbnRpYWxseSBiZSBjcmFmdGVkIGludG8gd2VhcG9ucy5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJjbGF3c1wiLCBcInRhbG9uc1wiLCBcImJlYXJcIl0sXG4gICAgICB0eXBlOiBcIm1hdGVyaWFsXCIsXG4gICAgICB0YWtlYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSxcbiAgXG4gIC8vIE5QQ3NcbiAgbnBjczoge1xuICAgIGNoaWxkMToge1xuICAgICAgbmFtZTogXCJWaWxsYWdlIEJveVwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSB5b3VuZyBib3ksIG5vIG1vcmUgdGhhbiB0ZW4geWVhcnMgb2xkLCB3aXRoIHRvdXNsZWQgaGFpciBhbmQgd2lkZSwgZnJpZ2h0ZW5lZCBleWVzLlwiLFxuICAgICAgcHJlc2VuY2VEZXNjcmlwdGlvbjogXCJBIHlvdW5nIGJveSBjb3dlcnMgYWdhaW5zdCBhIHRyZWUsIHRyeWluZyB0byBwcm90ZWN0IGEgc21hbGxlciBnaXJsLlwiLFxuICAgICAga2V5d29yZHM6IFtcImJveVwiLCBcImNoaWxkXCIsIFwia2lkXCIsIFwiY2hpbGRyZW5cIl0sXG4gICAgICB0YWxrYWJsZTogdHJ1ZSxcbiAgICAgIGF0dGFja2FibGU6IGZhbHNlLFxuICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgIG9uVGFsazogKGdhbWVTdGF0ZSwgdGVybWluYWwsIHN0b3J5RW5naW5lKSA9PiB7XG4gICAgICAgIGlmICghZ2FtZVN0YXRlLmdldEZsYWcoJ3NhdmVkQ2hpbGRyZW4nKSkge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ1BsZWFzZSBoZWxwIHVzIScgdGhlIGJveSBjcmllcy4gJ1RoYXQgbW9uc3RlciBpcyBnb2luZyB0byBlYXQgdXMhJ1wiLCAnbnBjLWRpYWxvZycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ1RoYW5rIHlvdSBmb3Igc2F2aW5nIHVzLCcgdGhlIGJveSBzYXlzLCBzdGlsbCB0cmVtYmxpbmcuICdUaGF0IHRoaW5nIGNhbWUgZnJvbSB0aGUgZm9yZXN0LiBUaGVyZSBhcmUgbW9yZSBvZiB0aGVtIGFyb3VuZCB0aGUgdmlsbGFnZSBsYXRlbHkuJ1wiLCAnbnBjLWRpYWxvZycpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBjaGlsZDI6IHtcbiAgICAgIG5hbWU6IFwiVmlsbGFnZSBHaXJsXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJBIHNtYWxsIGdpcmwgd2l0aCBicmFpZGVkIGhhaXIsIHRlYXJzIHN0cmVhbWluZyBkb3duIGhlciBmYWNlLlwiLFxuICAgICAgcHJlc2VuY2VEZXNjcmlwdGlvbjogXCJBIGxpdHRsZSBnaXJsIGh1ZGRsZXMgY2xvc2UgdG8gdGhlIGJveSwgc29iYmluZyBxdWlldGx5LlwiLFxuICAgICAga2V5d29yZHM6IFtcImdpcmxcIiwgXCJjaGlsZFwiLCBcImtpZFwiLCBcImNoaWxkcmVuXCJdLFxuICAgICAgdGFsa2FibGU6IHRydWUsXG4gICAgICBhdHRhY2thYmxlOiBmYWxzZSxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBvblRhbGs6IChnYW1lU3RhdGUsIHRlcm1pbmFsLCBzdG9yeUVuZ2luZSkgPT4ge1xuICAgICAgICBpZiAoIWdhbWVTdGF0ZS5nZXRGbGFnKCdzYXZlZENoaWxkcmVuJykpIHtcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBnaXJsIGlzIHRvbyBmcmlnaHRlbmVkIHRvIHNwZWFrLCBvbmx5IHNvYmJpbmcgYW5kIHBvaW50aW5nIGF0IHRoZSBjcmVhdHVyZS5cIiwgJ25wYy1kaWFsb2cnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIidBcmUgeW91IGEga25pZ2h0PycgdGhlIGdpcmwgYXNrcyBiZXR3ZWVuIHNuaWZmbGVzLiAnTXkgcGFwYSBzYXlzIGtuaWdodHMgcHJvdGVjdCBwZW9wbGUgZnJvbSBtb25zdGVycy4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCFnYW1lU3RhdGUuZ2V0RmxhZygncmVtZW1iZXJlZEtuaWdodCcpKSB7XG4gICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlNvbWV0aGluZyBhYm91dCBoZXIgd29yZHMgcmVzb25hdGVzIHdpdGggeW91LiBLbmlnaHQuLi4gVGhlIHRpdGxlIGZlZWxzIHJpZ2h0IHNvbWVob3cuXCIsICdtZW1vcnktZmxhc2gnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIHNtYWxsX2NyZWF0dXJlOiB7XG4gICAgICBuYW1lOiBcIlR3aXN0ZWQgV29sZlwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiV2hhdCBtaWdodCBvbmNlIGhhdmUgYmVlbiBhIHdvbGYsIG5vdyB3YXJwZWQgYnkgZGFyayBtYWdpYy4gSXRzIGZ1ciBpcyBwYXRjaHksIHJldmVhbGluZyBzY2FsZWQgc2tpbiB1bmRlcm5lYXRoLCBhbmQgaXRzIGV5ZXMgZ2xvdyB3aXRoIGFuIHVubmF0dXJhbCByZWQgbGlnaHQuXCIsXG4gICAgICBwcmVzZW5jZURlc2NyaXB0aW9uOiBcIkEgdHdpc3RlZCwgd29sZi1saWtlIGNyZWF0dXJlIHNuYXJscyBhbmQgYWR2YW5jZXMgdG93YXJkIHRoZSBjaGlsZHJlbiwgaXRzIG1vdmVtZW50cyBqZXJreSBhbmQgdW5uYXR1cmFsLlwiLFxuICAgICAgY29tYmF0RGVzY3JpcHRpb246IFwiVGhlIGNyZWF0dXJlJ3MgamF3cyBkcmlwIHdpdGggc2FsaXZhIGFzIGl0IHR1cm5zIGl0cyBhdHRlbnRpb24gdG8geW91LCBncm93bGluZyBkZWVwbHkuXCIsXG4gICAgICBrZXl3b3JkczogW1wiY3JlYXR1cmVcIiwgXCJtb25zdGVyXCIsIFwid29sZlwiLCBcImJlYXN0XCJdLFxuICAgICAgdGFsa2FibGU6IGZhbHNlLFxuICAgICAgYXR0YWNrYWJsZTogdHJ1ZSxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBoZWFsdGg6IDIwLFxuICAgICAgbWF4SGVhbHRoOiAyMCxcbiAgICAgIGRhbWFnZTogNCxcbiAgICAgIHNwZWVkOiA2LFxuICAgICAgb25EZWZlYXQ6IChnYW1lU3RhdGUsIHRlcm1pbmFsLCBzdG9yeUVuZ2luZSkgPT4ge1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSB0d2lzdGVkIHdvbGYgY29sbGFwc2VzLCBpdHMgdW5uYXR1cmFsIHJlZCBnbG93IGZhZGluZyBmcm9tIGl0cyBleWVzLiBUaGUgY2hpbGRyZW4gYXJlIHNhZmUhXCIsICdjb21iYXQtYWZ0ZXJtYXRoJyk7XG4gICAgICAgIGdhbWVTdGF0ZS5zZXRGbGFnKCdzYXZlZENoaWxkcmVuJywgdHJ1ZSk7XG4gICAgICAgIFxuICAgICAgICAvLyBSZW1vdmUgdGhlIGNyZWF0dXJlIGFuZCB1cGRhdGUgdGhlIGxvY2F0aW9uIGRlc2NyaXB0aW9uXG4gICAgICAgIGNvbnN0IGxvY2F0aW9uID0gc3RvcnlFbmdpbmUubG9jYXRpb25zWyd2aWxsYWdlX291dHNraXJ0cyddO1xuICAgICAgICBsb2NhdGlvbi5kZXNjcmlwdGlvbiA9IFwiVGhlIGZvcmVzdCB0aGlucyBhcyB0aGUgcGF0aCBhcHByb2FjaGVzIHdoYXQgYXBwZWFycyB0byBiZSBhIHNtYWxsIHZpbGxhZ2UuIFRoZSBjaGlsZHJlbiB5b3Ugc2F2ZWQgaGF2ZSBydW4gYmFjayB0byBzYWZldHkuXCI7ICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgY3JlYXR1cmUgZnJvbSB0aGUgbG9jYXRpb24ncyBOUENzXG4gICAgICAgIGNvbnN0IGNyZWF0dXJlSW5kZXggPSBsb2NhdGlvbi5ucGNzLmluZGV4T2YoJ3NtYWxsX2NyZWF0dXJlJyk7XG4gICAgICAgIGlmIChjcmVhdHVyZUluZGV4ICE9PSAtMSkge1xuICAgICAgICAgIGxvY2F0aW9uLm5wY3Muc3BsaWNlKGNyZWF0dXJlSW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBSZW1vdmUgdGhlIGNoaWxkcmVuIGZyb20gdGhlIGxvY2F0aW9uJ3MgTlBDcyBzaW5jZSB0aGV5IHJhbiB0byBzYWZldHlcbiAgICAgICAgY29uc3QgY2hpbGQxSW5kZXggPSBsb2NhdGlvbi5ucGNzLmluZGV4T2YoJ2NoaWxkMScpO1xuICAgICAgICBpZiAoY2hpbGQxSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgbG9jYXRpb24ubnBjcy5zcGxpY2UoY2hpbGQxSW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCBjaGlsZDJJbmRleCA9IGxvY2F0aW9uLm5wY3MuaW5kZXhPZignY2hpbGQyJyk7XG4gICAgICAgIGlmIChjaGlsZDJJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICBsb2NhdGlvbi5ucGNzLnNwbGljZShjaGlsZDJJbmRleCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ1RoYW5rIHlvdSEnIHRoZSBib3kgY3JpZXMsIGhlbHBpbmcgdGhlIGdpcmwgdG8gaGVyIGZlZXQuICdXZSBuZWVkIHRvIGdldCBiYWNrIHRvIHRoZSB2aWxsYWdlLiBZb3Ugc2hvdWxkIGNvbWUgdG9v4oCUb3VyIGVsZGVyIHdpbGwgd2FudCB0byB0aGFuayB5b3UuJ1wiLCAnbnBjLWRpYWxvZycpO1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBjaGlsZHJlbiBydW4gdG93YXJkIHRoZSB2aWxsYWdlIHRvIHRoZSB3ZXN0LlwiLCAnc3RvcnktZXZlbnQnKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIHZpbGxhZ2VfZWxkZXI6IHtcbiAgICAgIG5hbWU6IFwiVmlsbGFnZSBFbGRlclwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQW4gZWxkZXJseSBtYW4gd2l0aCBhIGxvbmcgZ3JheSBiZWFyZCBhbmQga2luZCBleWVzIHRoYXQgaGF2ZSBzZWVuIG11Y2ggaGFyZHNoaXAuIEhlIHdhbGtzIHdpdGggdGhlIGFpZCBvZiBhIHdvb2RlbiBzdGFmZi5cIixcbiAgICAgIHByZXNlbmNlRGVzY3JpcHRpb246IFwiQW4gZWxkZXJseSBtYW4gd2l0aCBhIGxvbmcgZ3JheSBiZWFyZCBzdGFuZHMgbmVhciB0aGUgd2VsbCwgd2F0Y2hpbmcgeW91IHdpdGggaW50ZXJlc3QuXCIsXG4gICAgICBrZXl3b3JkczogW1wiZWxkZXJcIiwgXCJvbGQgbWFuXCIsIFwibWFuXCIsIFwidmlsbGFnZXJcIl0sXG4gICAgICB0YWxrYWJsZTogdHJ1ZSxcbiAgICAgIGF0dGFja2FibGU6IGZhbHNlLFxuICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgIG9uVGFsazogKGdhbWVTdGF0ZSwgdGVybWluYWwsIHN0b3J5RW5naW5lKSA9PiB7XG4gICAgICAgIGlmIChnYW1lU3RhdGUuZ2V0RmxhZygnc2F2ZWRDaGlsZHJlbicpKSB7XG4gICAgICAgICAgdGVybWluYWwucHJpbnQoXCInWW91IGhhdmUgb3VyIHRoYW5rcyBmb3Igc2F2aW5nIHRob3NlIGNoaWxkcmVuLCcgdGhlIGVsZGVyIHNheXMuICdUaGVzZSBhcmUgZGFyayB0aW1lcy4gU3RyYW5nZSBjcmVhdHVyZXMgaGF2ZSBiZWVuIGFwcGVhcmluZyBpbiB0aGUgZm9yZXN0LCB0d2lzdGVkIGJ5IHNvbWUgZXZpbCBtYWdpYy4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgdGVybWluYWwucHJpbnQoXCInT25lIGxhcmdlciBiZWFzdCBoYXMgbWFkZSBpdHMgZGVuIG5vcnRoIG9mIGhlcmUuIEl0J3MgYmVlbiB0YWtpbmcgb3VyIGxpdmVzdG9jayBhbmQgdGhyZWF0ZW5pbmcgdHJhdmVsZXJzLiBJZiB5b3UgY291bGQgZGVhbCB3aXRoIGl0LCB3ZSB3b3VsZCBiZSBtb3N0IGdyYXRlZnVsLiBJJ3ZlIG1hcmtlZCBpdHMgbG9jYXRpb24gb24gYSBtYXAgaW4gbXkgaG91c2UuJ1wiLCAnbnBjLWRpYWxvZycpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChnYW1lU3RhdGUuZ2V0RmxhZygnZGVmZWF0ZWRWaWxsYWdlTW9uc3RlcicpKSB7XG4gICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIidZb3UndmUgZGVmZWF0ZWQgdGhlIGNyZWF0dXJlPyBSZW1hcmthYmxlISBZb3UgaGF2ZSB0aGUgYmVhcmluZyBvZiBhIHdhcnJpb3LigJRwZXJoYXBzIGV2ZW4gYSBrbmlnaHQuIFRoZXJlIGFyZSBydW1vcnMgdGhhdCB0aGUgcm95YWwga25pZ2h0cyB3ZXJlIGRlZmVhdGVkIGJ5IGFuIGV2aWwgd2l6YXJkIHdobyBoYXMgY2FwdHVyZWQgdGhlIHF1ZWVuLiBUaGVzZSB0d2lzdGVkIGNyZWF0dXJlcyBiZWdhbiBhcHBlYXJpbmcgYWZ0ZXIgdGhhdC4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ1dlbGNvbWUsIHN0cmFuZ2VyLCcgdGhlIGVsZGVyIHNheXMuICdZb3Ugc2VlbSBsb3N0LiBPdXIgdmlsbGFnZSBoYXMgc2VlbiBiZXR0ZXIgZGF5c+KAlHdlJ3JlIHBsYWd1ZWQgYnkgc3RyYW5nZSBjcmVhdHVyZXMgZnJvbSB0aGUgZm9yZXN0LidcIiwgJ25wYy1kaWFsb2cnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgYmxhY2tzbWl0aDoge1xuICAgICAgbmFtZTogXCJWaWxsYWdlIEJsYWNrc21pdGhcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgbXVzY3VsYXIgd29tYW4gd2l0aCBzb290LXN0YWluZWQgYXJtcyBhbmQgYSBsZWF0aGVyIGFwcm9uLiBIZXIgaGFuZHMgYXJlIGNhbGxvdXNlZCBmcm9tIHllYXJzIG9mIG1ldGFsd29yay5cIixcbiAgICAgIHByZXNlbmNlRGVzY3JpcHRpb246IFwiQSBzdHJvbmctbG9va2luZyB3b21hbiB3b3JrcyBhdCB0aGUgZm9yZ2UsIGhhbW1lcmluZyBhIHBpZWNlIG9mIG1ldGFsLlwiLFxuICAgICAga2V5d29yZHM6IFtcImJsYWNrc21pdGhcIiwgXCJzbWl0aFwiLCBcIndvbWFuXCJdLFxuICAgICAgdGFsa2FibGU6IHRydWUsXG4gICAgICBhdHRhY2thYmxlOiBmYWxzZSxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBvblRhbGs6IChnYW1lU3RhdGUsIHRlcm1pbmFsLCBzdG9yeUVuZ2luZSkgPT4ge1xuICAgICAgICBpZiAoZ2FtZVN0YXRlLmdldEZsYWcoJ3NhdmVkQ2hpbGRyZW4nKSkge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ0hlYXJkIHlvdSBzYXZlZCB0aG9zZSBraWRzLCcgdGhlIGJsYWNrc21pdGggc2F5cywgcGF1c2luZyBoZXIgd29yay4gJ1dlIG5lZWQgbW9yZSBwZW9wbGUgbGlrZSB5b3UgYXJvdW5kIGhlcmUuIFRha2UgdGhhdCBvbGQgc3dvcmQgaWYgeW91IHdhbnTigJRpdCdzIG5vdCBtdWNoLCBidXQgaXQncyBiZXR0ZXIgdGhhbiBub3RoaW5nLidcIiwgJ25wYy1kaWFsb2cnKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBNYWtlIHRoZSBydXN0eSBzd29yZCB2aXNpYmxlXG4gICAgICAgICAgc3RvcnlFbmdpbmUuaXRlbXNbJ3J1c3R5X3N3b3JkJ10uaGlkZGVuID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGVybWluYWwucHJpbnQoXCInRG9uJ3QgaGF2ZSB0aW1lIHRvIGNoYXQsJyB0aGUgYmxhY2tzbWl0aCBzYXlzIHdpdGhvdXQgbG9va2luZyB1cCBmcm9tIGhlciB3b3JrLiAnVW5sZXNzIHlvdSdyZSBidXlpbmcgc29tZXRoaW5nLidcIiwgJ25wYy1kaWFsb2cnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgaW5ua2VlcGVyOiB7XG4gICAgICBuYW1lOiBcIklubmtlZXBlclwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSBwb3J0bHkgbWFuIHdpdGggYSBmcmllbmRseSBmYWNlIGFuZCBhIHN0YWluZWQgYXByb24uIEhlIGhhcyB0aGUgbG9vayBvZiBzb21lb25lIHdobyBlbmpveXMgc2FtcGxpbmcgaGlzIG93biBjb29raW5nLlwiLFxuICAgICAgcHJlc2VuY2VEZXNjcmlwdGlvbjogXCJBIGhlYXZ5c2V0IG1hbiBzdGFuZHMgYmVoaW5kIHRoZSBiYXIsIHdpcGluZyBhIG11ZyB3aXRoIGEgY2xvdGguXCIsXG4gICAgICBrZXl3b3JkczogW1wiaW5ua2VlcGVyXCIsIFwiYmFya2VlcGVyXCIsIFwiYmFydGVuZGVyXCIsIFwibWFuXCJdLFxuICAgICAgdGFsa2FibGU6IHRydWUsXG4gICAgICBhdHRhY2thYmxlOiBmYWxzZSxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBvblRhbGs6IChnYW1lU3RhdGUsIHRlcm1pbmFsLCBzdG9yeUVuZ2luZSkgPT4ge1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIidXZWxjb21lIHRvIHRoZSBUd2lzdGVkIE9hayBJbm4sJyB0aGUgaW5ua2VlcGVyIHNheXMgd2l0aCBhIHNtaWxlLiAnTm90IG1hbnkgdHJhdmVsZXJzIHRoZXNlIGRheXMsIHdoYXQgd2l0aCB0aGUgc3RyYW5nZSBjcmVhdHVyZXMgYWJvdXQuIENhbiBJIGdldCB5b3Ugc29tZXRoaW5nIHRvIGRyaW5rPydcIiwgJ25wYy1kaWFsb2cnKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChnYW1lU3RhdGUuZ2V0RmxhZygnZGVmZWF0ZWRWaWxsYWdlTW9uc3RlcicpKSB7XG4gICAgICAgICAgdGVybWluYWwucHJpbnQoXCInWW91J3JlIHRoZSBvbmUgd2hvIGtpbGxlZCB0aGF0IGJlYXN0IGluIHRoZSBjYXZlPyBEcmlua3MgYXJlIG9uIHRoZSBob3VzZSEgV2UgaGF2ZW4ndCBoYWQgYSBwcm9wZXIgaGVybyBhcm91bmQgaGVyZSBzaW5jZS4uLiB3ZWxsLCBzaW5jZSBiZWZvcmUgdGhlIHdpemFyZCB0b29rIHRoZSBxdWVlbi4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCFnYW1lU3RhdGUuaGFzSXRlbSgnaGVhbHRoX3BvdGlvbicpKSB7XG4gICAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIidIZXJlLCB0YWtlIHRoaXMgaGVhbGluZyBwb3Rpb24uIEEgdHJhdmVsaW5nIG1lcmNoYW50IGxlZnQgaXQgYXMgcGF5bWVudC4gTWlnaHQgY29tZSBpbiBoYW5keSBmb3Igc29tZW9uZSBsaWtlIHlvdS4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCBoZWFsdGggcG90aW9uIHRvIGludmVudG9yeVxuICAgICAgICAgICAgZ2FtZVN0YXRlLmFkZFRvSW52ZW50b3J5KHtcbiAgICAgICAgICAgICAgaWQ6ICdoZWFsdGhfcG90aW9uJyxcbiAgICAgICAgICAgICAgLi4uc3RvcnlFbmdpbmUuaXRlbXNbJ2hlYWx0aF9wb3Rpb24nXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiWW91IHJlY2VpdmVkOiBIZWFsdGggUG90aW9uXCIsICdpdGVtLXJlY2VpdmVkJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBtZXJjaGFudDoge1xuICAgICAgbmFtZTogXCJUcmF2ZWxpbmcgTWVyY2hhbnRcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkEgdGhpbiB3b21hbiB3aXRoIHNoYXJwIGV5ZXMgYW5kIGNvbG9yZnVsIGNsb3RoZXMuIFNoZSBoYXMgYSBzbWFsbCBjYXJ0IG9mIGdvb2RzIGJlc2lkZSBoZXIuXCIsXG4gICAgICBwcmVzZW5jZURlc2NyaXB0aW9uOiBcIkEgbWVyY2hhbnQgd2l0aCBhIHNtYWxsIGNhcnQgd2F0Y2hlcyB5b3UgY2FyZWZ1bGx5LCBldmFsdWF0aW5nIHlvdSBhcyBhIHBvdGVudGlhbCBjdXN0b21lci5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJtZXJjaGFudFwiLCBcInRyYWRlclwiLCBcInNlbGxlclwiLCBcIndvbWFuXCJdLFxuICAgICAgdGFsa2FibGU6IHRydWUsXG4gICAgICBhdHRhY2thYmxlOiBmYWxzZSxcbiAgICAgIGhpZGRlbjogZmFsc2UsXG4gICAgICBvblRhbGs6IChnYW1lU3RhdGUsIHRlcm1pbmFsLCBzdG9yeUVuZ2luZSkgPT4ge1xuICAgICAgICB0ZXJtaW5hbC5wcmludChcIidJbnRlcmVzdGVkIGluIHRyYWRpbmc/JyB0aGUgbWVyY2hhbnQgYXNrcy4gJ0kgZG9uJ3QgaGF2ZSBtdWNoIHRoZXNlIGRheXPigJR0aGUgcm9hZHMgYXJlIHRvbyBkYW5nZXJvdXMgd2l0aCBhbGwgdGhlc2UgY3JlYXR1cmVzIGFib3V0LiBJIGhlYXJkIGEgd2l6YXJkIGlzIHJlc3BvbnNpYmxlLCB0d2lzdGluZyBhbmltYWxzIHdpdGggZGFyayBtYWdpYy4nXCIsICducGMtZGlhbG9nJyk7XG4gICAgICAgIFxuICAgICAgICBpZiAoZ2FtZVN0YXRlLmdldEZsYWcoJ3JlbWVtYmVyZWRXaXphcmQnKSkge1xuICAgICAgICAgIHRlcm1pbmFsLnByaW50KFwiJ0Egd2l6YXJkLCB5b3Ugc2F5PyBZZXMsIEkgcmVtZW1iZXIgbm93LiBIZSBhdHRhY2tlZCB0aGUgcm95YWwgY2FzdGxlIGFuZCB0b29rIHRoZSBxdWVlbi4gSSBuZWVkIHRvIGZpbmQgaGlzIHRvd2VyLidcIiwgJ3BsYXllci1kaWFsb2cnKTtcbiAgICAgICAgICBcbiAgICAgICAgICB0ZXJtaW5hbC5wcmludChcIlRoZSBtZXJjaGFudCdzIGV5ZXMgd2lkZW4uICdUaGUgd2l6YXJkJ3MgdG93ZXI/IFRoZXkgc2F5IGl0J3MgZGVlcCBpbiB0aGUgZWFzdGVybiBmb3Jlc3QsIGJ1dCBubyBvbmUgd2hvJ3MgZ29uZSBsb29raW5nIGZvciBpdCBoYXMgcmV0dXJuZWQuIFlvdSdkIGhhdmUgdG8gYmUgbWFk4oCUb3IgYSBoZXJv4oCUdG8gZ28gdGhlcmUuJ1wiLCAnbnBjLWRpYWxvZycpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBjYXZlX2NyZWF0dXJlOiB7XG4gICAgICBuYW1lOiBcIlR3aXN0ZWQgQmVhclwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQSBtYXNzaXZlIGJlYXIgd2FycGVkIGJ5IGRhcmsgbWFnaWMuIEl0cyBib2R5IGlzIGFzeW1tZXRyaWNhbCwgd2l0aCBleHRyYSBsaW1icyBncm93aW5nIGZyb20gaXRzIHRvcnNvLCBhbmQgaXRzIGV5ZXMgZ2xvdyB3aXRoIG1hbGV2b2xlbnQgcmVkIGxpZ2h0LlwiLFxuICAgICAgcHJlc2VuY2VEZXNjcmlwdGlvbjogXCJBIGh1Z2UsIHR3aXN0ZWQgYmVhci1saWtlIGNyZWF0dXJlIGdyb3dscyBhdCB0aGUgYmFjayBvZiB0aGUgY2F2ZSwgaXRzIHJlZCBleWVzIGZpeGVkIG9uIHlvdS5cIixcbiAgICAgIGNvbWJhdERlc2NyaXB0aW9uOiBcIlRoZSBtb25zdHJvdXMgYmVhciByaXNlcyB0byBpdHMgZnVsbCBoZWlnaHQsIGVhc2lseSBlaWdodCBmZWV0IHRhbGwuIE11bHRpcGxlIGxpbWJzIGVuZCBpbiByYXpvci1zaGFycCBjbGF3cywgYW5kIGl0cyBqYXdzIGFyZSBmaWxsZWQgd2l0aCB0b28gbWFueSB0ZWV0aC5cIixcbiAgICAgIGtleXdvcmRzOiBbXCJjcmVhdHVyZVwiLCBcIm1vbnN0ZXJcIiwgXCJiZWFyXCIsIFwiYmVhc3RcIl0sXG4gICAgICB0YWxrYWJsZTogZmFsc2UsXG4gICAgICBhdHRhY2thYmxlOiB0cnVlLFxuICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgIGhlYWx0aDogNTAsXG4gICAgICBtYXhIZWFsdGg6IDUwLFxuICAgICAgZGFtYWdlOiA4LFxuICAgICAgc3BlZWQ6IDQsXG4gICAgICByZXdhcmRzOiB7XG4gICAgICAgIGhlYWx0aEluY3JlYXNlOiAxMCxcbiAgICAgICAgaXRlbXM6IFsnY2hhaW5tYWlsJywgJ3N0ZWVsX3N3b3JkJywgJ2tuaWdodF9zaWduZXQnXVxuICAgICAgfSxcbiAgICAgIG9uRGVmZWF0OiAoZ2FtZVN0YXRlLCB0ZXJtaW5hbCwgc3RvcnlFbmdpbmUpID0+IHtcbiAgICAgICAgdGVybWluYWwucHJpbnQoXCJUaGUgdHdpc3RlZCBiZWFyIGNvbGxhcHNlcyB3aXRoIGEgZmluYWwgcm9hci4gQXMgaXQgZGllcywgeW91IG5vdGljZSBpdHMgZm9ybSBzZWVtcyB0byBwYXJ0aWFsbHkgcmV2ZXJ0IHRvIHRoYXQgb2YgYSBub3JtYWwgYmVhciwgdGhvdWdoIHRoZSBjb3JydXB0aW9uIGlzIHRvbyBkZWVwIHRvIGZ1bGx5IGRpc2FwcGVhci5cIiwgJ2NvbWJhdC1hZnRlcm1hdGgnKTtcbiAgICAgICAgZ2FtZVN0YXRlLnNldEZsYWcoJ2RlZmVhdGVkVmlsbGFnZU1vbnN0ZXInLCB0cnVlKTtcbiAgICAgICAgXG4gICAgICAgIHRlcm1pbmFsLnByaW50KFwiQXQgdGhlIGJhY2sgb2YgdGhlIGNhdmUsIHlvdSBmaW5kIHdoYXQgYXBwZWFycyB0byBiZSB0aGUgY3JlYXR1cmUncyBob2FyZOKAlGl0ZW1zIHRha2VuIGZyb20gaXRzIHZpY3RpbXMuXCIsICdzdG9yeS1ldmVudCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBjcmVhdHVyZSBmcm9tIHRoZSBsb2NhdGlvbidzIE5QQ3NcbiAgICAgICAgY29uc3QgbG9jYXRpb24gPSBzdG9yeUVuZ2luZS5sb2NhdGlvbnNbJ2NyZWF0dXJlX2Rlbl9pbnRlcmlvciddO1xuICAgICAgICBjb25zdCBpbmRleCA9IGxvY2F0aW9uLm5wY3MuaW5kZXhPZignY2F2ZV9jcmVhdHVyZScpO1xuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgbG9jYXRpb24ubnBjcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgdGhlIGxvY2F0aW9uIGRlc2NyaXB0aW9uXG4gICAgICAgIGxvY2F0aW9uLmRlc2NyaXB0aW9uID0gXCJUaGUgaW5zaWRlIG9mIHRoZSBjYXZlIGlzIGRhbXAgYW5kIGRhcmsuIEJvbmVzIGxpdHRlciB0aGUgZmxvb3IsIGFuZCBhIGZvdWwgc21lbGwgcGVybWVhdGVzIHRoZSBhaXIuIFRoZSB0d2lzdGVkIGJlYXIgbGllcyBkZWFkIGF0IHRoZSBiYWNrIG9mIHRoZSBjYXZlLlwiO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTsiXSwibmFtZXMiOlsiZ2FtZURhdGEiLCJsb2NhdGlvbnMiLCJjcm9zc3JvYWRzIiwibmFtZSIsInNjZW5lIiwiZGVzY3JpcHRpb24iLCJleGl0cyIsIm5vcnRoIiwic291dGgiLCJlYXN0Iiwid2VzdCIsImZlYXR1cmVzIiwia2V5d29yZHMiLCJvbkV4YW1pbmUiLCJnYW1lU3RhdGUiLCJ0ZXJtaW5hbCIsIm1lbW9yeUZyYWdtZW50cyIsImluY2x1ZGVzIiwicHVzaCIsInByaW50Iiwic2V0RmxhZyIsIm9uRmlyc3RWaXNpdCIsImZvcmVzdF9wYXRoX3dlc3QiLCJ2aWxsYWdlX291dHNraXJ0cyIsImxvY2F0aW9uSWQiLCJjb25kaXRpb24iLCJnZXRGbGFnIiwidHJpZ2dlcldvbGZEZWF0aFN0b3J5IiwiYmxvY2tlZE1lc3NhZ2UiLCJucGNzIiwiaXRlbXMiLCJ2aWxsYWdlX2VudHJhbmNlIiwidmlsbGFnZV9zcXVhcmUiLCJ2aWxsYWdlX3NtaXRoeSIsInZpbGxhZ2VfaW5uIiwidmlsbGFnZV9lbGRlcl9ob3VzZSIsInJldmVhbHNJdGVtIiwiYXV0b1Rha2UiLCJ2aWxsYWdlX21hcmtldCIsImZvcmVzdF9wYXRoX25vcnRoIiwiaGFzSXRlbSIsImNyZWF0dXJlX2Rlbl9lbnRyYW5jZSIsImNyZWF0dXJlX2Rlbl9pbnRlcmlvciIsImZvcmVzdF9wYXRoX2Vhc3QiLCJmb3Jlc3RfY2xlYXJpbmciLCJsZW5ndGgiLCJkZWVwX2ZvcmVzdCIsIndpemFyZF90b3dlcl9iYXNlIiwiZW50ZXIiLCJmb3Jlc3RfcGF0aF9zb3V0aCIsImhpbGxzaWRlIiwiYnJhbmNoIiwidHlwZSIsImRhbWFnZSIsInRha2VhYmxlIiwicnVzdHlfc3dvcmQiLCJoaWRkZW4iLCJyZXZlYWxGbGFnIiwibGVhdGhlcl9hcm1vciIsInByb3RlY3Rpb24iLCJzcGVlZFBlbmFsdHkiLCJtYXBfdG9fZGVuIiwidXNhYmxlIiwib25Vc2UiLCJzdGVlbF9zd29yZCIsImNoYWlubWFpbCIsImhlYWx0aF9wb3Rpb24iLCJ1c2FibGVJbkNvbWJhdCIsImhlYWwiLCJjb25jYXQiLCJwbGF5ZXJIZWFsdGgiLCJwbGF5ZXJNYXhIZWFsdGgiLCJyZW1vdmVGcm9tSW52ZW50b3J5Iiwib25Db21iYXRVc2UiLCJlbmVteSIsImNvbWJhdFN5c3RlbSIsImtuaWdodF9zaWduZXQiLCJvblRha2UiLCJwbGF5ZXJOYW1lIiwibWVtb3J5X2NyeXN0YWwiLCJtYXhIZWFsdGgiLCJoZWFsdGgiLCJ3b2xmX3BlbHQiLCJ0d2lzdGVkX2NsYXciLCJiZWFyX2hpZGUiLCJiZWFyX2NsYXdzIiwiY2hpbGQxIiwicHJlc2VuY2VEZXNjcmlwdGlvbiIsInRhbGthYmxlIiwiYXR0YWNrYWJsZSIsIm9uVGFsayIsInN0b3J5RW5naW5lIiwiY2hpbGQyIiwic21hbGxfY3JlYXR1cmUiLCJjb21iYXREZXNjcmlwdGlvbiIsInNwZWVkIiwib25EZWZlYXQiLCJsb2NhdGlvbiIsImNyZWF0dXJlSW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiY2hpbGQxSW5kZXgiLCJjaGlsZDJJbmRleCIsInZpbGxhZ2VfZWxkZXIiLCJibGFja3NtaXRoIiwiaW5ua2VlcGVyIiwiYWRkVG9JbnZlbnRvcnkiLCJfb2JqZWN0U3ByZWFkIiwiaWQiLCJtZXJjaGFudCIsImNhdmVfY3JlYXR1cmUiLCJyZXdhcmRzIiwiaGVhbHRoSW5jcmVhc2UiLCJpbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/gameData.js\n\n}");

/***/ }),

/***/ "./src/js/gameState.js":
/*!*****************************!*\
  !*** ./src/js/gameState.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameState: () => (/* binding */ GameState)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Game state management\n\nvar GameState = /*#__PURE__*/function () {\n  function GameState() {\n    _classCallCheck(this, GameState);\n    this.reset();\n  }\n  return _createClass(GameState, [{\n    key: \"reset\",\n    value: function reset() {\n      // Player information\n      this.playerName = '';\n      this.playerHealth = 100;\n      this.playerMaxHealth = 100;\n\n      // Game progress\n      this.currentLocation = 'crossroads';\n      this.visitedLocations = new Set(['crossroads']);\n      this.completedObjectives = new Set();\n      this.knownInformation = new Set();\n      this.memoryRecovered = 0; // 0-100%\n\n      // Inventory\n      this.inventory = [];\n      this.equippedWeapon = null;\n      this.equippedArmor = null;\n\n      // Game flags\n      this.flags = {\n        metChildren: false,\n        savedChildren: false,\n        visitedVillage: false,\n        defeatedVillageMonster: false,\n        rememberedKnight: false,\n        rememberedWizard: false,\n        rememberedQueen: false,\n        foundTower: false\n      };\n    }\n  }, {\n    key: \"newGame\",\n    value: function newGame(playerName) {\n      this.reset();\n      this.playerName = playerName;\n      this.saveGame();\n    }\n  }, {\n    key: \"saveGame\",\n    value: function saveGame() {\n      var saveData = {\n        playerName: this.playerName,\n        playerHealth: this.playerHealth,\n        playerMaxHealth: this.playerMaxHealth,\n        currentLocation: this.currentLocation,\n        visitedLocations: Array.from(this.visitedLocations),\n        completedObjectives: Array.from(this.completedObjectives),\n        knownInformation: Array.from(this.knownInformation),\n        memoryRecovered: this.memoryRecovered,\n        inventory: this.inventory,\n        equippedWeapon: this.equippedWeapon,\n        equippedArmor: this.equippedArmor,\n        flags: this.flags\n      };\n      localStorage.setItem('forgottenSteel_saveGame', JSON.stringify(saveData));\n      return true;\n    }\n  }, {\n    key: \"loadFromSave\",\n    value: function loadFromSave(saveData) {\n      this.playerName = saveData.playerName || '';\n      this.playerHealth = saveData.playerHealth || 100;\n      this.playerMaxHealth = saveData.playerMaxHealth || 100;\n      this.currentLocation = saveData.currentLocation || 'crossroads';\n      this.visitedLocations = new Set(saveData.visitedLocations || ['crossroads']);\n      this.completedObjectives = new Set(saveData.completedObjectives || []);\n      this.knownInformation = new Set(saveData.knownInformation || []);\n      this.memoryRecovered = saveData.memoryRecovered || 0;\n      this.inventory = saveData.inventory || [];\n      this.equippedWeapon = saveData.equippedWeapon || null;\n      this.equippedArmor = saveData.equippedArmor || null;\n      this.flags = saveData.flags || {\n        metChildren: false,\n        savedChildren: false,\n        visitedVillage: false,\n        defeatedVillageMonster: false,\n        rememberedKnight: false,\n        rememberedWizard: false,\n        rememberedQueen: false,\n        foundTower: false\n      };\n      return true;\n    }\n  }, {\n    key: \"changeLocation\",\n    value: function changeLocation(newLocation) {\n      this.currentLocation = newLocation;\n      this.visitedLocations.add(newLocation);\n      this.saveGame();\n      return true;\n    }\n  }, {\n    key: \"addToInventory\",\n    value: function addToInventory(item) {\n      this.inventory.push(item);\n      this.saveGame();\n      return true;\n    }\n  }, {\n    key: \"removeFromInventory\",\n    value: function removeFromInventory(itemId) {\n      var index = this.inventory.findIndex(function (item) {\n        return item.id === itemId;\n      });\n      if (index !== -1) {\n        var item = this.inventory[index];\n        this.inventory.splice(index, 1);\n        this.saveGame();\n        return item;\n      }\n      return null;\n    }\n  }, {\n    key: \"equipWeapon\",\n    value: function equipWeapon(weaponId) {\n      var weapon = this.inventory.find(function (item) {\n        return item.id === weaponId && item.type === 'weapon';\n      });\n      if (weapon) {\n        this.equippedWeapon = weapon;\n        this.saveGame();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"equipArmor\",\n    value: function equipArmor(armorId) {\n      var armor = this.inventory.find(function (item) {\n        return item.id === armorId && item.type === 'armor';\n      });\n      if (armor) {\n        this.equippedArmor = armor;\n        this.saveGame();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"completeObjective\",\n    value: function completeObjective(objectiveId) {\n      this.completedObjectives.add(objectiveId);\n\n      // Update memory recovered based on objectives\n      this.updateMemoryRecovered();\n      this.saveGame();\n      return true;\n    }\n  }, {\n    key: \"updateMemoryRecovered\",\n    value: function updateMemoryRecovered() {\n      // Calculate memory recovered based on completed objectives and flags\n      var memoryPoints = 0;\n\n      // Each memory-related flag adds to the memory recovered\n      if (this.flags.rememberedKnight) memoryPoints += 25;\n      if (this.flags.rememberedWizard) memoryPoints += 25;\n      if (this.flags.rememberedQueen) memoryPoints += 25;\n\n      // Additional memory points from completed objectives\n      memoryPoints += this.completedObjectives.size * 5;\n\n      // Cap at 100%\n      this.memoryRecovered = Math.min(100, memoryPoints);\n    }\n  }, {\n    key: \"setFlag\",\n    value: function setFlag(flagName) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (flagName in this.flags) {\n        this.flags[flagName] = value;\n\n        // If this is a memory-related flag, update memory recovered\n        if (flagName.startsWith('remembered')) {\n          this.updateMemoryRecovered();\n        }\n        this.saveGame();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getFlag\",\n    value: function getFlag(flagName) {\n      return this.flags[flagName] || false;\n    }\n  }, {\n    key: \"takeDamage\",\n    value: function takeDamage(amount) {\n      this.playerHealth = Math.max(0, this.playerHealth - amount);\n      this.saveGame();\n      return this.playerHealth > 0;\n    }\n  }, {\n    key: \"heal\",\n    value: function heal(amount) {\n      this.playerHealth = Math.min(this.playerMaxHealth, this.playerHealth + amount);\n      this.saveGame();\n      return true;\n    }\n  }, {\n    key: \"isObjectiveCompleted\",\n    value: function isObjectiveCompleted(objectiveId) {\n      return this.completedObjectives.has(objectiveId);\n    }\n  }, {\n    key: \"hasVisitedLocation\",\n    value: function hasVisitedLocation(location) {\n      return this.visitedLocations.has(location);\n    }\n  }, {\n    key: \"hasItem\",\n    value: function hasItem(itemId) {\n      return this.inventory.some(function (item) {\n        return item.id === itemId;\n      });\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/gameState.js\n\n}");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("{/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n/* harmony import */ var _webgl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl.js */ \"./src/js/webgl.js\");\n/* harmony import */ var _storyEngine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storyEngine.js */ \"./src/js/storyEngine.js\");\n/* harmony import */ var _gameData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gameData.js */ \"./src/js/gameData.js\");\n/* harmony import */ var _combatSystem_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./combatSystem.js */ \"./src/js/combatSystem.js\");\n/* harmony import */ var _terminal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./terminal.js */ \"./src/js/terminal.js\");\n/* harmony import */ var _memorySystem_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./memorySystem.js */ \"./src/js/memorySystem.js\");\n/* harmony import */ var _memoryData_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoryData.js */ \"./src/js/memoryData.js\");\n/* harmony import */ var _gameState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gameState.js */ \"./src/js/gameState.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Main entry point for the game\n\n\n\n\n\n\n\n\n\nvar Game = /*#__PURE__*/function () {\n  function Game() {\n    _classCallCheck(this, Game);\n    // DOM elements\n    this.titleScreen = null;\n    this.characterCreation = null;\n    this.gameScreen = null;\n    this.newGameBtn = null;\n    this.loadGameBtn = null;\n    this.startAdventureBtn = null;\n    this.characterNameInput = null;\n\n    // Game state\n    this.playerName = '';\n    this.currentLocation = 'crossroads';\n    this.inventory = [];\n    this.gameProgress = {\n      memoryFragments: [],\n      questFlags: {},\n      visitedLocations: [],\n      defeatedEnemies: [],\n      discoveredItems: []\n    };\n    this.terminalHistory = [];\n\n    // WebGL renderer\n    this.webglRenderer = null;\n    this.terminal = null;\n    this.storyEngine = null;\n    this.combatSystem = null;\n    this.memorySystem = null;\n    this.gameState = new _gameState_js__WEBPACK_IMPORTED_MODULE_8__.GameState();\n    this.gameState.playerName = '';\n    this.gameState.currentLocation = 'crossroads';\n    this.gameState.inventory = [];\n    this.gameState.health = 100;\n    this.gameState.maxHealth = 100;\n    this.gameState.experience = 0;\n    this.gameState.level = 1;\n    this.gameState.equipment = {\n      weapon: null,\n      armor: null\n    };\n    this.gameState.flags = {};\n    this.gameState.memoryFragments = [];\n    this.gameState.memoryRecovered = 0;\n    this.gameState.knownInformation = [];\n    this.init();\n  }\n\n  // Check if localStorage is available and working\n  return _createClass(Game, [{\n    key: \"isLocalStorageAvailable\",\n    value: function isLocalStorageAvailable() {\n      try {\n        var test = '__localStorage_test__';\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      // Initialize DOM elements\n      this.titleScreen = document.getElementById('title-screen');\n      this.characterCreation = document.getElementById('character-creation-screen');\n      this.gameScreen = document.getElementById('game-screen');\n      this.newGameBtn = document.getElementById('new-game-btn');\n      this.loadGameBtn = document.getElementById('load-game-btn');\n      this.startAdventureBtn = document.getElementById('start-game-btn');\n      this.characterNameInput = document.getElementById('player-name');\n\n      // Game over screen elements\n      this.loadGameBtnGameOver = document.getElementById('load-game-btn-gameover');\n      this.newGameBtnGameOver = document.getElementById('new-game-btn-gameover');\n      this.titleBtnGameOver = document.getElementById('title-btn-gameover');\n\n      // Set up event listeners\n      this.setupEventListeners();\n\n      // Show title screen\n      this.showScreen('title-screen');\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      if (this.newGameBtn) {\n        this.newGameBtn.addEventListener('click', function () {\n          return _this.showCharacterCreation();\n        });\n      }\n      if (this.loadGameBtn) {\n        this.loadGameBtn.addEventListener('click', function () {\n          return _this.loadGame();\n        });\n      }\n      if (this.startAdventureBtn) {\n        this.startAdventureBtn.addEventListener('click', function () {\n          return _this.startNewGame();\n        });\n      }\n\n      // Game over screen event listeners\n      if (this.loadGameBtnGameOver) {\n        this.loadGameBtnGameOver.addEventListener('click', function () {\n          return _this.loadGame();\n        });\n      }\n      if (this.newGameBtnGameOver) {\n        this.newGameBtnGameOver.addEventListener('click', function () {\n          return _this.showCharacterCreation();\n        });\n      }\n      if (this.titleBtnGameOver) {\n        this.titleBtnGameOver.addEventListener('click', function () {\n          return _this.showScreen('title-screen');\n        });\n      }\n    }\n  }, {\n    key: \"showScreen\",\n    value: function showScreen(screenId) {\n      // Hide all screens\n      var screens = document.querySelectorAll('.screen');\n      screens.forEach(function (screen) {\n        return screen.classList.remove('active');\n      });\n\n      // Show requested screen\n      var targetScreen = document.getElementById(screenId);\n      if (targetScreen) {\n        targetScreen.classList.add('active');\n      }\n    }\n  }, {\n    key: \"showCharacterCreation\",\n    value: function showCharacterCreation() {\n      this.showScreen('character-creation-screen');\n    }\n  }, {\n    key: \"loadGame\",\n    value: function loadGame() {\n      // Check if localStorage is available\n      if (!this.isLocalStorageAvailable()) {\n        alert('Save/Load functionality is not available in this browser or is disabled.');\n        return;\n      }\n      var savedGame = localStorage.getItem('forgottenSteel_saveGame');\n      if (!savedGame) {\n        alert('No saved game found! Start a new game to begin your adventure.');\n        return;\n      }\n      try {\n        var saveData = JSON.parse(savedGame);\n\n        // Restore comprehensive game state\n        this.playerName = saveData.playerName || '';\n        this.currentLocation = saveData.currentLocation || 'crossroads';\n        this.inventory = saveData.inventory || [];\n        this.gameProgress = saveData.gameProgress || {\n          memoryFragments: [],\n          questFlags: {},\n          visitedLocations: [],\n          defeatedEnemies: [],\n          discoveredItems: []\n        };\n        this.terminalHistory = saveData.terminalHistory || [];\n\n        // Update gameState object with loaded data\n        this.gameState.playerName = saveData.playerName || '';\n        this.gameState.currentLocation = saveData.currentLocation || 'crossroads';\n        this.gameState.inventory = saveData.inventory || [];\n        this.gameState.health = saveData.health || 100;\n        this.gameState.maxHealth = saveData.maxHealth || 100;\n        this.gameState.experience = saveData.experience || 0;\n        this.gameState.level = saveData.level || 1;\n        this.gameState.equipment = saveData.equipment || {\n          weapon: null,\n          armor: null\n        };\n        this.gameState.flags = saveData.flags || {};\n        this.gameState.memoryFragments = saveData.memoryFragments || [];\n        this.gameState.memoryRecovered = saveData.memoryRecovered || 0;\n        this.gameState.knownInformation = saveData.knownInformation || [];\n\n        // Transition to game screen\n        this.showScreen('game-screen');\n\n        // Restore the game world\n        this.restoreGame();\n\n        // Show success message with better formatting\n        var welcomeMsg = \"Game loaded successfully! Welcome back, \".concat(this.playerName, \"!\");\n        if (this.terminal) {\n          this.terminal.print(welcomeMsg, 'system-message');\n        } else {\n          alert(welcomeMsg);\n        }\n      } catch (error) {\n        var errorMsg = 'Error loading saved game. The save file may be corrupted or incompatible. Please start a new game.';\n        alert(errorMsg);\n        console.error('Load game error:', error);\n\n        // Optionally clear the corrupted save\n        try {\n          localStorage.removeItem('forgottenSteel_saveGame');\n        } catch (e) {\n          console.error('Failed to clear corrupted save:', e);\n        }\n      }\n    }\n  }, {\n    key: \"saveGame\",\n    value: function saveGame() {\n      // Check if localStorage is available\n      if (!this.isLocalStorageAvailable()) {\n        if (this.terminal) {\n          this.terminal.print('Save functionality is not available in this browser.', 'error-message');\n        } else {\n          alert('Save functionality is not available in this browser.');\n        }\n        return false;\n      }\n      try {\n        var saveData = {\n          playerName: this.gameState.playerName,\n          currentLocation: this.gameState.currentLocation,\n          inventory: this.gameState.inventory,\n          health: this.gameState.health,\n          maxHealth: this.gameState.maxHealth,\n          experience: this.gameState.experience,\n          level: this.gameState.level,\n          equipment: this.gameState.equipment,\n          flags: this.gameState.flags,\n          memoryFragments: this.gameState.memoryFragments,\n          memoryRecovered: this.gameState.memoryRecovered,\n          knownInformation: this.gameState.knownInformation,\n          gameProgress: this.gameProgress,\n          terminalHistory: this.terminal ? this.terminal.getHistory() : this.terminalHistory,\n          saveDate: new Date().toISOString()\n        };\n        localStorage.setItem('forgottenSteel_saveGame', JSON.stringify(saveData));\n        var saveMsg = \"Game saved successfully! (\".concat(new Date().toLocaleString(), \")\");\n        if (this.terminal) {\n          this.terminal.print(saveMsg, 'system-message');\n        } else {\n          var terminalOutput = document.getElementById('terminal-output');\n          if (terminalOutput) {\n            terminalOutput.innerHTML += \"<p class=\\\"system-message\\\">\".concat(saveMsg, \"</p>\");\n            terminalOutput.scrollTop = terminalOutput.scrollHeight;\n          } else {\n            alert('Game saved successfully!');\n          }\n        }\n        return true;\n      } catch (error) {\n        console.error('Failed to save game:', error);\n        var errorMsg = 'Failed to save game. This may be due to insufficient storage space or browser restrictions. Please try again.';\n        if (this.terminal) {\n          this.terminal.print(errorMsg, 'error-message');\n        } else {\n          alert(errorMsg);\n        }\n        return false;\n      }\n    }\n  }, {\n    key: \"restoreGame\",\n    value: function restoreGame() {\n      var _this2 = this;\n      // Initialize WebGL renderer\n      var canvas = document.getElementById('webgl-canvas');\n      if (canvas) {\n        this.webglRenderer = (0,_webgl_js__WEBPACK_IMPORTED_MODULE_1__.initWebGL)(canvas);\n        this.renderCurrentScene();\n      }\n\n      // Initialize Terminal\n      this.terminal = new _terminal_js__WEBPACK_IMPORTED_MODULE_5__.Terminal('terminal-output', 'terminal-input');\n\n      // Restore terminal history\n      if (this.terminalHistory.length > 0) {\n        this.terminal.setHistory(this.terminalHistory);\n      }\n\n      // Initialize Memory System\n      this.memorySystem = new _memorySystem_js__WEBPACK_IMPORTED_MODULE_6__.MemorySystem(this.gameState, this.terminal, this.webglRenderer, null);\n      (0,_memoryData_js__WEBPACK_IMPORTED_MODULE_7__.initializeMemorySystem)(this.memorySystem);\n\n      // Initialize Story Engine\n      this.storyEngine = new _storyEngine_js__WEBPACK_IMPORTED_MODULE_2__.StoryEngine(this.gameState, this.terminal, this.webglRenderer);\n\n      // Initialize Combat System with story engine reference\n      this.combatSystem = new _combatSystem_js__WEBPACK_IMPORTED_MODULE_4__.CombatSystem(this.gameState, this.terminal, this.storyEngine);\n      this.combatSystem.storyEngine = this.storyEngine;\n      this.storyEngine.setCombatSystem(this.combatSystem);\n      this.storyEngine.setMemorySystem(this.memorySystem);\n\n      // Register all game data\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.locations).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          id = _ref2[0],\n          data = _ref2[1];\n        _this2.storyEngine.registerLocation(id, data);\n      });\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.items).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          id = _ref4[0],\n          data = _ref4[1];\n        _this2.storyEngine.registerItem(id, data);\n      });\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.npcs).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          id = _ref6[0],\n          data = _ref6[1];\n        _this2.storyEngine.registerNPC(id, data);\n      });\n\n      // Restore current location description without triggering onFirstVisit\n      this.storyEngine.describeCurrentLocation();\n\n      // Start the game loop for memory effects\n      this.startGameLoop();\n      this.terminal.print('Game loaded successfully. Welcome back!', 'system-message');\n    }\n  }, {\n    key: \"startNewGame\",\n    value: function startNewGame() {\n      var _this$characterNameIn;\n      var characterName = (_this$characterNameIn = this.characterNameInput) === null || _this$characterNameIn === void 0 ? void 0 : _this$characterNameIn.value.trim();\n      if (!characterName) {\n        alert('Please enter a name for your character.');\n        return;\n      }\n\n      // Store the character name for use in the game\n      this.playerName = characterName;\n\n      // Transition to the game screen\n      this.showScreen('game-screen');\n\n      // Initialize the game world\n      this.initializeGame();\n    }\n  }, {\n    key: \"initializeGame\",\n    value: function initializeGame() {\n      var _this3 = this;\n      // Reset game state for new game\n      this.currentLocation = 'crossroads';\n      this.inventory = [];\n      this.gameProgress = {\n        memoryFragments: [],\n        questFlags: {},\n        visitedLocations: [],\n        defeatedEnemies: [],\n        discoveredItems: []\n      };\n      this.terminalHistory = [];\n\n      // Create new GameState instance\n      this.gameState = new _gameState_js__WEBPACK_IMPORTED_MODULE_8__.GameState();\n      this.gameState.playerName = this.playerName;\n      this.gameState.currentLocation = 'crossroads';\n      this.gameState.inventory = [];\n      this.gameState.health = 100;\n      this.gameState.maxHealth = 100;\n      this.gameState.experience = 0;\n      this.gameState.level = 1;\n      this.gameState.equipment = {\n        weapon: null,\n        armor: null\n      };\n      this.gameState.flags = {};\n      this.gameState.memoryFragments = [];\n      this.gameState.memoryRecovered = 0;\n      this.gameState.knownInformation = [];\n\n      // Initialize WebGL renderer\n      var canvas = document.getElementById('webgl-canvas');\n      if (canvas) {\n        this.webglRenderer = (0,_webgl_js__WEBPACK_IMPORTED_MODULE_1__.initWebGL)(canvas);\n        this.renderCurrentScene();\n      }\n\n      // Initialize Terminal\n      this.terminal = new _terminal_js__WEBPACK_IMPORTED_MODULE_5__.Terminal('terminal-output', 'terminal-input');\n\n      // Initialize Story Engine\n      this.storyEngine = new _storyEngine_js__WEBPACK_IMPORTED_MODULE_2__.StoryEngine(this.gameState, this.terminal, this.webglRenderer);\n\n      // Initialize Combat System with story engine reference\n      this.combatSystem = new _combatSystem_js__WEBPACK_IMPORTED_MODULE_4__.CombatSystem(this.gameState, this.terminal, this.storyEngine);\n      this.combatSystem.storyEngine = this.storyEngine;\n      this.storyEngine.setCombatSystem(this.combatSystem);\n      this.storyEngine.setMemorySystem(this.memorySystem);\n\n      // Register all game data\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.locations).forEach(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          id = _ref8[0],\n          data = _ref8[1];\n        _this3.storyEngine.registerLocation(id, data);\n      });\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.items).forEach(function (_ref9) {\n        var _ref0 = _slicedToArray(_ref9, 2),\n          id = _ref0[0],\n          data = _ref0[1];\n        _this3.storyEngine.registerItem(id, data);\n      });\n      Object.entries(_gameData_js__WEBPACK_IMPORTED_MODULE_3__.gameData.npcs).forEach(function (_ref1) {\n        var _ref10 = _slicedToArray(_ref1, 2),\n          id = _ref10[0],\n          data = _ref10[1];\n        _this3.storyEngine.registerNPC(id, data);\n      });\n\n      // Start the story\n      this.storyEngine.start();\n\n      // Start the game loop for memory effects\n      this.startGameLoop();\n    }\n\n    // Command handling is now managed by StoryEngine\n  }, {\n    key: \"renderCurrentScene\",\n    value: function renderCurrentScene() {\n      if (this.webglRenderer && this.gameState.currentLocation) {\n        // Map story locations to scene names for WebGL renderer\n        var locationSceneMap = {\n          'crossroads': 'crossroads',\n          'forest_path_north': 'forest_path',\n          'forest_path_south': 'forest_path',\n          'forest_path_east': 'forest_path',\n          'forest_path_west': 'forest_path',\n          'village_outskirts': 'village_outskirts',\n          'village_entrance': 'village_entrance',\n          'village_square': 'village_square',\n          'village_smithy': 'village_smithy',\n          'village_inn': 'village_inn',\n          'village_elder_house': 'village_elder_house',\n          'village_market': 'village_market',\n          'creature_den_entrance': 'cave_entrance',\n          'creature_den_interior': 'cave_interior',\n          'forest_clearing': 'forest_clearing',\n          'deep_forest': 'deep_forest',\n          'wizard_tower_base': 'wizard_tower_exterior',\n          'hillside': 'hillside'\n        };\n        var sceneName = locationSceneMap[this.gameState.currentLocation] || 'chamber';\n        this.webglRenderer.render(sceneName);\n      }\n    }\n  }, {\n    key: \"startGameLoop\",\n    value: function startGameLoop() {\n      var _this4 = this;\n      var _gameLoop = function gameLoop() {\n        // Update memory system for flash effects\n        if (_this4.memorySystem) {\n          _this4.memorySystem.update();\n        }\n\n        // Continue the loop\n        requestAnimationFrame(_gameLoop);\n      };\n\n      // Start the loop\n      requestAnimationFrame(_gameLoop);\n    }\n  }]);\n}(); // Initialize the game when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  new Game();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/main.js\n\n}");

/***/ }),

/***/ "./src/js/memoryData.js":
/*!******************************!*\
  !*** ./src/js/memoryData.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeMemorySystem: () => (/* binding */ initializeMemorySystem)\n/* harmony export */ });\n/* unused harmony export memoryData */\n/* harmony import */ var _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memorySystem.js */ \"./src/js/memorySystem.js\");\n// Memory fragments and triggers for the Forgotten Steel game\n\n\nvar memoryData = {\n  memories: {\n    pond_visions: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'pond_visions',\n      title: 'Visions in the Water',\n      text: 'You see flashes of yourself in gleaming armor, standing before a great castle. A woman in a crown speaks to you with urgency in her voice.',\n      importance: 'major',\n      flashImage: 'memory_castle.jpg'\n    }),\n    rememberedKnight: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'rememberedKnight',\n      title: 'The Knight\\'s Oath',\n      text: 'You remember taking an oath of service, kneeling before the throne. You were a knight of the realm, sworn to protect the innocent.',\n      importance: 'critical',\n      flashImage: 'memory_oath.jpg'\n    }),\n    wizard_betrayal: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'wizard_betrayal',\n      title: 'The Wizard\\'s Betrayal',\n      text: 'A trusted advisor... no, a wizard you once called friend. His face twists with malice as he raises his staff against you. \"You know too much,\" he hisses.',\n      importance: 'critical',\n      flashImage: 'memory_betrayal.jpg'\n    }),\n    royal_scroll: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'royal_scroll',\n      title: 'Royal Decree',\n      text: 'The scroll bears the royal seal. You remember delivering urgent messages between the castle and distant outposts. You were a trusted messenger of the crown.',\n      importance: 'major',\n      flashImage: 'memory_scroll.jpg'\n    }),\n    tower_symbols: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'tower_symbols',\n      title: 'The Wizard\\'s Name',\n      text: 'The symbols spell out a name: Malachar the Deceiver. Your former mentor, the court wizard who betrayed the realm and erased your memories.',\n      importance: 'critical',\n      flashImage: 'memory_symbols.jpg'\n    }),\n    crossroads_battle: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'crossroads_battle',\n      title: 'The Ambush',\n      text: 'You remember now - you were ambushed here while carrying vital intelligence about Malachar\\'s treachery. Dark creatures overwhelmed you, but not before you hid the evidence.',\n      importance: 'critical',\n      flashImage: 'memory_ambush.jpg'\n    }),\n    knight_identity: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryData({\n      id: 'knight_identity',\n      title: 'Your True Name',\n      text: 'Sir Aldric of Westmarch - that is who you are. A knight-errant in service to the crown, tasked with uncovering corruption in the highest ranks of the kingdom.',\n      importance: 'critical',\n      flashImage: 'memory_identity.jpg'\n    })\n  },\n  triggers: {\n    pond_examine: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'pond_examine',\n      type: 'examine',\n      target: 'pond',\n      memoryId: 'pond_visions',\n      oneTime: true\n    }),\n    pond_examine_advanced: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'pond_examine_advanced',\n      type: 'examine',\n      target: 'pond',\n      memoryId: 'wizard_betrayal',\n      condition: function condition(gameState) {\n        return gameState.flags.pond_visions && gameState.memoryFragments.length >= 3;\n      },\n      oneTime: true\n    }),\n    scroll_examine: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'scroll_examine',\n      type: 'examine',\n      target: 'scroll',\n      memoryId: 'royal_scroll',\n      oneTime: true\n    }),\n    symbols_examine: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'symbols_examine',\n      type: 'examine',\n      target: 'symbols',\n      memoryId: 'tower_symbols',\n      condition: function condition(gameState) {\n        return gameState.flags.rememberedMission;\n      },\n      oneTime: true\n    }),\n    ground_examine: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'ground_examine',\n      type: 'examine',\n      target: 'ground',\n      memoryId: 'crossroads_battle',\n      oneTime: true\n    }),\n    signet_take: new _memorySystem_js__WEBPACK_IMPORTED_MODULE_0__.MemoryTriggerData({\n      id: 'signet_take',\n      type: 'take',\n      target: 'knight_signet',\n      memoryId: 'knight_identity',\n      oneTime: true\n    })\n  }\n};\n\n// Function to register all memories and triggers with the memory system\nfunction initializeMemorySystem(memorySystem) {\n  // Register all memories\n  Object.values(memoryData.memories).forEach(function (memory) {\n    memorySystem.registerMemory(memory.id, memory);\n  });\n\n  // Register all triggers\n  Object.values(memoryData.triggers).forEach(function (trigger) {\n    memorySystem.registerMemoryTrigger(trigger.id, trigger);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/memoryData.js\n\n}");

/***/ }),

/***/ "./src/js/memorySystem.js":
/*!********************************!*\
  !*** ./src/js/memorySystem.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryData: () => (/* binding */ MemoryData),\n/* harmony export */   MemorySystem: () => (/* binding */ MemorySystem),\n/* harmony export */   MemoryTriggerData: () => (/* binding */ MemoryTriggerData)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Memory system for handling memory recovery events\n\nvar MemorySystem = /*#__PURE__*/function () {\n  function MemorySystem(gameState, terminal, webglRenderer, audioManager) {\n    _classCallCheck(this, MemorySystem);\n    this.gameState = gameState;\n    this.terminal = terminal;\n    this.webglRenderer = webglRenderer;\n    this.audioManager = audioManager;\n    this.memories = {};\n    this.memoryTriggers = {};\n    this.activeMemoryFlash = false;\n    this.memoryFlashStartTime = 0;\n    this.memoryFlashDuration = 2000; // ms\n  }\n\n  // Register a memory that can be recovered\n  return _createClass(MemorySystem, [{\n    key: \"registerMemory\",\n    value: function registerMemory(id, memoryData) {\n      this.memories[id] = {\n        id: id,\n        title: memoryData.title || 'Forgotten Memory',\n        text: memoryData.text || 'A fragment of memory returns to you...',\n        flashImage: memoryData.flashImage || null,\n        recovered: false,\n        importance: memoryData.importance || 'minor',\n        // minor, major, critical\n        relatedObjectives: memoryData.relatedObjectives || [],\n        onRecovered: memoryData.onRecovered || null\n      };\n    }\n\n    // Register a trigger that can cause memory recovery\n  }, {\n    key: \"registerMemoryTrigger\",\n    value: function registerMemoryTrigger(triggerId, triggerData) {\n      this.memoryTriggers[triggerId] = {\n        id: triggerId,\n        type: triggerData.type,\n        // location, item, combat, npc, objective\n        target: triggerData.target,\n        // ID of the location, item, etc.\n        condition: triggerData.condition || null,\n        // Function that returns true if trigger should activate\n        memoryId: triggerData.memoryId,\n        // ID of the memory to recover\n        triggered: false,\n        oneTime: triggerData.oneTime !== undefined ? triggerData.oneTime : true\n      };\n    }\n\n    // Check all triggers based on an event\n  }, {\n    key: \"checkTriggers\",\n    value: function checkTriggers(eventType, eventTarget) {\n      var _this = this;\n      var eventData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var triggeredMemories = [];\n      Object.values(this.memoryTriggers).forEach(function (trigger) {\n        // Skip already triggered one-time triggers\n        if (trigger.triggered && trigger.oneTime) return;\n\n        // Check if this trigger matches the event\n        if (trigger.type === eventType && (trigger.target === eventTarget || trigger.target === '*')) {\n          // Check additional condition if provided\n          var conditionMet = true;\n          if (trigger.condition && typeof trigger.condition === 'function') {\n            conditionMet = trigger.condition(_this.gameState, eventData);\n          }\n          if (conditionMet) {\n            // Mark as triggered\n            trigger.triggered = true;\n\n            // Recover the associated memory\n            var memory = _this.memories[trigger.memoryId];\n            if (memory && !memory.recovered) {\n              _this.recoverMemory(trigger.memoryId);\n              triggeredMemories.push(memory);\n            }\n          }\n        }\n      });\n      return triggeredMemories;\n    }\n\n    // Recover a specific memory\n  }, {\n    key: \"recoverMemory\",\n    value: function recoverMemory(memoryId) {\n      var _this2 = this;\n      var memory = this.memories[memoryId];\n      if (!memory || memory.recovered) return false;\n\n      // Mark as recovered\n      memory.recovered = true;\n\n      // Update game state\n      this.gameState.memoryRecovered += 1;\n      this.gameState.knownInformation.push({\n        type: 'memory',\n        title: memory.title,\n        text: memory.text,\n        importance: memory.importance\n      });\n\n      // Trigger memory flash effect\n      this.triggerMemoryFlash(memory);\n\n      // Call onRecovered callback if provided\n      if (memory.onRecovered && typeof memory.onRecovered === 'function') {\n        memory.onRecovered(this.gameState, this.terminal);\n      }\n\n      // Complete related objectives\n      if (memory.relatedObjectives && memory.relatedObjectives.length > 0) {\n        memory.relatedObjectives.forEach(function (objectiveId) {\n          _this2.gameState.completeObjective(objectiveId);\n        });\n      }\n      return true;\n    }\n\n    // Trigger a visual memory flash effect\n  }, {\n    key: \"triggerMemoryFlash\",\n    value: function triggerMemoryFlash(memory) {\n      // Play memory flash sound\n      if (this.audioManager) {\n        this.audioManager.playSound('memory_flash');\n      }\n\n      // Set up the visual effect\n      this.activeMemoryFlash = true;\n      this.memoryFlashStartTime = Date.now();\n      this.currentMemoryFlash = memory;\n\n      // Display memory text in terminal\n      this.terminal.printHTML(\"<div class=\\\"memory-flash\\\">\\n      <h3>\".concat(memory.title, \"</h3>\\n      <p>\").concat(memory.text, \"</p>\\n    </div>\"));\n\n      // Set the flash image if provided\n      if (memory.flashImage && this.webglRenderer) {\n        this.webglRenderer.setMemoryFlashImage(memory.flashImage);\n      }\n    }\n\n    // Update the memory system (call this in the game loop)\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.activeMemoryFlash) {\n        var elapsed = Date.now() - this.memoryFlashStartTime;\n        var progress = Math.min(1.0, elapsed / this.memoryFlashDuration);\n\n        // Update the visual effect\n        if (this.webglRenderer) {\n          this.webglRenderer.updateMemoryFlash(progress, this.currentMemoryFlash);\n        }\n\n        // Check if the effect is complete\n        if (progress >= 1.0) {\n          this.activeMemoryFlash = false;\n          this.currentMemoryFlash = null;\n\n          // Reset the renderer\n          if (this.webglRenderer) {\n            this.webglRenderer.clearMemoryFlash();\n          }\n        }\n        return true; // Memory system was updated\n      }\n      return false; // No update needed\n    }\n\n    // Get all recovered memories\n  }, {\n    key: \"getRecoveredMemories\",\n    value: function getRecoveredMemories() {\n      return Object.values(this.memories).filter(function (memory) {\n        return memory.recovered;\n      });\n    }\n\n    // Get all memories (for debugging)\n  }, {\n    key: \"getAllMemories\",\n    value: function getAllMemories() {\n      return this.memories;\n    }\n\n    // Get memory recovery progress as a percentage\n  }, {\n    key: \"getMemoryRecoveryProgress\",\n    value: function getMemoryRecoveryProgress() {\n      var totalMemories = Object.keys(this.memories).length;\n      if (totalMemories === 0) return 0;\n      var recoveredCount = Object.values(this.memories).filter(function (m) {\n        return m.recovered;\n      }).length;\n      return recoveredCount / totalMemories * 100;\n    }\n\n    // Check if a specific memory has been recovered\n  }, {\n    key: \"isMemoryRecovered\",\n    value: function isMemoryRecovered(memoryId) {\n      return this.memories[memoryId] && this.memories[memoryId].recovered;\n    }\n  }]);\n}();\n\n// Memory data structure for defining memories\nvar MemoryData = /*#__PURE__*/_createClass(function MemoryData(options) {\n  _classCallCheck(this, MemoryData);\n  this.id = options.id;\n  this.title = options.title || 'Forgotten Memory';\n  this.text = options.text || 'A fragment of memory returns to you...';\n  this.flashImage = options.flashImage || null;\n  this.importance = options.importance || 'minor'; // minor, major, critical\n  this.relatedObjectives = options.relatedObjectives || [];\n  this.onRecovered = options.onRecovered || null;\n});\n\n// Memory trigger data structure for defining triggers\nvar MemoryTriggerData = /*#__PURE__*/_createClass(function MemoryTriggerData(options) {\n  _classCallCheck(this, MemoryTriggerData);\n  this.id = options.id;\n  this.type = options.type; // location, item, combat, npc, objective\n  this.target = options.target; // ID of the location, item, etc.\n  this.condition = options.condition || null;\n  this.memoryId = options.memoryId;\n  this.oneTime = options.oneTime !== undefined ? options.oneTime : true;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbWVtb3J5U3lzdGVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRU8sSUFBTUEsWUFBWTtFQUN2QixTQUFBQSxhQUFZQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsYUFBYSxFQUFFQyxZQUFZLEVBQUU7SUFBQUMsZUFBQSxPQUFBTCxZQUFBO0lBQzVELElBQUksQ0FBQ0MsU0FBUyxHQUFHQSxTQUFTO0lBQzFCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsYUFBYSxHQUFHQSxhQUFhO0lBQ2xDLElBQUksQ0FBQ0MsWUFBWSxHQUFHQSxZQUFZO0lBQ2hDLElBQUksQ0FBQ0UsUUFBUSxHQUFHLENBQUMsQ0FBQztJQUNsQixJQUFJLENBQUNDLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFDeEIsSUFBSSxDQUFDQyxpQkFBaUIsR0FBRyxLQUFLO0lBQzlCLElBQUksQ0FBQ0Msb0JBQW9CLEdBQUcsQ0FBQztJQUM3QixJQUFJLENBQUNDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxDQUFDO0VBQ25DOztFQUVBO0VBQUEsT0FBQUMsWUFBQSxDQUFBWCxZQUFBO0lBQUFZLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFDLGNBQWNBLENBQUNDLEVBQUUsRUFBRUMsVUFBVSxFQUFFO01BQzdCLElBQUksQ0FBQ1YsUUFBUSxDQUFDUyxFQUFFLENBQUMsR0FBRztRQUNsQkEsRUFBRSxFQUFGQSxFQUFFO1FBQ0ZFLEtBQUssRUFBRUQsVUFBVSxDQUFDQyxLQUFLLElBQUksa0JBQWtCO1FBQzdDQyxJQUFJLEVBQUVGLFVBQVUsQ0FBQ0UsSUFBSSxJQUFJLHdDQUF3QztRQUNqRUMsVUFBVSxFQUFFSCxVQUFVLENBQUNHLFVBQVUsSUFBSSxJQUFJO1FBQ3pDQyxTQUFTLEVBQUUsS0FBSztRQUNoQkMsVUFBVSxFQUFFTCxVQUFVLENBQUNLLFVBQVUsSUFBSSxPQUFPO1FBQUU7UUFDOUNDLGlCQUFpQixFQUFFTixVQUFVLENBQUNNLGlCQUFpQixJQUFJLEVBQUU7UUFDckRDLFdBQVcsRUFBRVAsVUFBVSxDQUFDTyxXQUFXLElBQUk7TUFDekMsQ0FBQztJQUNIOztJQUVBO0VBQUE7SUFBQVgsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQVcscUJBQXFCQSxDQUFDQyxTQUFTLEVBQUVDLFdBQVcsRUFBRTtNQUM1QyxJQUFJLENBQUNuQixjQUFjLENBQUNrQixTQUFTLENBQUMsR0FBRztRQUMvQlYsRUFBRSxFQUFFVSxTQUFTO1FBQ2JFLElBQUksRUFBRUQsV0FBVyxDQUFDQyxJQUFJO1FBQUU7UUFDeEJDLE1BQU0sRUFBRUYsV0FBVyxDQUFDRSxNQUFNO1FBQUU7UUFDNUJDLFNBQVMsRUFBRUgsV0FBVyxDQUFDRyxTQUFTLElBQUksSUFBSTtRQUFFO1FBQzFDQyxRQUFRLEVBQUVKLFdBQVcsQ0FBQ0ksUUFBUTtRQUFFO1FBQ2hDQyxTQUFTLEVBQUUsS0FBSztRQUNoQkMsT0FBTyxFQUFFTixXQUFXLENBQUNNLE9BQU8sS0FBS0MsU0FBUyxHQUFHUCxXQUFXLENBQUNNLE9BQU8sR0FBRztNQUNyRSxDQUFDO0lBQ0g7O0lBRUE7RUFBQTtJQUFBcEIsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQXFCLGFBQWFBLENBQUNDLFNBQVMsRUFBRUMsV0FBVyxFQUFrQjtNQUFBLElBQUFDLEtBQUE7TUFBQSxJQUFoQkMsU0FBUyxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBTixTQUFBLEdBQUFNLFNBQUEsTUFBRyxDQUFDLENBQUM7TUFDbEQsSUFBSUUsaUJBQWlCLEdBQUcsRUFBRTtNQUUxQkMsTUFBTSxDQUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDcEMsY0FBYyxDQUFDLENBQUNxQyxPQUFPLENBQUMsVUFBQUMsT0FBTyxFQUFJO1FBQ3BEO1FBQ0EsSUFBSUEsT0FBTyxDQUFDZCxTQUFTLElBQUljLE9BQU8sQ0FBQ2IsT0FBTyxFQUFFOztRQUUxQztRQUNBLElBQUlhLE9BQU8sQ0FBQ2xCLElBQUksS0FBS1EsU0FBUyxLQUN6QlUsT0FBTyxDQUFDakIsTUFBTSxLQUFLUSxXQUFXLElBQUlTLE9BQU8sQ0FBQ2pCLE1BQU0sS0FBSyxHQUFHLENBQUMsRUFBRTtVQUU5RDtVQUNBLElBQUlrQixZQUFZLEdBQUcsSUFBSTtVQUN2QixJQUFJRCxPQUFPLENBQUNoQixTQUFTLElBQUksT0FBT2dCLE9BQU8sQ0FBQ2hCLFNBQVMsS0FBSyxVQUFVLEVBQUU7WUFDaEVpQixZQUFZLEdBQUdELE9BQU8sQ0FBQ2hCLFNBQVMsQ0FBQ1EsS0FBSSxDQUFDcEMsU0FBUyxFQUFFcUMsU0FBUyxDQUFDO1VBQzdEO1VBRUEsSUFBSVEsWUFBWSxFQUFFO1lBQ2hCO1lBQ0FELE9BQU8sQ0FBQ2QsU0FBUyxHQUFHLElBQUk7O1lBRXhCO1lBQ0EsSUFBTWdCLE1BQU0sR0FBR1YsS0FBSSxDQUFDL0IsUUFBUSxDQUFDdUMsT0FBTyxDQUFDZixRQUFRLENBQUM7WUFDOUMsSUFBSWlCLE1BQU0sSUFBSSxDQUFDQSxNQUFNLENBQUMzQixTQUFTLEVBQUU7Y0FDL0JpQixLQUFJLENBQUNXLGFBQWEsQ0FBQ0gsT0FBTyxDQUFDZixRQUFRLENBQUM7Y0FDcENXLGlCQUFpQixDQUFDUSxJQUFJLENBQUNGLE1BQU0sQ0FBQztZQUNoQztVQUNGO1FBQ0Y7TUFDRixDQUFDLENBQUM7TUFFRixPQUFPTixpQkFBaUI7SUFDMUI7O0lBRUE7RUFBQTtJQUFBN0IsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQW1DLGFBQWFBLENBQUNsQixRQUFRLEVBQUU7TUFBQSxJQUFBb0IsTUFBQTtNQUN0QixJQUFNSCxNQUFNLEdBQUcsSUFBSSxDQUFDekMsUUFBUSxDQUFDd0IsUUFBUSxDQUFDO01BQ3RDLElBQUksQ0FBQ2lCLE1BQU0sSUFBSUEsTUFBTSxDQUFDM0IsU0FBUyxFQUFFLE9BQU8sS0FBSzs7TUFFN0M7TUFDQTJCLE1BQU0sQ0FBQzNCLFNBQVMsR0FBRyxJQUFJOztNQUV2QjtNQUNBLElBQUksQ0FBQ25CLFNBQVMsQ0FBQ2tELGVBQWUsSUFBSSxDQUFDO01BQ25DLElBQUksQ0FBQ2xELFNBQVMsQ0FBQ21ELGdCQUFnQixDQUFDSCxJQUFJLENBQUM7UUFDbkN0QixJQUFJLEVBQUUsUUFBUTtRQUNkVixLQUFLLEVBQUU4QixNQUFNLENBQUM5QixLQUFLO1FBQ25CQyxJQUFJLEVBQUU2QixNQUFNLENBQUM3QixJQUFJO1FBQ2pCRyxVQUFVLEVBQUUwQixNQUFNLENBQUMxQjtNQUNyQixDQUFDLENBQUM7O01BRUY7TUFDQSxJQUFJLENBQUNnQyxrQkFBa0IsQ0FBQ04sTUFBTSxDQUFDOztNQUUvQjtNQUNBLElBQUlBLE1BQU0sQ0FBQ3hCLFdBQVcsSUFBSSxPQUFPd0IsTUFBTSxDQUFDeEIsV0FBVyxLQUFLLFVBQVUsRUFBRTtRQUNsRXdCLE1BQU0sQ0FBQ3hCLFdBQVcsQ0FBQyxJQUFJLENBQUN0QixTQUFTLEVBQUUsSUFBSSxDQUFDQyxRQUFRLENBQUM7TUFDbkQ7O01BRUE7TUFDQSxJQUFJNkMsTUFBTSxDQUFDekIsaUJBQWlCLElBQUl5QixNQUFNLENBQUN6QixpQkFBaUIsQ0FBQ2tCLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDbkVPLE1BQU0sQ0FBQ3pCLGlCQUFpQixDQUFDc0IsT0FBTyxDQUFDLFVBQUFVLFdBQVcsRUFBSTtVQUM5Q0osTUFBSSxDQUFDakQsU0FBUyxDQUFDc0QsaUJBQWlCLENBQUNELFdBQVcsQ0FBQztRQUMvQyxDQUFDLENBQUM7TUFDSjtNQUVBLE9BQU8sSUFBSTtJQUNiOztJQUVBO0VBQUE7SUFBQTFDLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUF3QyxrQkFBa0JBLENBQUNOLE1BQU0sRUFBRTtNQUN6QjtNQUNBLElBQUksSUFBSSxDQUFDM0MsWUFBWSxFQUFFO1FBQ3JCLElBQUksQ0FBQ0EsWUFBWSxDQUFDb0QsU0FBUyxDQUFDLGNBQWMsQ0FBQztNQUM3Qzs7TUFFQTtNQUNBLElBQUksQ0FBQ2hELGlCQUFpQixHQUFHLElBQUk7TUFDN0IsSUFBSSxDQUFDQyxvQkFBb0IsR0FBR2dELElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7TUFDdEMsSUFBSSxDQUFDQyxrQkFBa0IsR0FBR1osTUFBTTs7TUFFaEM7TUFDQSxJQUFJLENBQUM3QyxRQUFRLENBQUMwRCxTQUFTLDRDQUFBQyxNQUFBLENBQ2ZkLE1BQU0sQ0FBQzlCLEtBQUssc0JBQUE0QyxNQUFBLENBQ2JkLE1BQU0sQ0FBQzdCLElBQUkscUJBQ1gsQ0FBQzs7TUFFUjtNQUNBLElBQUk2QixNQUFNLENBQUM1QixVQUFVLElBQUksSUFBSSxDQUFDaEIsYUFBYSxFQUFFO1FBQzNDLElBQUksQ0FBQ0EsYUFBYSxDQUFDMkQsbUJBQW1CLENBQUNmLE1BQU0sQ0FBQzVCLFVBQVUsQ0FBQztNQUMzRDtJQUNGOztJQUVBO0VBQUE7SUFBQVAsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQWtELE1BQU1BLENBQUEsRUFBRztNQUNQLElBQUksSUFBSSxDQUFDdkQsaUJBQWlCLEVBQUU7UUFDMUIsSUFBTXdELE9BQU8sR0FBR1AsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ2pELG9CQUFvQjtRQUN0RCxJQUFNd0QsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEVBQUVILE9BQU8sR0FBRyxJQUFJLENBQUN0RCxtQkFBbUIsQ0FBQzs7UUFFbEU7UUFDQSxJQUFJLElBQUksQ0FBQ1AsYUFBYSxFQUFFO1VBQ3RCLElBQUksQ0FBQ0EsYUFBYSxDQUFDaUUsaUJBQWlCLENBQUNILFFBQVEsRUFBRSxJQUFJLENBQUNOLGtCQUFrQixDQUFDO1FBQ3pFOztRQUVBO1FBQ0EsSUFBSU0sUUFBUSxJQUFJLEdBQUcsRUFBRTtVQUNuQixJQUFJLENBQUN6RCxpQkFBaUIsR0FBRyxLQUFLO1VBQzlCLElBQUksQ0FBQ21ELGtCQUFrQixHQUFHLElBQUk7O1VBRTlCO1VBQ0EsSUFBSSxJQUFJLENBQUN4RCxhQUFhLEVBQUU7WUFDdEIsSUFBSSxDQUFDQSxhQUFhLENBQUNrRSxnQkFBZ0IsQ0FBQyxDQUFDO1VBQ3ZDO1FBQ0Y7UUFFQSxPQUFPLElBQUksQ0FBQyxDQUFDO01BQ2Y7TUFFQSxPQUFPLEtBQUssQ0FBQyxDQUFDO0lBQ2hCOztJQUVBO0VBQUE7SUFBQXpELEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUF5RCxvQkFBb0JBLENBQUEsRUFBRztNQUNyQixPQUFPNUIsTUFBTSxDQUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDckMsUUFBUSxDQUFDLENBQUNpRSxNQUFNLENBQUMsVUFBQXhCLE1BQU07UUFBQSxPQUFJQSxNQUFNLENBQUMzQixTQUFTO01BQUEsRUFBQztJQUN4RTs7SUFFQTtFQUFBO0lBQUFSLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUEyRCxjQUFjQSxDQUFBLEVBQUc7TUFDZixPQUFPLElBQUksQ0FBQ2xFLFFBQVE7SUFDdEI7O0lBRUE7RUFBQTtJQUFBTSxHQUFBO0lBQUFDLEtBQUEsRUFDQSxTQUFBNEQseUJBQXlCQSxDQUFBLEVBQUc7TUFDMUIsSUFBTUMsYUFBYSxHQUFHaEMsTUFBTSxDQUFDaUMsSUFBSSxDQUFDLElBQUksQ0FBQ3JFLFFBQVEsQ0FBQyxDQUFDa0MsTUFBTTtNQUN2RCxJQUFJa0MsYUFBYSxLQUFLLENBQUMsRUFBRSxPQUFPLENBQUM7TUFFakMsSUFBTUUsY0FBYyxHQUFHbEMsTUFBTSxDQUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDckMsUUFBUSxDQUFDLENBQUNpRSxNQUFNLENBQUMsVUFBQU0sQ0FBQztRQUFBLE9BQUlBLENBQUMsQ0FBQ3pELFNBQVM7TUFBQSxFQUFDLENBQUNvQixNQUFNO01BQ25GLE9BQVFvQyxjQUFjLEdBQUdGLGFBQWEsR0FBSSxHQUFHO0lBQy9DOztJQUVBO0VBQUE7SUFBQTlELEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFpRSxpQkFBaUJBLENBQUNoRCxRQUFRLEVBQUU7TUFDMUIsT0FBTyxJQUFJLENBQUN4QixRQUFRLENBQUN3QixRQUFRLENBQUMsSUFBSSxJQUFJLENBQUN4QixRQUFRLENBQUN3QixRQUFRLENBQUMsQ0FBQ1YsU0FBUztJQUNyRTtFQUFDO0FBQUE7O0FBR0g7QUFDTyxJQUFNMkQsVUFBVSxnQkFBQXBFLFlBQUEsQ0FDckIsU0FBQW9FLFdBQVlDLE9BQU8sRUFBRTtFQUFBM0UsZUFBQSxPQUFBMEUsVUFBQTtFQUNuQixJQUFJLENBQUNoRSxFQUFFLEdBQUdpRSxPQUFPLENBQUNqRSxFQUFFO0VBQ3BCLElBQUksQ0FBQ0UsS0FBSyxHQUFHK0QsT0FBTyxDQUFDL0QsS0FBSyxJQUFJLGtCQUFrQjtFQUNoRCxJQUFJLENBQUNDLElBQUksR0FBRzhELE9BQU8sQ0FBQzlELElBQUksSUFBSSx3Q0FBd0M7RUFDcEUsSUFBSSxDQUFDQyxVQUFVLEdBQUc2RCxPQUFPLENBQUM3RCxVQUFVLElBQUksSUFBSTtFQUM1QyxJQUFJLENBQUNFLFVBQVUsR0FBRzJELE9BQU8sQ0FBQzNELFVBQVUsSUFBSSxPQUFPLENBQUMsQ0FBQztFQUNqRCxJQUFJLENBQUNDLGlCQUFpQixHQUFHMEQsT0FBTyxDQUFDMUQsaUJBQWlCLElBQUksRUFBRTtFQUN4RCxJQUFJLENBQUNDLFdBQVcsR0FBR3lELE9BQU8sQ0FBQ3pELFdBQVcsSUFBSSxJQUFJO0FBQ2hELENBQUM7O0FBR0g7QUFDTyxJQUFNMEQsaUJBQWlCLGdCQUFBdEUsWUFBQSxDQUM1QixTQUFBc0Usa0JBQVlELE9BQU8sRUFBRTtFQUFBM0UsZUFBQSxPQUFBNEUsaUJBQUE7RUFDbkIsSUFBSSxDQUFDbEUsRUFBRSxHQUFHaUUsT0FBTyxDQUFDakUsRUFBRTtFQUNwQixJQUFJLENBQUNZLElBQUksR0FBR3FELE9BQU8sQ0FBQ3JELElBQUksQ0FBQyxDQUFDO0VBQzFCLElBQUksQ0FBQ0MsTUFBTSxHQUFHb0QsT0FBTyxDQUFDcEQsTUFBTSxDQUFDLENBQUM7RUFDOUIsSUFBSSxDQUFDQyxTQUFTLEdBQUdtRCxPQUFPLENBQUNuRCxTQUFTLElBQUksSUFBSTtFQUMxQyxJQUFJLENBQUNDLFFBQVEsR0FBR2tELE9BQU8sQ0FBQ2xELFFBQVE7RUFDaEMsSUFBSSxDQUFDRSxPQUFPLEdBQUdnRCxPQUFPLENBQUNoRCxPQUFPLEtBQUtDLFNBQVMsR0FBRytDLE9BQU8sQ0FBQ2hELE9BQU8sR0FBRyxJQUFJO0FBQ3ZFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdC1vZi1tZW1vcnkvLi9zcmMvanMvbWVtb3J5U3lzdGVtLmpzPzc5NWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTWVtb3J5IHN5c3RlbSBmb3IgaGFuZGxpbmcgbWVtb3J5IHJlY292ZXJ5IGV2ZW50c1xuXG5leHBvcnQgY2xhc3MgTWVtb3J5U3lzdGVtIHtcbiAgY29uc3RydWN0b3IoZ2FtZVN0YXRlLCB0ZXJtaW5hbCwgd2ViZ2xSZW5kZXJlciwgYXVkaW9NYW5hZ2VyKSB7XG4gICAgdGhpcy5nYW1lU3RhdGUgPSBnYW1lU3RhdGU7XG4gICAgdGhpcy50ZXJtaW5hbCA9IHRlcm1pbmFsO1xuICAgIHRoaXMud2ViZ2xSZW5kZXJlciA9IHdlYmdsUmVuZGVyZXI7XG4gICAgdGhpcy5hdWRpb01hbmFnZXIgPSBhdWRpb01hbmFnZXI7XG4gICAgdGhpcy5tZW1vcmllcyA9IHt9O1xuICAgIHRoaXMubWVtb3J5VHJpZ2dlcnMgPSB7fTtcbiAgICB0aGlzLmFjdGl2ZU1lbW9yeUZsYXNoID0gZmFsc2U7XG4gICAgdGhpcy5tZW1vcnlGbGFzaFN0YXJ0VGltZSA9IDA7XG4gICAgdGhpcy5tZW1vcnlGbGFzaER1cmF0aW9uID0gMjAwMDsgLy8gbXNcbiAgfVxuICBcbiAgLy8gUmVnaXN0ZXIgYSBtZW1vcnkgdGhhdCBjYW4gYmUgcmVjb3ZlcmVkXG4gIHJlZ2lzdGVyTWVtb3J5KGlkLCBtZW1vcnlEYXRhKSB7XG4gICAgdGhpcy5tZW1vcmllc1tpZF0gPSB7XG4gICAgICBpZCxcbiAgICAgIHRpdGxlOiBtZW1vcnlEYXRhLnRpdGxlIHx8ICdGb3Jnb3R0ZW4gTWVtb3J5JyxcbiAgICAgIHRleHQ6IG1lbW9yeURhdGEudGV4dCB8fCAnQSBmcmFnbWVudCBvZiBtZW1vcnkgcmV0dXJucyB0byB5b3UuLi4nLFxuICAgICAgZmxhc2hJbWFnZTogbWVtb3J5RGF0YS5mbGFzaEltYWdlIHx8IG51bGwsXG4gICAgICByZWNvdmVyZWQ6IGZhbHNlLFxuICAgICAgaW1wb3J0YW5jZTogbWVtb3J5RGF0YS5pbXBvcnRhbmNlIHx8ICdtaW5vcicsIC8vIG1pbm9yLCBtYWpvciwgY3JpdGljYWxcbiAgICAgIHJlbGF0ZWRPYmplY3RpdmVzOiBtZW1vcnlEYXRhLnJlbGF0ZWRPYmplY3RpdmVzIHx8IFtdLFxuICAgICAgb25SZWNvdmVyZWQ6IG1lbW9yeURhdGEub25SZWNvdmVyZWQgfHwgbnVsbFxuICAgIH07XG4gIH1cbiAgXG4gIC8vIFJlZ2lzdGVyIGEgdHJpZ2dlciB0aGF0IGNhbiBjYXVzZSBtZW1vcnkgcmVjb3ZlcnlcbiAgcmVnaXN0ZXJNZW1vcnlUcmlnZ2VyKHRyaWdnZXJJZCwgdHJpZ2dlckRhdGEpIHtcbiAgICB0aGlzLm1lbW9yeVRyaWdnZXJzW3RyaWdnZXJJZF0gPSB7XG4gICAgICBpZDogdHJpZ2dlcklkLFxuICAgICAgdHlwZTogdHJpZ2dlckRhdGEudHlwZSwgLy8gbG9jYXRpb24sIGl0ZW0sIGNvbWJhdCwgbnBjLCBvYmplY3RpdmVcbiAgICAgIHRhcmdldDogdHJpZ2dlckRhdGEudGFyZ2V0LCAvLyBJRCBvZiB0aGUgbG9jYXRpb24sIGl0ZW0sIGV0Yy5cbiAgICAgIGNvbmRpdGlvbjogdHJpZ2dlckRhdGEuY29uZGl0aW9uIHx8IG51bGwsIC8vIEZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0cnVlIGlmIHRyaWdnZXIgc2hvdWxkIGFjdGl2YXRlXG4gICAgICBtZW1vcnlJZDogdHJpZ2dlckRhdGEubWVtb3J5SWQsIC8vIElEIG9mIHRoZSBtZW1vcnkgdG8gcmVjb3ZlclxuICAgICAgdHJpZ2dlcmVkOiBmYWxzZSxcbiAgICAgIG9uZVRpbWU6IHRyaWdnZXJEYXRhLm9uZVRpbWUgIT09IHVuZGVmaW5lZCA/IHRyaWdnZXJEYXRhLm9uZVRpbWUgOiB0cnVlXG4gICAgfTtcbiAgfVxuICBcbiAgLy8gQ2hlY2sgYWxsIHRyaWdnZXJzIGJhc2VkIG9uIGFuIGV2ZW50XG4gIGNoZWNrVHJpZ2dlcnMoZXZlbnRUeXBlLCBldmVudFRhcmdldCwgZXZlbnREYXRhID0ge30pIHtcbiAgICBsZXQgdHJpZ2dlcmVkTWVtb3JpZXMgPSBbXTtcbiAgICBcbiAgICBPYmplY3QudmFsdWVzKHRoaXMubWVtb3J5VHJpZ2dlcnMpLmZvckVhY2godHJpZ2dlciA9PiB7XG4gICAgICAvLyBTa2lwIGFscmVhZHkgdHJpZ2dlcmVkIG9uZS10aW1lIHRyaWdnZXJzXG4gICAgICBpZiAodHJpZ2dlci50cmlnZ2VyZWQgJiYgdHJpZ2dlci5vbmVUaW1lKSByZXR1cm47XG4gICAgICBcbiAgICAgIC8vIENoZWNrIGlmIHRoaXMgdHJpZ2dlciBtYXRjaGVzIHRoZSBldmVudFxuICAgICAgaWYgKHRyaWdnZXIudHlwZSA9PT0gZXZlbnRUeXBlICYmIFxuICAgICAgICAgICh0cmlnZ2VyLnRhcmdldCA9PT0gZXZlbnRUYXJnZXQgfHwgdHJpZ2dlci50YXJnZXQgPT09ICcqJykpIHtcbiAgICAgICAgXG4gICAgICAgIC8vIENoZWNrIGFkZGl0aW9uYWwgY29uZGl0aW9uIGlmIHByb3ZpZGVkXG4gICAgICAgIGxldCBjb25kaXRpb25NZXQgPSB0cnVlO1xuICAgICAgICBpZiAodHJpZ2dlci5jb25kaXRpb24gJiYgdHlwZW9mIHRyaWdnZXIuY29uZGl0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgY29uZGl0aW9uTWV0ID0gdHJpZ2dlci5jb25kaXRpb24odGhpcy5nYW1lU3RhdGUsIGV2ZW50RGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmIChjb25kaXRpb25NZXQpIHtcbiAgICAgICAgICAvLyBNYXJrIGFzIHRyaWdnZXJlZFxuICAgICAgICAgIHRyaWdnZXIudHJpZ2dlcmVkID0gdHJ1ZTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBSZWNvdmVyIHRoZSBhc3NvY2lhdGVkIG1lbW9yeVxuICAgICAgICAgIGNvbnN0IG1lbW9yeSA9IHRoaXMubWVtb3JpZXNbdHJpZ2dlci5tZW1vcnlJZF07XG4gICAgICAgICAgaWYgKG1lbW9yeSAmJiAhbWVtb3J5LnJlY292ZXJlZCkge1xuICAgICAgICAgICAgdGhpcy5yZWNvdmVyTWVtb3J5KHRyaWdnZXIubWVtb3J5SWQpO1xuICAgICAgICAgICAgdHJpZ2dlcmVkTWVtb3JpZXMucHVzaChtZW1vcnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiB0cmlnZ2VyZWRNZW1vcmllcztcbiAgfVxuICBcbiAgLy8gUmVjb3ZlciBhIHNwZWNpZmljIG1lbW9yeVxuICByZWNvdmVyTWVtb3J5KG1lbW9yeUlkKSB7XG4gICAgY29uc3QgbWVtb3J5ID0gdGhpcy5tZW1vcmllc1ttZW1vcnlJZF07XG4gICAgaWYgKCFtZW1vcnkgfHwgbWVtb3J5LnJlY292ZXJlZCkgcmV0dXJuIGZhbHNlO1xuICAgIFxuICAgIC8vIE1hcmsgYXMgcmVjb3ZlcmVkXG4gICAgbWVtb3J5LnJlY292ZXJlZCA9IHRydWU7XG4gICAgXG4gICAgLy8gVXBkYXRlIGdhbWUgc3RhdGVcbiAgICB0aGlzLmdhbWVTdGF0ZS5tZW1vcnlSZWNvdmVyZWQgKz0gMTtcbiAgICB0aGlzLmdhbWVTdGF0ZS5rbm93bkluZm9ybWF0aW9uLnB1c2goe1xuICAgICAgdHlwZTogJ21lbW9yeScsXG4gICAgICB0aXRsZTogbWVtb3J5LnRpdGxlLFxuICAgICAgdGV4dDogbWVtb3J5LnRleHQsXG4gICAgICBpbXBvcnRhbmNlOiBtZW1vcnkuaW1wb3J0YW5jZVxuICAgIH0pO1xuICAgIFxuICAgIC8vIFRyaWdnZXIgbWVtb3J5IGZsYXNoIGVmZmVjdFxuICAgIHRoaXMudHJpZ2dlck1lbW9yeUZsYXNoKG1lbW9yeSk7XG4gICAgXG4gICAgLy8gQ2FsbCBvblJlY292ZXJlZCBjYWxsYmFjayBpZiBwcm92aWRlZFxuICAgIGlmIChtZW1vcnkub25SZWNvdmVyZWQgJiYgdHlwZW9mIG1lbW9yeS5vblJlY292ZXJlZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgbWVtb3J5Lm9uUmVjb3ZlcmVkKHRoaXMuZ2FtZVN0YXRlLCB0aGlzLnRlcm1pbmFsKTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ29tcGxldGUgcmVsYXRlZCBvYmplY3RpdmVzXG4gICAgaWYgKG1lbW9yeS5yZWxhdGVkT2JqZWN0aXZlcyAmJiBtZW1vcnkucmVsYXRlZE9iamVjdGl2ZXMubGVuZ3RoID4gMCkge1xuICAgICAgbWVtb3J5LnJlbGF0ZWRPYmplY3RpdmVzLmZvckVhY2gob2JqZWN0aXZlSWQgPT4ge1xuICAgICAgICB0aGlzLmdhbWVTdGF0ZS5jb21wbGV0ZU9iamVjdGl2ZShvYmplY3RpdmVJZCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgXG4gIC8vIFRyaWdnZXIgYSB2aXN1YWwgbWVtb3J5IGZsYXNoIGVmZmVjdFxuICB0cmlnZ2VyTWVtb3J5Rmxhc2gobWVtb3J5KSB7XG4gICAgLy8gUGxheSBtZW1vcnkgZmxhc2ggc291bmRcbiAgICBpZiAodGhpcy5hdWRpb01hbmFnZXIpIHtcbiAgICAgIHRoaXMuYXVkaW9NYW5hZ2VyLnBsYXlTb3VuZCgnbWVtb3J5X2ZsYXNoJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNldCB1cCB0aGUgdmlzdWFsIGVmZmVjdFxuICAgIHRoaXMuYWN0aXZlTWVtb3J5Rmxhc2ggPSB0cnVlO1xuICAgIHRoaXMubWVtb3J5Rmxhc2hTdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMuY3VycmVudE1lbW9yeUZsYXNoID0gbWVtb3J5O1xuICAgIFxuICAgIC8vIERpc3BsYXkgbWVtb3J5IHRleHQgaW4gdGVybWluYWxcbiAgICB0aGlzLnRlcm1pbmFsLnByaW50SFRNTChgPGRpdiBjbGFzcz1cIm1lbW9yeS1mbGFzaFwiPlxuICAgICAgPGgzPiR7bWVtb3J5LnRpdGxlfTwvaDM+XG4gICAgICA8cD4ke21lbW9yeS50ZXh0fTwvcD5cbiAgICA8L2Rpdj5gKTtcbiAgICBcbiAgICAvLyBTZXQgdGhlIGZsYXNoIGltYWdlIGlmIHByb3ZpZGVkXG4gICAgaWYgKG1lbW9yeS5mbGFzaEltYWdlICYmIHRoaXMud2ViZ2xSZW5kZXJlcikge1xuICAgICAgdGhpcy53ZWJnbFJlbmRlcmVyLnNldE1lbW9yeUZsYXNoSW1hZ2UobWVtb3J5LmZsYXNoSW1hZ2UpO1xuICAgIH1cbiAgfVxuICBcbiAgLy8gVXBkYXRlIHRoZSBtZW1vcnkgc3lzdGVtIChjYWxsIHRoaXMgaW4gdGhlIGdhbWUgbG9vcClcbiAgdXBkYXRlKCkge1xuICAgIGlmICh0aGlzLmFjdGl2ZU1lbW9yeUZsYXNoKSB7XG4gICAgICBjb25zdCBlbGFwc2VkID0gRGF0ZS5ub3coKSAtIHRoaXMubWVtb3J5Rmxhc2hTdGFydFRpbWU7XG4gICAgICBjb25zdCBwcm9ncmVzcyA9IE1hdGgubWluKDEuMCwgZWxhcHNlZCAvIHRoaXMubWVtb3J5Rmxhc2hEdXJhdGlvbik7XG4gICAgICBcbiAgICAgIC8vIFVwZGF0ZSB0aGUgdmlzdWFsIGVmZmVjdFxuICAgICAgaWYgKHRoaXMud2ViZ2xSZW5kZXJlcikge1xuICAgICAgICB0aGlzLndlYmdsUmVuZGVyZXIudXBkYXRlTWVtb3J5Rmxhc2gocHJvZ3Jlc3MsIHRoaXMuY3VycmVudE1lbW9yeUZsYXNoKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2hlY2sgaWYgdGhlIGVmZmVjdCBpcyBjb21wbGV0ZVxuICAgICAgaWYgKHByb2dyZXNzID49IDEuMCkge1xuICAgICAgICB0aGlzLmFjdGl2ZU1lbW9yeUZsYXNoID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY3VycmVudE1lbW9yeUZsYXNoID0gbnVsbDtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlc2V0IHRoZSByZW5kZXJlclxuICAgICAgICBpZiAodGhpcy53ZWJnbFJlbmRlcmVyKSB7XG4gICAgICAgICAgdGhpcy53ZWJnbFJlbmRlcmVyLmNsZWFyTWVtb3J5Rmxhc2goKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTsgLy8gTWVtb3J5IHN5c3RlbSB3YXMgdXBkYXRlZFxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZmFsc2U7IC8vIE5vIHVwZGF0ZSBuZWVkZWRcbiAgfVxuICBcbiAgLy8gR2V0IGFsbCByZWNvdmVyZWQgbWVtb3JpZXNcbiAgZ2V0UmVjb3ZlcmVkTWVtb3JpZXMoKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5tZW1vcmllcykuZmlsdGVyKG1lbW9yeSA9PiBtZW1vcnkucmVjb3ZlcmVkKTtcbiAgfVxuICBcbiAgLy8gR2V0IGFsbCBtZW1vcmllcyAoZm9yIGRlYnVnZ2luZylcbiAgZ2V0QWxsTWVtb3JpZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMubWVtb3JpZXM7XG4gIH1cbiAgXG4gIC8vIEdldCBtZW1vcnkgcmVjb3ZlcnkgcHJvZ3Jlc3MgYXMgYSBwZXJjZW50YWdlXG4gIGdldE1lbW9yeVJlY292ZXJ5UHJvZ3Jlc3MoKSB7XG4gICAgY29uc3QgdG90YWxNZW1vcmllcyA9IE9iamVjdC5rZXlzKHRoaXMubWVtb3JpZXMpLmxlbmd0aDtcbiAgICBpZiAodG90YWxNZW1vcmllcyA9PT0gMCkgcmV0dXJuIDA7XG4gICAgXG4gICAgY29uc3QgcmVjb3ZlcmVkQ291bnQgPSBPYmplY3QudmFsdWVzKHRoaXMubWVtb3JpZXMpLmZpbHRlcihtID0+IG0ucmVjb3ZlcmVkKS5sZW5ndGg7XG4gICAgcmV0dXJuIChyZWNvdmVyZWRDb3VudCAvIHRvdGFsTWVtb3JpZXMpICogMTAwO1xuICB9XG4gIFxuICAvLyBDaGVjayBpZiBhIHNwZWNpZmljIG1lbW9yeSBoYXMgYmVlbiByZWNvdmVyZWRcbiAgaXNNZW1vcnlSZWNvdmVyZWQobWVtb3J5SWQpIHtcbiAgICByZXR1cm4gdGhpcy5tZW1vcmllc1ttZW1vcnlJZF0gJiYgdGhpcy5tZW1vcmllc1ttZW1vcnlJZF0ucmVjb3ZlcmVkO1xuICB9XG59XG5cbi8vIE1lbW9yeSBkYXRhIHN0cnVjdHVyZSBmb3IgZGVmaW5pbmcgbWVtb3JpZXNcbmV4cG9ydCBjbGFzcyBNZW1vcnlEYXRhIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuaWQgPSBvcHRpb25zLmlkO1xuICAgIHRoaXMudGl0bGUgPSBvcHRpb25zLnRpdGxlIHx8ICdGb3Jnb3R0ZW4gTWVtb3J5JztcbiAgICB0aGlzLnRleHQgPSBvcHRpb25zLnRleHQgfHwgJ0EgZnJhZ21lbnQgb2YgbWVtb3J5IHJldHVybnMgdG8geW91Li4uJztcbiAgICB0aGlzLmZsYXNoSW1hZ2UgPSBvcHRpb25zLmZsYXNoSW1hZ2UgfHwgbnVsbDtcbiAgICB0aGlzLmltcG9ydGFuY2UgPSBvcHRpb25zLmltcG9ydGFuY2UgfHwgJ21pbm9yJzsgLy8gbWlub3IsIG1ham9yLCBjcml0aWNhbFxuICAgIHRoaXMucmVsYXRlZE9iamVjdGl2ZXMgPSBvcHRpb25zLnJlbGF0ZWRPYmplY3RpdmVzIHx8IFtdO1xuICAgIHRoaXMub25SZWNvdmVyZWQgPSBvcHRpb25zLm9uUmVjb3ZlcmVkIHx8IG51bGw7XG4gIH1cbn1cblxuLy8gTWVtb3J5IHRyaWdnZXIgZGF0YSBzdHJ1Y3R1cmUgZm9yIGRlZmluaW5nIHRyaWdnZXJzXG5leHBvcnQgY2xhc3MgTWVtb3J5VHJpZ2dlckRhdGEge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5pZCA9IG9wdGlvbnMuaWQ7XG4gICAgdGhpcy50eXBlID0gb3B0aW9ucy50eXBlOyAvLyBsb2NhdGlvbiwgaXRlbSwgY29tYmF0LCBucGMsIG9iamVjdGl2ZVxuICAgIHRoaXMudGFyZ2V0ID0gb3B0aW9ucy50YXJnZXQ7IC8vIElEIG9mIHRoZSBsb2NhdGlvbiwgaXRlbSwgZXRjLlxuICAgIHRoaXMuY29uZGl0aW9uID0gb3B0aW9ucy5jb25kaXRpb24gfHwgbnVsbDtcbiAgICB0aGlzLm1lbW9yeUlkID0gb3B0aW9ucy5tZW1vcnlJZDtcbiAgICB0aGlzLm9uZVRpbWUgPSBvcHRpb25zLm9uZVRpbWUgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMub25lVGltZSA6IHRydWU7XG4gIH1cbn0iXSwibmFtZXMiOlsiTWVtb3J5U3lzdGVtIiwiZ2FtZVN0YXRlIiwidGVybWluYWwiLCJ3ZWJnbFJlbmRlcmVyIiwiYXVkaW9NYW5hZ2VyIiwiX2NsYXNzQ2FsbENoZWNrIiwibWVtb3JpZXMiLCJtZW1vcnlUcmlnZ2VycyIsImFjdGl2ZU1lbW9yeUZsYXNoIiwibWVtb3J5Rmxhc2hTdGFydFRpbWUiLCJtZW1vcnlGbGFzaER1cmF0aW9uIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJyZWdpc3Rlck1lbW9yeSIsImlkIiwibWVtb3J5RGF0YSIsInRpdGxlIiwidGV4dCIsImZsYXNoSW1hZ2UiLCJyZWNvdmVyZWQiLCJpbXBvcnRhbmNlIiwicmVsYXRlZE9iamVjdGl2ZXMiLCJvblJlY292ZXJlZCIsInJlZ2lzdGVyTWVtb3J5VHJpZ2dlciIsInRyaWdnZXJJZCIsInRyaWdnZXJEYXRhIiwidHlwZSIsInRhcmdldCIsImNvbmRpdGlvbiIsIm1lbW9yeUlkIiwidHJpZ2dlcmVkIiwib25lVGltZSIsInVuZGVmaW5lZCIsImNoZWNrVHJpZ2dlcnMiLCJldmVudFR5cGUiLCJldmVudFRhcmdldCIsIl90aGlzIiwiZXZlbnREYXRhIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidHJpZ2dlcmVkTWVtb3JpZXMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmb3JFYWNoIiwidHJpZ2dlciIsImNvbmRpdGlvbk1ldCIsIm1lbW9yeSIsInJlY292ZXJNZW1vcnkiLCJwdXNoIiwiX3RoaXMyIiwibWVtb3J5UmVjb3ZlcmVkIiwia25vd25JbmZvcm1hdGlvbiIsInRyaWdnZXJNZW1vcnlGbGFzaCIsIm9iamVjdGl2ZUlkIiwiY29tcGxldGVPYmplY3RpdmUiLCJwbGF5U291bmQiLCJEYXRlIiwibm93IiwiY3VycmVudE1lbW9yeUZsYXNoIiwicHJpbnRIVE1MIiwiY29uY2F0Iiwic2V0TWVtb3J5Rmxhc2hJbWFnZSIsInVwZGF0ZSIsImVsYXBzZWQiLCJwcm9ncmVzcyIsIk1hdGgiLCJtaW4iLCJ1cGRhdGVNZW1vcnlGbGFzaCIsImNsZWFyTWVtb3J5Rmxhc2giLCJnZXRSZWNvdmVyZWRNZW1vcmllcyIsImZpbHRlciIsImdldEFsbE1lbW9yaWVzIiwiZ2V0TWVtb3J5UmVjb3ZlcnlQcm9ncmVzcyIsInRvdGFsTWVtb3JpZXMiLCJrZXlzIiwicmVjb3ZlcmVkQ291bnQiLCJtIiwiaXNNZW1vcnlSZWNvdmVyZWQiLCJNZW1vcnlEYXRhIiwib3B0aW9ucyIsIk1lbW9yeVRyaWdnZXJEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/memorySystem.js\n\n}");

/***/ }),

/***/ "./src/js/storyEngine.js":
/*!*******************************!*\
  !*** ./src/js/storyEngine.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoryEngine: () => (/* binding */ StoryEngine)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Story engine for managing game narrative and locations\n\nvar StoryEngine = /*#__PURE__*/function () {\n  function StoryEngine(gameState, terminal, webglRenderer) {\n    _classCallCheck(this, StoryEngine);\n    this.gameState = gameState;\n    this.terminal = terminal;\n    this.webglRenderer = webglRenderer;\n    this.locations = {};\n    this.items = {};\n    this.npcs = {};\n    this.combatSystem = null;\n    this.memorySystem = null;\n    this.initializeCommandHandlers();\n  }\n  return _createClass(StoryEngine, [{\n    key: \"initializeCommandHandlers\",\n    value: function initializeCommandHandlers() {\n      var _this = this;\n      // Movement commands\n      this.terminal.registerCommand('^(go|move|walk|run|travel) (to )?(north|south|east|west|n|s|e|w)', function (input) {\n        var direction = input.match(/(north|south|east|west|n|s|e|w)/i)[0].toLowerCase();\n        _this.handleMovement(direction);\n      });\n\n      // Direct direction commands (without \"go\")\n      this.terminal.registerCommand(\"^(north|south|east|west|n|s|e|w)$\", function (input) {\n        var direction = input.trim().toLowerCase();\n        _this.handleMovement(direction);\n      });\n\n      // Look command\n      this.terminal.registerCommand('^(look|examine|inspect|l)( around)?$', function () {\n        _this.describeCurrentLocation();\n      });\n\n      // Look at specific object\n      this.terminal.registerCommand('^(look|examine|inspect|l) (at )?(.+)$', function (input) {\n        var target = input.match(/^(?:look|examine|inspect|l)(?: at)?\\s+(.+)$/i)[1].toLowerCase();\n        _this.examineObject(target);\n      });\n\n      // Take/get item\n      this.terminal.registerCommand('^(take|get|grab|pick up) (.+)$', function (input) {\n        var itemName = input.match(/^(?:take|get|grab|pick up)\\s+(.+)$/i)[1].toLowerCase();\n        _this.takeItem(itemName);\n      });\n\n      // Drop item\n      this.terminal.registerCommand('^(drop|discard|throw away) (.+)$', function (input) {\n        var itemName = input.match(/^(?:drop|discard|throw away)\\s+(.+)$/i)[1].toLowerCase();\n        _this.dropItem(itemName);\n      });\n\n      // Use item\n      this.terminal.registerCommand('^(use|activate|apply) (.+)$', function (input) {\n        var itemName = input.match(/^(?:use|activate|apply)\\s+(.+)$/i)[1].toLowerCase();\n        _this.useItem(itemName);\n      });\n\n      // Equip item\n      this.terminal.registerCommand('^(equip|wear|wield) (.+)$', function (input) {\n        var itemName = input.match(/^(?:equip|wear|wield)\\s+(.+)$/i)[1].toLowerCase();\n        _this.equipItem(itemName);\n      });\n\n      // Inventory\n      this.terminal.registerCommand('^(inventory|inv|i)$', function () {\n        _this.showInventory();\n      });\n\n      // Talk to NPC\n      this.terminal.registerCommand('^(talk|speak|chat) (to|with) (.+)$', function (input) {\n        var npcName = input.match(/^(?:talk|speak|chat) (?:to|with) (.+)$/i)[1].toLowerCase();\n        _this.talkToNPC(npcName);\n      });\n\n      // Attack\n      this.terminal.registerCommand('^(attack|fight|hit) (.+)$', function (input) {\n        var targetName = input.match(/^(?:attack|fight|hit) (.+)$/i)[1].toLowerCase();\n        _this.attackTarget(targetName);\n      });\n\n      // Help\n      this.terminal.registerCommand('^(help|\\\\?)$', function () {\n        _this.showHelp();\n      });\n\n      // Status\n      this.terminal.registerCommand('^(status|stats|health|condition)$', function () {\n        _this.showStatus();\n      });\n\n      // Save\n      this.terminal.registerCommand('^(save)$', function () {\n        if (_this.gameState.saveGame()) {\n          _this.terminal.print(\"Game saved successfully.\", 'system-message');\n        } else {\n          _this.terminal.print(\"Failed to save game.\", 'error-message');\n        }\n      });\n\n      // Search command for corpses\n      this.terminal.registerCommand('^(search|loot) (.+)$', function (input) {\n        var targetName = input.match(/^(?:search|loot)\\s+(.+)$/i)[1].toLowerCase();\n        _this.searchTarget(targetName);\n      });\n    }\n  }, {\n    key: \"registerLocation\",\n    value: function registerLocation(id, data) {\n      this.locations[id] = data;\n    }\n  }, {\n    key: \"registerItem\",\n    value: function registerItem(id, data) {\n      this.items[id] = data;\n    }\n  }, {\n    key: \"registerNPC\",\n    value: function registerNPC(id, data) {\n      this.npcs[id] = data;\n    }\n  }, {\n    key: \"setCombatSystem\",\n    value: function setCombatSystem(combatSystem) {\n      this.combatSystem = combatSystem;\n    }\n  }, {\n    key: \"setMemorySystem\",\n    value: function setMemorySystem(memorySystem) {\n      this.memorySystem = memorySystem;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      // Display the introduction\n      this.showIntroduction();\n\n      // Describe the starting location\n      this.describeCurrentLocation();\n    }\n  }, {\n    key: \"showIntroduction\",\n    value: function showIntroduction() {\n      this.terminal.print(\"You awaken on a dirt road, your head throbbing. Your clothes are torn and stained with blood and dirt. You have no memory of who you are or how you got here.\", 'story-text');\n      this.terminal.print(\"As you struggle to your feet, you find yourself at a crossroads. The world around you seems both familiar and strange.\", 'story-text');\n      this.terminal.print(\"\\nType 'help' for a list of commands.\", 'system-message');\n    }\n  }, {\n    key: \"describeCurrentLocation\",\n    value: function describeCurrentLocation() {\n      var _this2 = this;\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location) {\n        this.terminal.print(\"Error: Location '\".concat(locationId, \"' not found.\"), 'error-message');\n        return;\n      }\n\n      // Update WebGL scene\n      this.webglRenderer.setScene(location.scene);\n\n      // Print location name and description\n      this.terminal.print(\"\\n\".concat(location.name), 'location-name');\n      this.terminal.print(location.description, 'location-description');\n\n      // List available exits\n      if (location.exits && Object.keys(location.exits).length > 0) {\n        var exitList = Object.keys(location.exits).map(function (dir) {\n          return dir;\n        }).join(', ');\n        this.terminal.print(\"Exits: \".concat(exitList), 'exits-list');\n      } else {\n        this.terminal.print(\"There are no obvious exits.\", 'exits-list');\n      }\n\n      // List visible items\n      if (location.items && location.items.length > 0) {\n        var visibleItems = location.items.filter(function (itemId) {\n          var item = _this2.items[itemId];\n          return item && (!item.hidden || _this2.gameState.flags[item.revealFlag]);\n        });\n        if (visibleItems.length > 0) {\n          var itemNames = visibleItems.map(function (itemId) {\n            return _this2.items[itemId].name;\n          });\n          this.terminal.print(\"You can see: \".concat(itemNames.join(', '), \".\"), 'items-list');\n        }\n      }\n\n      // List NPCs\n      if (location.npcs && location.npcs.length > 0) {\n        var visibleNPCs = location.npcs.filter(function (npcId) {\n          var npc = _this2.npcs[npcId];\n          return npc && (!npc.hidden || _this2.gameState.flags[npc.revealFlag]);\n        });\n        if (visibleNPCs.length > 0) {\n          visibleNPCs.forEach(function (npcId) {\n            var npc = _this2.npcs[npcId];\n            _this2.terminal.print(npc.presenceDescription, 'npc-description');\n          });\n        }\n      }\n\n      // Check for first-time visit events\n      if (!this.gameState.hasVisitedLocation(locationId) || location.alwaysTriggerEvent) {\n        if (location.onFirstVisit) {\n          location.onFirstVisit(this.gameState, this.terminal);\n        }\n      }\n    }\n  }, {\n    key: \"handleMovement\",\n    value: function handleMovement(direction) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location) {\n        this.terminal.print(\"Error: Current location '\".concat(locationId, \"' not found.\"), 'error-message');\n        return;\n      }\n\n      // Normalize direction\n      var dirMap = {\n        n: 'north',\n        s: 'south',\n        e: 'east',\n        w: 'west'\n      };\n      var normalizedDirection = dirMap[direction] || direction;\n\n      // Check if exit exists\n      if (!location.exits || !location.exits[normalizedDirection]) {\n        this.terminal.print(\"You cannot go \".concat(normalizedDirection, \" from here.\"), 'error-message');\n        return;\n      }\n      var exit = location.exits[normalizedDirection];\n      var targetLocationId;\n\n      // Handle conditional exits\n      if (_typeof(exit) === 'object' && exit.condition) {\n        if (!exit.condition(this.gameState)) {\n          // Check if wolf death story should be triggered\n          if (this.gameState.triggerWolfDeathStory) {\n            this.triggerWolfDeathStory();\n            return;\n          }\n          this.terminal.print(exit.blockedMessage || \"You cannot go \".concat(normalizedDirection, \" from here.\"), 'error-message');\n          return;\n        }\n        targetLocationId = exit.locationId;\n      } else {\n        targetLocationId = exit;\n      }\n\n      // Change location\n      this.gameState.changeLocation(targetLocationId);\n      this.terminal.print(\"You go \".concat(normalizedDirection, \".\"), 'action-result');\n\n      // Describe new location\n      this.describeCurrentLocation();\n    }\n  }, {\n    key: \"examineObject\",\n    value: function examineObject(target) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location) {\n        this.terminal.print(\"Error: Location '\".concat(locationId, \"' not found.\"), 'error-message');\n        return;\n      }\n\n      // Check if it's a feature of the location\n      if (location.features) {\n        var _iterator = _createForOfIteratorHelper(location.features),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var feature = _step.value;\n            if (feature.keywords.some(function (keyword) {\n              return target.includes(keyword);\n            })) {\n              this.terminal.print(feature.description, 'examine-result');\n\n              // Check for memory triggers\n              if (this.memorySystem) {\n                this.memorySystem.checkTriggers('examine', target, {\n                  feature: feature\n                });\n              }\n\n              // Check for hidden items revealed by examining\n              if (feature.revealsItem) {\n                var itemId = feature.revealsItem;\n                var item = this.items[itemId];\n                if (item && item.hidden) {\n                  item.hidden = false;\n                  this.terminal.print(\"You found \".concat(item.name, \"!\"), 'item-found');\n\n                  // If the item should be automatically added to inventory\n                  if (feature.autoTake) {\n                    this.gameState.addToInventory(_objectSpread({\n                      id: itemId\n                    }, item));\n                    this.terminal.print(\"You take the \".concat(item.name, \".\"), 'action-result');\n                  }\n                }\n              }\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      // Check if it's a visible item in the location\n      if (location.items) {\n        var _iterator2 = _createForOfIteratorHelper(location.items),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _itemId = _step2.value;\n            var _item = this.items[_itemId];\n            if (_item && (!_item.hidden || this.gameState.flags[_item.revealFlag])) {\n              if (_item.keywords.some(function (keyword) {\n                return target.includes(keyword);\n              })) {\n                this.terminal.print(_item.description, 'examine-result');\n                return;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      // Check if it's an NPC in the location\n      if (location.npcs) {\n        var _iterator3 = _createForOfIteratorHelper(location.npcs),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var npcId = _step3.value;\n            var npc = this.npcs[npcId];\n            if (npc && (!npc.hidden || this.gameState.flags[npc.revealFlag])) {\n              if (npc.keywords.some(function (keyword) {\n                return target.includes(keyword);\n              })) {\n                this.terminal.print(npc.description, 'examine-result');\n                return;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      // Check if it's an item in the inventory\n      var _iterator4 = _createForOfIteratorHelper(this.gameState.inventory),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _item2 = _step4.value;\n          if (_item2.keywords.some(function (keyword) {\n            return target.includes(keyword);\n          })) {\n            this.terminal.print(_item2.description, 'examine-result');\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.terminal.print(\"You don't see anything special about the \".concat(target, \".\"), 'error-message');\n    }\n  }, {\n    key: \"takeItem\",\n    value: function takeItem(itemName) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location || !location.items) {\n        this.terminal.print(\"There's nothing here to take.\", 'error-message');\n        return;\n      }\n\n      // Find the item in the current location\n      for (var i = 0; i < location.items.length; i++) {\n        var itemId = location.items[i];\n        var item = this.items[itemId];\n        if (item && (!item.hidden || this.gameState.flags[item.revealFlag])) {\n          if (item.keywords.some(function (keyword) {\n            return itemName.includes(keyword);\n          })) {\n            // Check if item can be taken\n            if (item.takeable === false) {\n              this.terminal.print(item.cantTakeMessage || \"You can't take the \".concat(item.name, \".\"), 'error-message');\n              return;\n            }\n\n            // Remove from location\n            location.items.splice(i, 1);\n\n            // Add to inventory\n            this.gameState.addToInventory(_objectSpread({\n              id: itemId\n            }, item));\n            this.terminal.print(\"You take the \".concat(item.name, \".\"), 'action-result');\n\n            // Check for memory triggers\n            if (this.memorySystem) {\n              this.memorySystem.checkTriggers('take', itemId, {\n                item: item\n              });\n            }\n\n            // Check for special events when taking the item\n            if (item.onTake) {\n              item.onTake(this.gameState, this.terminal);\n            }\n            return;\n          }\n        }\n      }\n      this.terminal.print(\"You don't see any \".concat(itemName, \" here.\"), 'error-message');\n    }\n  }, {\n    key: \"dropItem\",\n    value: function dropItem(itemName) {\n      // Find the item in inventory\n      for (var i = 0; i < this.gameState.inventory.length; i++) {\n        var item = this.gameState.inventory[i];\n        if (item.keywords.some(function (keyword) {\n          return itemName.includes(keyword);\n        })) {\n          // Check if item can be dropped\n          if (item.droppable === false) {\n            this.terminal.print(item.cantDropMessage || \"You can't drop the \".concat(item.name, \".\"), 'error-message');\n            return;\n          }\n\n          // Remove from inventory\n          var droppedItem = this.gameState.removeFromInventory(item.id);\n\n          // Add to current location\n          var locationId = this.gameState.currentLocation;\n          var location = this.locations[locationId];\n          if (!location.items) {\n            location.items = [];\n          }\n          location.items.push(item.id);\n          this.terminal.print(\"You drop the \".concat(item.name, \".\"), 'action-result');\n\n          // Check for special events when dropping the item\n          if (item.onDrop) {\n            item.onDrop(this.gameState, this.terminal, locationId);\n          }\n          return;\n        }\n      }\n      this.terminal.print(\"You don't have any \".concat(itemName, \".\"), 'error-message');\n    }\n  }, {\n    key: \"useItem\",\n    value: function useItem(itemName) {\n      // Find the item in inventory\n      var _iterator5 = _createForOfIteratorHelper(this.gameState.inventory),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _item3 = _step5.value;\n          if (_item3.keywords.some(function (keyword) {\n            return itemName.includes(keyword);\n          })) {\n            // Check if item can be used\n            if (_item3.usable === false) {\n              this.terminal.print(_item3.cantUseMessage || \"You can't use the \".concat(_item3.name, \".\"), 'error-message');\n              return;\n            }\n\n            // Check if item has a use handler\n            if (_item3.onUse) {\n              _item3.onUse(this.gameState, this.terminal, this);\n              return;\n            } else {\n              this.terminal.print(\"You're not sure how to use the \".concat(_item3.name, \".\"), 'error-message');\n              return;\n            }\n          }\n        }\n\n        // Check if it's a visible item in the location\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (location && location.items) {\n        var _iterator6 = _createForOfIteratorHelper(location.items),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var itemId = _step6.value;\n            var item = this.items[itemId];\n            if (item && (!item.hidden || this.gameState.flags[item.revealFlag])) {\n              if (item.keywords.some(function (keyword) {\n                return itemName.includes(keyword);\n              })) {\n                // Check if item can be used\n                if (item.usable === false) {\n                  this.terminal.print(item.cantUseMessage || \"You can't use the \".concat(item.name, \".\"), 'error-message');\n                  return;\n                }\n\n                // Check if item has a use handler\n                if (item.onUse) {\n                  item.onUse(this.gameState, this.terminal, this);\n                  return;\n                } else {\n                  this.terminal.print(\"You're not sure how to use the \".concat(item.name, \".\"), 'error-message');\n                  return;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n      this.terminal.print(\"You don't see any \".concat(itemName, \" that you can use.\"), 'error-message');\n    }\n  }, {\n    key: \"equipItem\",\n    value: function equipItem(itemName) {\n      // Find the item in inventory\n      var _iterator7 = _createForOfIteratorHelper(this.gameState.inventory),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var item = _step7.value;\n          if (item.keywords.some(function (keyword) {\n            return itemName.includes(keyword);\n          })) {\n            // Check if item can be equipped\n            if (item.type !== 'weapon' && item.type !== 'armor') {\n              this.terminal.print(\"You can't equip the \".concat(item.name, \".\"), 'error-message');\n              return;\n            }\n\n            // Equip the item\n            if (item.type === 'weapon') {\n              this.gameState.equipWeapon(item.id);\n              this.terminal.print(\"You equip the \".concat(item.name, \".\"), 'action-result');\n            } else if (item.type === 'armor') {\n              this.gameState.equipArmor(item.id);\n              this.terminal.print(\"You equip the \".concat(item.name, \".\"), 'action-result');\n            }\n\n            // Check for special events when equipping the item\n            if (item.onEquip) {\n              item.onEquip(this.gameState, this.terminal);\n            }\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      this.terminal.print(\"You don't have any \".concat(itemName, \" to equip.\"), 'error-message');\n    }\n  }, {\n    key: \"showInventory\",\n    value: function showInventory() {\n      if (this.gameState.inventory.length === 0) {\n        this.terminal.print(\"You aren't carrying anything.\", 'inventory-empty');\n        return;\n      }\n      this.terminal.print(\"You are carrying:\", 'inventory-header');\n      var _iterator8 = _createForOfIteratorHelper(this.gameState.inventory),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var item = _step8.value;\n          var itemText = \"- \".concat(item.name);\n\n          // Add equipped indicator\n          if (this.gameState.equippedWeapon && this.gameState.equippedWeapon.id === item.id) {\n            itemText += \" (equipped as weapon)\";\n          } else if (this.gameState.equippedArmor && this.gameState.equippedArmor.id === item.id) {\n            itemText += \" (equipped as armor)\";\n          }\n          this.terminal.print(itemText, 'inventory-item');\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"talkToNPC\",\n    value: function talkToNPC(npcName) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location || !location.npcs) {\n        this.terminal.print(\"There's no one here to talk to.\", 'error-message');\n        return;\n      }\n\n      // Find the NPC in the current location\n      var _iterator9 = _createForOfIteratorHelper(location.npcs),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var npcId = _step9.value;\n          var npc = this.npcs[npcId];\n          if (npc && (!npc.hidden || this.gameState.flags[npc.revealFlag])) {\n            if (npc.keywords.some(function (keyword) {\n              return npcName.includes(keyword);\n            })) {\n              // Check if NPC can be talked to\n              if (npc.talkable === false) {\n                this.terminal.print(npc.cantTalkMessage || \"\".concat(npc.name, \" doesn't seem interested in talking.\"), 'error-message');\n                return;\n              }\n\n              // Check if NPC has a talk handler\n              if (npc.onTalk) {\n                npc.onTalk(this.gameState, this.terminal, this);\n                return;\n              } else {\n                this.terminal.print(\"\".concat(npc.name, \" has nothing to say.\"), 'error-message');\n                return;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      this.terminal.print(\"You don't see anyone called \".concat(npcName, \" here.\"), 'error-message');\n    }\n  }, {\n    key: \"attackTarget\",\n    value: function attackTarget(targetName) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location || !location.npcs) {\n        this.terminal.print(\"There's no one here to attack.\", 'error-message');\n        return;\n      }\n\n      // Find the NPC in the current location\n      var _iterator0 = _createForOfIteratorHelper(location.npcs),\n        _step0;\n      try {\n        for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n          var npcId = _step0.value;\n          var npc = this.npcs[npcId];\n          if (npc && (!npc.hidden || this.gameState.flags[npc.revealFlag])) {\n            if (npc.keywords.some(function (keyword) {\n              return targetName.includes(keyword);\n            })) {\n              // Check if NPC can be attacked\n              if (npc.attackable === false) {\n                this.terminal.print(npc.cantAttackMessage || \"You can't attack \".concat(npc.name, \".\"), 'error-message');\n                return;\n              }\n\n              // Check if combat system is available\n              if (this.combatSystem) {\n                this.combatSystem.initiateCombat(npc);\n                return;\n              } else {\n                // Fallback if no combat system\n                if (npc.onAttack) {\n                  npc.onAttack(this.gameState, this.terminal, this);\n                  return;\n                } else {\n                  this.terminal.print(\"You attack \".concat(npc.name, \" but nothing happens.\"), 'error-message');\n                  return;\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator0.e(err);\n      } finally {\n        _iterator0.f();\n      }\n      this.terminal.print(\"You don't see anyone called \".concat(targetName, \" here.\"), 'error-message');\n    }\n  }, {\n    key: \"searchTarget\",\n    value: function searchTarget(targetName) {\n      var locationId = this.gameState.currentLocation;\n      var location = this.locations[locationId];\n      if (!location || !location.npcs) {\n        this.terminal.print(\"There's nothing here to search.\", 'error-message');\n        return;\n      }\n\n      // Find the NPC (corpse) in the current location\n      var _iterator1 = _createForOfIteratorHelper(location.npcs),\n        _step1;\n      try {\n        for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n          var npcId = _step1.value;\n          var npc = this.npcs[npcId];\n          if (npc && (!npc.hidden || this.gameState.flags[npc.revealFlag])) {\n            if (npc.keywords.some(function (keyword) {\n              return targetName.includes(keyword);\n            })) {\n              // Check if it's a corpse that can be searched\n              if (npc.isCorpse) {\n                // Check if already searched\n                if (npc.searched) {\n                  this.terminal.print(\"You have already searched the \".concat(npc.name, \".\"), 'action-result');\n                  return;\n                }\n\n                // Mark as searched\n                npc.searched = true;\n\n                // Check for loot\n                if (npc.loot && npc.loot.length > 0) {\n                  this.terminal.print(\"You search the \".concat(npc.name, \" and find:\"), 'action-result');\n\n                  // Add loot items to the current location so they can be taken individually\n                  if (!location.items) {\n                    location.items = [];\n                  }\n                  var _iterator10 = _createForOfIteratorHelper(npc.loot),\n                    _step10;\n                  try {\n                    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                      var lootItem = _step10.value;\n                      var item = this.items[lootItem.id];\n                      if (item) {\n                        // Add item to location items if not already there\n                        if (!location.items.includes(lootItem.id)) {\n                          location.items.push(lootItem.id);\n                        }\n                        this.terminal.print(\"- \".concat(item.name), 'item-found');\n                      }\n                    }\n                  } catch (err) {\n                    _iterator10.e(err);\n                  } finally {\n                    _iterator10.f();\n                  }\n                  this.terminal.print(\"You can 'take' or 'get' each item individually.\", 'action-hint');\n                } else {\n                  this.terminal.print(\"You search the \".concat(npc.name, \" but find nothing of value.\"), 'action-result');\n                }\n                return;\n              } else {\n                this.terminal.print(\"You can't search \".concat(npc.name, \".\"), 'error-message');\n                return;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator1.e(err);\n      } finally {\n        _iterator1.f();\n      }\n      this.terminal.print(\"You don't see any \".concat(targetName, \" here to search.\"), 'error-message');\n    }\n  }, {\n    key: \"triggerWolfDeathStory\",\n    value: function triggerWolfDeathStory() {\n      var _this3 = this;\n      // Clear the trigger flag\n      this.gameState.triggerWolfDeathStory = false;\n\n      // Display the dramatic death story\n      this.terminal.print(\"\\n\", 'story-text');\n      this.terminal.print(\"As you turn your back on the terrified children and attempt to flee...\", 'story-text');\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nThe twisted wolf's eyes gleam with predatory hunger. It sees your cowardice.\", 'story-text');\n      }, 1500);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nWith lightning speed, the beast lunges forward, its massive jaws clamping down on your leg.\", 'story-text');\n      }, 3000);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nYou scream in agony as razor-sharp teeth tear through flesh and bone.\", 'story-text');\n      }, 4500);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nThe children's cries echo behind you as the wolf drags you into the darkness.\", 'story-text');\n      }, 6000);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nYour vision fades as the creature's claws rake across your chest...\", 'story-text');\n      }, 7500);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nIn your final moments, you hear the wolf's satisfied growl and the children's screams growing distant.\", 'story-text');\n      }, 9000);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\nYou have failed them. You have failed yourself.\", 'story-text');\n      }, 10500);\n      setTimeout(function () {\n        _this3.terminal.print(\"\\n*** YOU HAVE DIED ***\", 'error-message');\n        // Trigger game over and return to title screen\n        if (_this3.combatSystem && _this3.combatSystem.playerDefeated) {\n          _this3.combatSystem.playerDefeated();\n        } else {\n          // Fallback game over handling\n          _this3.gameOverReturnToTitle();\n        }\n      }, 12000);\n    }\n  }, {\n    key: \"gameOverReturnToTitle\",\n    value: function gameOverReturnToTitle() {\n      this.terminal.print(\"\\nPress Enter to return to title screen...\", 'game-over-message');\n\n      // Set up special Enter key handler for returning to title\n      this.setupGameOverHandler();\n    }\n  }, {\n    key: \"setupGameOverHandler\",\n    value: function setupGameOverHandler() {\n      var _this4 = this;\n      // Disable normal terminal processing\n      this.terminal.disable();\n\n      // Create a special keydown handler for Enter key\n      var _gameOverHandler = function gameOverHandler(event) {\n        if (event.key === 'Enter') {\n          event.preventDefault();\n\n          // Remove this handler\n          document.removeEventListener('keydown', _gameOverHandler);\n\n          // Return to title screen\n          _this4.returnToTitleScreen();\n        }\n      };\n\n      // Add the handler to the document\n      document.addEventListener('keydown', _gameOverHandler);\n    }\n  }, {\n    key: \"returnToTitleScreen\",\n    value: function returnToTitleScreen() {\n      // Re-enable terminal\n      this.terminal.enable();\n\n      // Clear terminal\n      this.terminal.clear();\n\n      // Show title screen\n      var screens = document.querySelectorAll('.screen');\n      screens.forEach(function (screen) {\n        return screen.classList.remove('active');\n      });\n      var titleScreen = document.getElementById('title-screen');\n      if (titleScreen) {\n        titleScreen.classList.add('active');\n      }\n    }\n  }, {\n    key: \"showHelp\",\n    value: function showHelp() {\n      this.terminal.print(\"Available commands:\", 'help-header');\n      this.terminal.print(\"- look / examine [object]: Look around or examine something specific\", 'help-item');\n      this.terminal.print(\"- go/move [direction]: Move in a direction (north, south, east, west)\", 'help-item');\n      this.terminal.print(\"- take/get [item]: Pick up an item\", 'help-item');\n      this.terminal.print(\"- drop [item]: Drop an item from your inventory\", 'help-item');\n      this.terminal.print(\"- use [item]: Use an item\", 'help-item');\n      this.terminal.print(\"- equip [item]: Equip a weapon or armor\", 'help-item');\n      this.terminal.print(\"- inventory/inv: Check what you're carrying\", 'help-item');\n      this.terminal.print(\"- talk to [person]: Talk to someone\", 'help-item');\n      this.terminal.print(\"- attack [target]: Attack a creature or person\", 'help-item');\n      this.terminal.print(\"- search/loot [target]: Search a corpse for items\", 'help-item');\n      this.terminal.print(\"- status: Check your health and condition\", 'help-item');\n      this.terminal.print(\"- save: Save your game progress\", 'help-item');\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus() {\n      this.terminal.print(\"Name: \".concat(this.gameState.playerName), 'status-item');\n      this.terminal.print(\"Health: \".concat(this.gameState.playerHealth, \"/\").concat(this.gameState.playerMaxHealth), 'status-item');\n      if (this.gameState.equippedWeapon) {\n        this.terminal.print(\"Weapon: \".concat(this.gameState.equippedWeapon.name), 'status-item');\n      } else {\n        this.terminal.print(\"Weapon: None\", 'status-item');\n      }\n      if (this.gameState.equippedArmor) {\n        this.terminal.print(\"Armor: \".concat(this.gameState.equippedArmor.name), 'status-item');\n      } else {\n        this.terminal.print(\"Armor: None\", 'status-item');\n      }\n      this.terminal.print(\"Memory recovered: \".concat(this.gameState.memoryRecovered, \"%\"), 'status-item');\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // Update game logic here if needed\n      // This method is called every frame from the game loop\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/storyEngine.js\n\n}");

/***/ }),

/***/ "./src/js/terminal.js":
/*!****************************!*\
  !*** ./src/js/terminal.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Terminal: () => (/* binding */ Terminal)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Terminal system for text input and output\n\nvar Terminal = /*#__PURE__*/function () {\n  function Terminal(outputElementId, inputElementId) {\n    _classCallCheck(this, Terminal);\n    this.outputElement = typeof outputElementId === 'string' ? document.getElementById(outputElementId) : outputElementId;\n    this.inputElement = typeof inputElementId === 'string' ? document.getElementById(inputElementId) : inputElementId;\n    this.commandHistory = [];\n    this.historyIndex = -1;\n    this.commandHandlers = {};\n    if (!this.outputElement || !this.inputElement) {\n      console.error('Terminal: Could not find required DOM elements');\n      return;\n    }\n    this.init();\n  }\n  return _createClass(Terminal, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      // Set up input event listener\n      this.inputElement.addEventListener('keydown', function (event) {\n        if (event.key === 'Enter') {\n          event.preventDefault();\n          _this.processInput();\n        } else if (event.key === 'ArrowUp') {\n          event.preventDefault();\n          _this.navigateHistory(-1);\n        } else if (event.key === 'ArrowDown') {\n          event.preventDefault();\n          _this.navigateHistory(1);\n        }\n      });\n\n      // Focus the input element\n      this.inputElement.focus();\n\n      // Add event listener to refocus input when clicking anywhere in the terminal\n      document.getElementById('terminal-container').addEventListener('click', function () {\n        _this.inputElement.focus();\n      });\n    }\n  }, {\n    key: \"processInput\",\n    value: function processInput() {\n      var input = this.inputElement.value.trim();\n      if (input === '') return;\n\n      // Add to command history\n      this.commandHistory.push(input);\n      this.historyIndex = this.commandHistory.length;\n\n      // Display the input\n      this.print(input, 'player-input');\n\n      // Clear the input field\n      this.inputElement.value = '';\n\n      // Process the command\n      this.parseCommand(input);\n    }\n  }, {\n    key: \"navigateHistory\",\n    value: function navigateHistory(direction) {\n      var _this2 = this;\n      if (this.commandHistory.length === 0) return;\n      this.historyIndex += direction;\n\n      // Keep index within bounds\n      if (this.historyIndex < 0) this.historyIndex = 0;\n      if (this.historyIndex > this.commandHistory.length) this.historyIndex = this.commandHistory.length;\n\n      // Set input value from history or clear it if at the end\n      if (this.historyIndex === this.commandHistory.length) {\n        this.inputElement.value = '';\n      } else {\n        this.inputElement.value = this.commandHistory[this.historyIndex];\n      }\n\n      // Move cursor to end of input\n      setTimeout(function () {\n        _this2.inputElement.selectionStart = _this2.inputElement.value.length;\n        _this2.inputElement.selectionEnd = _this2.inputElement.value.length;\n      }, 0);\n    }\n  }, {\n    key: \"parseCommand\",\n    value: function parseCommand(input) {\n      // Convert to lowercase for case-insensitive matching\n      var lowerInput = input.toLowerCase();\n\n      // Check for registered command handlers\n      for (var _i = 0, _Object$entries = Object.entries(this.commandHandlers); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          pattern = _Object$entries$_i[0],\n          handler = _Object$entries$_i[1];\n        if (lowerInput.match(new RegExp(pattern, 'i'))) {\n          handler(input);\n          return;\n        }\n      }\n\n      // If no handler matched, show default message\n      this.print(\"I don't understand that command.\", 'error-message');\n    }\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(pattern, handler) {\n      this.commandHandlers[pattern] = handler;\n    }\n  }, {\n    key: \"print\",\n    value: function print(message) {\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var messageElement = document.createElement('div');\n      messageElement.className = \"message \".concat(className);\n      messageElement.textContent = message;\n      this.outputElement.appendChild(messageElement);\n\n      // Scroll to bottom\n      this.outputElement.scrollTop = this.outputElement.scrollHeight;\n    }\n  }, {\n    key: \"getHistory\",\n    value: function getHistory() {\n      // Return the current terminal output as HTML\n      return this.outputElement.innerHTML;\n    }\n  }, {\n    key: \"setHistory\",\n    value: function setHistory(historyHTML) {\n      // Restore terminal output from saved HTML\n      if (typeof historyHTML === 'string') {\n        this.outputElement.innerHTML = historyHTML;\n      } else if (Array.isArray(historyHTML)) {\n        // Handle legacy array format\n        this.outputElement.innerHTML = historyHTML.join('');\n      }\n\n      // Scroll to bottom\n      this.outputElement.scrollTop = this.outputElement.scrollHeight;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.outputElement.innerHTML = '';\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.inputElement.disabled = true;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.inputElement.disabled = false;\n      this.inputElement.focus();\n    }\n  }, {\n    key: \"printHTML\",\n    value: function printHTML(html) {\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var messageElement = document.createElement('div');\n      messageElement.className = \"message \".concat(className);\n      messageElement.innerHTML = html;\n      this.outputElement.appendChild(messageElement);\n\n      // Scroll to bottom\n      this.outputElement.scrollTop = this.outputElement.scrollHeight;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/terminal.js\n\n}");

/***/ }),

/***/ "./src/js/webgl.js":
/*!*************************!*\
  !*** ./src/js/webgl.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initWebGL: () => (/* binding */ initWebGL)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// WebGL rendering system for the game\nvar WebGLRenderer = /*#__PURE__*/function () {\n  function WebGLRenderer(canvas) {\n    _classCallCheck(this, WebGLRenderer);\n    this.canvas = canvas;\n    this.gl = null;\n    this.program = null;\n    this.textures = {};\n    this.currentScene = null;\n    this.init();\n  }\n  return _createClass(WebGLRenderer, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      // Initialize WebGL context\n      try {\n        this.gl = this.canvas.getContext('webgl2') || this.canvas.getContext('webgl');\n        if (!this.gl) {\n          throw new Error('WebGL not supported');\n        }\n\n        // Set canvas size to match container\n        this.resizeCanvas();\n        window.addEventListener('resize', function () {\n          return _this.resizeCanvas();\n        });\n\n        // Initialize shaders and program\n        this.initShaders();\n\n        // Set up buffers\n        this.initBuffers();\n\n        // Enable depth testing\n        this.gl.enable(this.gl.DEPTH_TEST);\n        this.gl.depthFunc(this.gl.LEQUAL);\n\n        // Clear color\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        console.log('WebGL initialized successfully');\n      } catch (error) {\n        console.error('WebGL initialization failed:', error);\n\n        // Display fallback message on canvas\n        var ctx = this.canvas.getContext('2d');\n        if (ctx) {\n          ctx.fillStyle = '#333';\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          ctx.font = '16px Courier New';\n          ctx.fillStyle = '#f00';\n          ctx.textAlign = 'center';\n          ctx.fillText('WebGL not supported or initialization failed.', this.canvas.width / 2, this.canvas.height / 2);\n        }\n      }\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas() {\n      var container = this.canvas.parentElement;\n      this.canvas.width = container.clientWidth;\n      this.canvas.height = container.clientHeight;\n      if (this.gl) {\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n      }\n    }\n  }, {\n    key: \"initShaders\",\n    value: function initShaders() {\n      // Vertex shader source\n      var vsSource = \"\\n      attribute vec4 aVertexPosition;\\n      attribute vec2 aTextureCoord;\\n      \\n      uniform mat4 uModelViewMatrix;\\n      uniform mat4 uProjectionMatrix;\\n      \\n      varying highp vec2 vTextureCoord;\\n      \\n      void main() {\\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\\n        vTextureCoord = aTextureCoord;\\n      }\\n    \";\n\n      // Fragment shader source\n      var fsSource = \"\\n      varying highp vec2 vTextureCoord;\\n      \\n      uniform sampler2D uSampler;\\n      \\n      void main() {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n      }\\n    \";\n\n      // Create shader program\n      var vertexShader = this.loadShader(this.gl.VERTEX_SHADER, vsSource);\n      var fragmentShader = this.loadShader(this.gl.FRAGMENT_SHADER, fsSource);\n      this.program = this.gl.createProgram();\n      this.gl.attachShader(this.program, vertexShader);\n      this.gl.attachShader(this.program, fragmentShader);\n      this.gl.linkProgram(this.program);\n      if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n        throw new Error('Unable to initialize the shader program: ' + this.gl.getProgramInfoLog(this.program));\n      }\n\n      // Store attribute and uniform locations\n      this.programInfo = {\n        program: this.program,\n        attribLocations: {\n          vertexPosition: this.gl.getAttribLocation(this.program, 'aVertexPosition'),\n          textureCoord: this.gl.getAttribLocation(this.program, 'aTextureCoord')\n        },\n        uniformLocations: {\n          projectionMatrix: this.gl.getUniformLocation(this.program, 'uProjectionMatrix'),\n          modelViewMatrix: this.gl.getUniformLocation(this.program, 'uModelViewMatrix'),\n          uSampler: this.gl.getUniformLocation(this.program, 'uSampler')\n        }\n      };\n    }\n  }, {\n    key: \"loadShader\",\n    value: function loadShader(type, source) {\n      var shader = this.gl.createShader(type);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n        var info = this.gl.getShaderInfoLog(shader);\n        this.gl.deleteShader(shader);\n        throw new Error('An error occurred compiling the shaders: ' + info);\n      }\n      return shader;\n    }\n  }, {\n    key: \"initBuffers\",\n    value: function initBuffers() {\n      // Create position buffer for a quad\n      var positions = [-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0];\n      this.positionBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(positions), this.gl.STATIC_DRAW);\n\n      // Create texture coordinate buffer\n      var textureCoordinates = [0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0];\n      this.textureCoordBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), this.gl.STATIC_DRAW);\n\n      // Create index buffer\n      var indices = [0, 1, 2, 0, 2, 3];\n      this.indexBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: \"loadTexture\",\n    value: function loadTexture(url) {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        var texture = _this2.gl.createTexture();\n        _this2.gl.bindTexture(_this2.gl.TEXTURE_2D, texture);\n\n        // Fill with a placeholder color until the image loads\n        _this2.gl.texImage2D(_this2.gl.TEXTURE_2D, 0, _this2.gl.RGBA, 1, 1, 0, _this2.gl.RGBA, _this2.gl.UNSIGNED_BYTE, new Uint8Array([128, 128, 128, 255]));\n\n        // Load the image\n        var image = new Image();\n        image.onload = function () {\n          _this2.gl.bindTexture(_this2.gl.TEXTURE_2D, texture);\n          _this2.gl.texImage2D(_this2.gl.TEXTURE_2D, 0, _this2.gl.RGBA, _this2.gl.RGBA, _this2.gl.UNSIGNED_BYTE, image);\n\n          // Generate mipmaps if the image dimensions are powers of 2\n          if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n            _this2.gl.generateMipmap(_this2.gl.TEXTURE_2D);\n          } else {\n            // Otherwise set texture parameters for non-power-of-2 textures\n            _this2.gl.texParameteri(_this2.gl.TEXTURE_2D, _this2.gl.TEXTURE_WRAP_S, _this2.gl.CLAMP_TO_EDGE);\n            _this2.gl.texParameteri(_this2.gl.TEXTURE_2D, _this2.gl.TEXTURE_WRAP_T, _this2.gl.CLAMP_TO_EDGE);\n            _this2.gl.texParameteri(_this2.gl.TEXTURE_2D, _this2.gl.TEXTURE_MIN_FILTER, _this2.gl.LINEAR);\n          }\n          resolve(texture);\n        };\n        image.onerror = function () {\n          reject(new Error(\"Failed to load texture: \".concat(url)));\n        };\n        image.src = url;\n      });\n      function isPowerOf2(value) {\n        return (value & value - 1) === 0;\n      }\n    }\n  }, {\n    key: \"loadScene\",\n    value: function () {\n      var _loadScene = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(sceneName) {\n        var texture, formats, _i, _formats, format, _t, _t2;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              // Load scene texture - try different formats\n              formats = ['svg', 'jpg', 'png'];\n              _i = 0, _formats = formats;\n            case 1:\n              if (!(_i < _formats.length)) {\n                _context.n = 6;\n                break;\n              }\n              format = _formats[_i];\n              _context.p = 2;\n              _context.n = 3;\n              return this.loadTexture(\"assets/images/\".concat(sceneName, \".\").concat(format));\n            case 3:\n              texture = _context.v;\n              return _context.a(3, 6);\n            case 4:\n              _context.p = 4;\n              _t = _context.v;\n            case 5:\n              _i++;\n              _context.n = 1;\n              break;\n            case 6:\n              if (texture) {\n                _context.n = 8;\n                break;\n              }\n              _context.n = 7;\n              return this.loadTexture('assets/images/placeholder.svg');\n            case 7:\n              texture = _context.v;\n            case 8:\n              this.textures[sceneName] = texture;\n              this.currentScene = sceneName;\n              return _context.a(2, true);\n            case 9:\n              _context.p = 9;\n              _t2 = _context.v;\n              console.error('Failed to load scene:', _t2);\n              return _context.a(2, false);\n          }\n        }, _callee, this, [[2, 4], [0, 9]]);\n      }));\n      function loadScene(_x) {\n        return _loadScene.apply(this, arguments);\n      }\n      return loadScene;\n    }()\n  }, {\n    key: \"render\",\n    value: function render(sceneName) {\n      var _this3 = this;\n      if (!this.gl) return;\n\n      // Try to load the scene if it's not already loaded\n      if (this.currentScene !== sceneName) {\n        if (!this.textures[sceneName]) {\n          this.loadScene(sceneName).then(function () {\n            return _this3.render(sceneName);\n          });\n          return;\n        }\n        this.currentScene = sceneName;\n      }\n\n      // Clear the canvas\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n      // If we don't have the texture yet, don't render\n      if (!this.textures[sceneName]) return;\n\n      // Set up perspective matrix\n      var fieldOfView = 45 * Math.PI / 180;\n      var aspect = this.canvas.clientWidth / this.canvas.clientHeight;\n      var zNear = 0.1;\n      var zFar = 100.0;\n      var projectionMatrix = mat4.create();\n      mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\n      // Set up model view matrix\n      var modelViewMatrix = mat4.create();\n      mat4.translate(modelViewMatrix, modelViewMatrix, [0.0, 0.0, -4.0]);\n\n      // Bind position buffer\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n      this.gl.vertexAttribPointer(this.programInfo.attribLocations.vertexPosition, 3,\n      // numComponents\n      this.gl.FLOAT,\n      // type\n      false,\n      // normalize\n      0,\n      // stride\n      0 // offset\n      );\n      this.gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexPosition);\n\n      // Bind texture coordinate buffer\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\n      this.gl.vertexAttribPointer(this.programInfo.attribLocations.textureCoord, 2,\n      // numComponents\n      this.gl.FLOAT,\n      // type\n      false,\n      // normalize\n      0,\n      // stride\n      0 // offset\n      );\n      this.gl.enableVertexAttribArray(this.programInfo.attribLocations.textureCoord);\n\n      // Bind index buffer\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n      // Use shader program\n      this.gl.useProgram(this.programInfo.program);\n\n      // Set uniforms\n      this.gl.uniformMatrix4fv(this.programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n      this.gl.uniformMatrix4fv(this.programInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\n\n      // Bind texture\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[sceneName]);\n      this.gl.uniform1i(this.programInfo.uniformLocations.uSampler, 0);\n\n      // Draw\n      this.gl.drawElements(this.gl.TRIANGLES, 6,\n      // vertex count\n      this.gl.UNSIGNED_SHORT,\n      // type\n      0 // offset\n      );\n    }\n\n    // Set the current scene for rendering\n  }, {\n    key: \"setScene\",\n    value: function setScene(sceneData) {\n      if (!sceneData) {\n        console.warn('No scene data provided to setScene');\n        return;\n      }\n\n      // Handle both string scene names and scene objects\n      if (typeof sceneData === 'string') {\n        // Scene data is just a scene name string\n        this.loadScene(sceneData);\n      } else {\n        // Scene data is an object with properties\n        this.currentSceneData = sceneData;\n\n        // If scene has a background, load it as the current scene\n        if (sceneData.background) {\n          var sceneName = sceneData.id || sceneData.background.replace(/\\.[^/.]+$/, \"\"); // Remove extension\n          this.loadScene(sceneName);\n        } else if (sceneData.id) {\n          this.loadScene(sceneData.id);\n        }\n      }\n    }\n\n    // Memory flash effect methods\n  }, {\n    key: \"setMemoryFlashImage\",\n    value: function setMemoryFlashImage(imageUrl) {\n      // Store the flash image for later use\n      this.memoryFlashImage = imageUrl;\n    }\n  }, {\n    key: \"updateMemoryFlash\",\n    value: function updateMemoryFlash(progress, memoryData) {\n      // Update memory flash effect based on progress (0.0 to 1.0)\n      this.memoryFlashProgress = progress;\n      this.currentMemoryData = memoryData;\n\n      // Apply flash effect to the current scene\n      if (this.gl && this.currentScene) {\n        // Create a flash overlay effect\n        var flashIntensity = Math.sin(progress * Math.PI) * 0.3; // Fade in and out\n        this.applyFlashOverlay(flashIntensity);\n      }\n    }\n  }, {\n    key: \"clearMemoryFlash\",\n    value: function clearMemoryFlash() {\n      // Clear memory flash effects\n      this.memoryFlashProgress = 0;\n      this.currentMemoryData = null;\n      this.memoryFlashImage = null;\n    }\n  }, {\n    key: \"applyFlashOverlay\",\n    value: function applyFlashOverlay(intensity) {\n      if (!this.gl || intensity <= 0) return;\n\n      // Save current blend state\n      var blendEnabled = this.gl.isEnabled(this.gl.BLEND);\n\n      // Enable blending for overlay effect\n      this.gl.enable(this.gl.BLEND);\n      this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n      // Create a white overlay with the specified intensity\n      this.gl.clearColor(1.0, 1.0, 1.0, intensity);\n\n      // Restore previous blend state\n      if (!blendEnabled) {\n        this.gl.disable(this.gl.BLEND);\n      }\n    }\n  }]);\n}(); // Helper function to create a mat4 identity matrix\nvar mat4 = {\n  create: function create() {\n    return new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n  },\n  perspective: function perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2);\n    var nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n  },\n  translate: function translate(out, a, v) {\n    var x = v[0],\n      y = v[1],\n      z = v[2];\n    var a00, a01, a02, a03;\n    var a10, a11, a12, a13;\n    var a20, a21, a22, a23;\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0];\n      a01 = a[1];\n      a02 = a[2];\n      a03 = a[3];\n      a10 = a[4];\n      a11 = a[5];\n      a12 = a[6];\n      a13 = a[7];\n      a20 = a[8];\n      a21 = a[9];\n      a22 = a[10];\n      a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n};\n\n// Export the WebGL initialization function\nfunction initWebGL(canvas) {\n  return new WebGLRenderer(canvas);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/webgl.js\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;